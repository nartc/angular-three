"use strict";(self.webpackChunksandbox=self.webpackChunksandbox||[]).push([[716],{8875:(Yn,Wt,fe)=>{fe.d(Wt,{H:()=>yt});var Le=fe(4848),D=fe(7584),mt=fe(3301);function yt(ot=0,Ve,je=D.P){let gt=-1;return null!=Ve&&((0,mt.K)(Ve)?je=Ve:gt=Ve),new Le.y(qt=>{let tn=function wt(ot){return ot instanceof Date&&!isNaN(ot)}(ot)?+ot-je.now():ot;tn<0&&(tn=0);let Nn=0;return je.schedule(function(){qt.closed||(qt.next(Nn++),0<=gt?this.schedule(void 0,gt):qt.complete())},tn)})}},4590:(Yn,Wt,fe)=>{fe.d(Wt,{R:()=>yt});var Le=fe(557),D=fe(8794),mt=fe(3212),wt=fe(5148);function yt(ot){return(0,Le.e)((Ve,je)=>{(0,mt.Xf)(ot).subscribe((0,D.x)(je,()=>je.complete(),wt.Z)),!je.closed&&Ve.subscribe(je)})}},9955:(Yn,Wt,fe)=>{fe.d(Wt,{o:()=>yt});var Le=fe(3619);class D extends Le.w0{constructor(Ve,je){super()}schedule(Ve,je=0){return this}}const mt={setInterval(ot,Ve,...je){const{delegate:gt}=mt;return gt?.setInterval?gt.setInterval(ot,Ve,...je):setInterval(ot,Ve,...je)},clearInterval(ot){const{delegate:Ve}=mt;return(Ve?.clearInterval||clearInterval)(ot)},delegate:void 0};var wt=fe(8595);class yt extends D{constructor(Ve,je){super(Ve,je),this.scheduler=Ve,this.work=je,this.pending=!1}schedule(Ve,je=0){if(this.closed)return this;this.state=Ve;const gt=this.id,qt=this.scheduler;return null!=gt&&(this.id=this.recycleAsyncId(qt,gt,je)),this.pending=!0,this.delay=je,this.id=this.id||this.requestAsyncId(qt,this.id,je),this}requestAsyncId(Ve,je,gt=0){return mt.setInterval(Ve.flush.bind(Ve,this),gt)}recycleAsyncId(Ve,je,gt=0){if(null!=gt&&this.delay===gt&&!1===this.pending)return je;mt.clearInterval(je)}execute(Ve,je){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const gt=this._execute(Ve,je);if(gt)return gt;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(Ve,je){let qt,gt=!1;try{this.work(Ve)}catch(tn){gt=!0,qt=tn||new Error("Scheduled action threw falsy error")}if(gt)return this.unsubscribe(),qt}unsubscribe(){if(!this.closed){const{id:Ve,scheduler:je}=this,{actions:gt}=je;this.work=this.state=this.scheduler=null,this.pending=!1,(0,wt.P)(gt,this),null!=Ve&&(this.id=this.recycleAsyncId(je,Ve,null)),this.delay=null,super.unsubscribe()}}}},5324:(Yn,Wt,fe)=>{fe.d(Wt,{v:()=>mt});var Le=fe(4584);class D{constructor(yt,ot=D.now){this.schedulerActionCtor=yt,this.now=ot}schedule(yt,ot=0,Ve){return new this.schedulerActionCtor(this,yt).schedule(Ve,ot)}}D.now=Le.l.now;class mt extends D{constructor(yt,ot=D.now){super(yt,ot),this.actions=[],this._active=!1,this._scheduled=void 0}flush(yt){const{actions:ot}=this;if(this._active)return void ot.push(yt);let Ve;this._active=!0;do{if(Ve=yt.execute(yt.state,yt.delay))break}while(yt=ot.shift());if(this._active=!1,Ve){for(;yt=ot.shift();)yt.unsubscribe();throw Ve}}}},7584:(Yn,Wt,fe)=>{fe.d(Wt,{P:()=>wt,z:()=>mt});var Le=fe(9955);const mt=new(fe(5324).v)(Le.o),wt=mt},4584:(Yn,Wt,fe)=>{fe.d(Wt,{l:()=>Le});const Le={now:()=>(Le.delegate||Date).now(),delegate:void 0}},777:(Yn,Wt,fe)=>{fe.d(Wt,{b:()=>mt});var Le=fe(4848),D=fe(6401);function mt(wt){return!!wt&&(wt instanceof Le.y||(0,D.m)(wt.lift)&&(0,D.m)(wt.subscribe))}},693:(Yn,Wt,fe)=>{fe.d(Wt,{HY:()=>Yt,KN:()=>Un,Lu:()=>tn,YY:()=>vt,u:()=>Us,wx:()=>Ve});var Le=fe(8368),D=fe(9709),mt=fe(969);const wt=["*"];let Ve=(()=>{class Te extends Le.Xh{get lightType(){return mt.Mig}}return Te.\u0275fac=function(){let Ee;return function(Pt){return(Ee||(Ee=D.n5z(Te)))(Pt||Te)}}(),Te.\u0275cmp=D.Xpm({type:Te,selectors:[["ngt-ambient-light"]],standalone:!0,features:[D._Bn([(0,Le.Oq)(Te),(0,Le.tG)(Te)]),D.qOj,D.jDz],ngContentSelectors:wt,decls:1,vars:0,template:function(_e,Pt){1&_e&&(D.F$t(),D.Hsn(0))},encapsulation:2,changeDetection:0}),Te})(),tn=(()=>{class Te extends Le.Xh{set skyColor(_e){this.set({skyColor:_e})}set groundColor(_e){this.set({groundColor:_e})}get lightType(){return mt.vmT}get optionFields(){return{...super.optionFields,skyColor:!0,groundColor:!0}}}return Te.\u0275fac=function(){let Ee;return function(Pt){return(Ee||(Ee=D.n5z(Te)))(Pt||Te)}}(),Te.\u0275cmp=D.Xpm({type:Te,selectors:[["ngt-hemisphere-light"]],inputs:{skyColor:"skyColor",groundColor:"groundColor"},standalone:!0,features:[D._Bn([(0,Le.Oq)(Te),(0,Le.tG)(Te)]),D.qOj,D.jDz],ngContentSelectors:wt,decls:1,vars:0,template:function(_e,Pt){1&_e&&(D.F$t(),D.Hsn(0))},encapsulation:2,changeDetection:0}),Te})(),vt=(()=>{class Te extends Le.Xh{set target(_e){this.set({target:_e})}get lightType(){return mt.Ox3}get optionFields(){return{...super.optionFields,target:!0}}}return Te.\u0275fac=function(){let Ee;return function(Pt){return(Ee||(Ee=D.n5z(Te)))(Pt||Te)}}(),Te.\u0275cmp=D.Xpm({type:Te,selectors:[["ngt-directional-light"]],inputs:{target:"target"},standalone:!0,features:[D._Bn([(0,Le.Oq)(Te),(0,Le.tG)(Te)]),D.qOj,D.jDz],ngContentSelectors:wt,decls:1,vars:0,template:function(_e,Pt){1&_e&&(D.F$t(),D.Hsn(0))},encapsulation:2,changeDetection:0}),Te})(),Yt=(()=>{class Te extends Le.Xh{set distance(_e){this.set({distance:(0,Le.su)(_e)})}set decay(_e){this.set({decay:(0,Le.su)(_e)})}set power(_e){this.set({power:(0,Le.su)(_e)})}get lightType(){return mt.cek}get optionFields(){return{...super.optionFields,distance:!0,decay:!0,power:!0}}}return Te.\u0275fac=function(){let Ee;return function(Pt){return(Ee||(Ee=D.n5z(Te)))(Pt||Te)}}(),Te.\u0275cmp=D.Xpm({type:Te,selectors:[["ngt-point-light"]],inputs:{distance:"distance",decay:"decay",power:"power"},standalone:!0,features:[D._Bn([(0,Le.Oq)(Te),(0,Le.tG)(Te)]),D.qOj,D.jDz],ngContentSelectors:wt,decls:1,vars:0,template:function(_e,Pt){1&_e&&(D.F$t(),D.Hsn(0))},encapsulation:2,changeDetection:0}),Te})(),Un=(()=>{class Te extends Le.Xh{set distance(_e){this.set({distance:(0,Le.su)(_e)})}set angle(_e){this.set({angle:(0,Le.su)(_e)})}set penumbra(_e){this.set({penumbra:(0,Le.su)(_e)})}set decay(_e){this.set({decay:(0,Le.su)(_e)})}set target(_e){this.set({target:_e})}set power(_e){this.set({power:(0,Le.su)(_e)})}get lightType(){return mt.PMe}get optionFields(){return{...super.optionFields,distance:!0,angle:!0,penumbra:!0,decay:!0,target:!0,power:!0}}}return Te.\u0275fac=function(){let Ee;return function(Pt){return(Ee||(Ee=D.n5z(Te)))(Pt||Te)}}(),Te.\u0275cmp=D.Xpm({type:Te,selectors:[["ngt-spot-light"]],inputs:{distance:"distance",angle:"angle",penumbra:"penumbra",decay:"decay",target:"target",power:"power"},standalone:!0,features:[D._Bn([(0,Le.Oq)(Te),(0,Le.tG)(Te)]),D.qOj,D.jDz],ngContentSelectors:wt,decls:1,vars:0,template:function(_e,Pt){1&_e&&(D.F$t(),D.Hsn(0))},encapsulation:2,changeDetection:0}),Te})(),Us=(()=>{class Te extends Le.Xh{set width(_e){this.set({width:(0,Le.su)(_e)})}set height(_e){this.set({height:(0,Le.su)(_e)})}set power(_e){this.set({power:(0,Le.su)(_e)})}get lightType(){return mt.T_f}get optionFields(){return{...super.optionFields,width:!0,height:!0,power:!0}}}return Te.\u0275fac=function(){let Ee;return function(Pt){return(Ee||(Ee=D.n5z(Te)))(Pt||Te)}}(),Te.\u0275cmp=D.Xpm({type:Te,selectors:[["ngt-rect-area-light"]],inputs:{width:"width",height:"height",power:"power"},standalone:!0,features:[D._Bn([(0,Le.Oq)(Te),(0,Le.tG)(Te)]),D.qOj,D.jDz],ngContentSelectors:wt,decls:1,vars:0,template:function(_e,Pt){1&_e&&(D.F$t(),D.Hsn(0))},encapsulation:2,changeDetection:0}),Te})()},3749:(Yn,Wt,fe)=>{fe.d(Wt,{fk:()=>je,oX:()=>ot});var Le=fe(8368),D=fe(9709),mt=fe(969);const wt=["*"],yt=["count",""];let ot=(()=>{class at extends Le.uT{get meshType(){return mt.Kj0}}return at.\u0275fac=function(){let vt;return function(Yt){return(vt||(vt=D.n5z(at)))(Yt||at)}}(),at.\u0275cmp=D.Xpm({type:at,selectors:[["ngt-mesh"]],standalone:!0,features:[D._Bn([(0,Le.A5)(at),(0,Le.pb)(at)]),D.qOj,D.jDz],ngContentSelectors:wt,decls:1,vars:0,template:function(nt,Yt){1&nt&&(D.F$t(),D.Hsn(0))},encapsulation:2,changeDetection:0}),at})(),je=(()=>{class at extends Le.uT{set count(nt){this.set({count:(0,Le.su)(nt)})}get meshType(){return mt.SPe}postPrepare(nt){nt.instanceMatrix.setUsage(mt.dj0)}get optionFields(){return{...super.optionFields,count:!1}}get argsKeys(){return["count"]}}return at.\u0275fac=function(){let vt;return function(Yt){return(vt||(vt=D.n5z(at)))(Yt||at)}}(),at.\u0275cmp=D.Xpm({type:at,selectors:[["ngt-instanced-mesh","count",""]],inputs:{count:"count"},standalone:!0,features:[D._Bn([(0,Le.A5)(at),(0,Le.pb)(at)]),D.qOj,D.jDz],attrs:yt,ngContentSelectors:wt,decls:1,vars:0,template:function(nt,Yt){1&nt&&(D.F$t(),D.Hsn(0))},encapsulation:2,changeDetection:0}),at})()},8368:(Yn,Wt,fe)=>{fe.d(Wt,{Dh:()=>Cl,B3:()=>Qo,f5:()=>Qn,fc:()=>ws,B:()=>po,fA:()=>cr,Xh:()=>jn,hZ:()=>hr,uT:()=>dr,gU:()=>ps,WZ:()=>Mt,gj:()=>Ll,Jy:()=>oi,VL:()=>oh,Kw:()=>$o,WS:()=>Ji,ZQ:()=>Si,j4:()=>Mi,l3:()=>ah,iv:()=>bi,W7:()=>sn,Rl:()=>Oi,WC:()=>Vc,ll:()=>Uc,nH:()=>Fn,QF:()=>Gn,Ig:()=>pt,su:()=>Vt,aM:()=>fn,hJ:()=>Ot,rz:()=>oo,is:()=>Re,Sy:()=>ii,CE:()=>Ui,qR:()=>yi,ig:()=>Ys,Pl:()=>xi,_4:()=>hn,dF:()=>ro,O2:()=>Il,$m:()=>Nl,tG:()=>Fl,Wm:()=>ta,pb:()=>Ms,UV:()=>mn,zd:()=>Ti,hS:()=>Ai,Pc:()=>lr,rG:()=>Ci,Oq:()=>mo,uy:()=>ur,A5:()=>fr,Nx:()=>$n,RD:()=>_i,Hm:()=>Jn,wY:()=>cn,nD:()=>vi,Xb:()=>Pn,oe:()=>gn});var Le=fe(5688),D=fe(9709),mt=fe(1127),wt=fe(4584);class yt extends mt.x{constructor(M=1/0,u=1/0,w=wt.l){super(),this._bufferSize=M,this._windowTime=u,this._timestampProvider=w,this._buffer=[],this._infiniteTimeWindow=!0,this._infiniteTimeWindow=u===1/0,this._bufferSize=Math.max(1,M),this._windowTime=Math.max(1,u)}next(M){const{isStopped:u,_buffer:w,_infiniteTimeWindow:N,_timestampProvider:z,_windowTime:W}=this;u||(w.push(M),!N&&w.push(z.now()+W)),this._trimBuffer(),super.next(M)}_subscribe(M){this._throwIfClosed(),this._trimBuffer();const u=this._innerSubscribe(M),{_infiniteTimeWindow:w,_buffer:N}=this,z=N.slice();for(let W=0;W<z.length&&!M.closed;W+=w?1:2)M.next(z[W]);return this._checkFinalizedStatuses(M),u}_trimBuffer(){const{_bufferSize:M,_timestampProvider:u,_buffer:w,_infiniteTimeWindow:N}=this,z=(N?1:2)*M;if(M<1/0&&z<w.length&&w.splice(0,w.length-z),!N){const W=u.now();let ce=0;for(let V=1;V<w.length&&w[V]<=W;V+=2)ce=V;ce&&w.splice(0,ce+1)}}}var ot=fe(1268),Ve=fe(557),je=fe(8794);function gt(x,M=ot.y){return x=x??qt,(0,Ve.e)((u,w)=>{let N,z=!0;u.subscribe((0,je.x)(w,W=>{const ce=M(W);(z||!x(N,ce))&&(z=!1,N=ce,w.next(W))}))})}function qt(x,M){return x===M}var tn=fe(9955),Zn=fe(5324);const vt=new class at extends Zn.v{}(class Nn extends tn.o{constructor(M,u){super(M,u),this.scheduler=M,this.work=u}schedule(M,u=0){return u>0?super.schedule(M,u):(this.delay=u,this.state=M,this.scheduler.flush(this),this)}execute(M,u){return u>0||this.closed?super.execute(M,u):this._execute(M,u)}requestAsyncId(M,u,w=0){return null!=w&&w>0||null==w&&this.delay>0?super.requestAsyncId(M,u,w):M.flush(this)}});var Yt=fe(3212),Cn=fe(5148),Un=fe(5437);function cs(...x){const M=(0,Un.jO)(x);return(0,Ve.e)((u,w)=>{const N=x.length,z=new Array(N);let W=x.map(()=>!1),ce=!1;for(let V=0;V<N;V++)(0,Yt.Xf)(x[V]).subscribe((0,je.x)(w,X=>{z[V]=X,!ce&&!W[V]&&(W[V]=!0,(ce=W.every(ot.y))&&(W=null))},Cn.Z));u.subscribe((0,je.x)(w,V=>{if(ce){const X=[V,...z];w.next(M?M(...X):X)}}))})}var Us=fe(7584);function Vs(x,M=Us.z){return(0,Ve.e)((u,w)=>{let N=null,z=null,W=null;const ce=()=>{if(N){N.unsubscribe(),N=null;const X=z;z=null,w.next(X)}};function V(){const X=W+x,ae=M.now();if(ae<X)return N=this.schedule(void 0,X-ae),void w.add(N);ce()}u.subscribe((0,je.x)(w,X=>{z=X,W=M.now(),N||(N=M.schedule(V,x),w.add(N))},()=>{ce(),w.complete()},void 0,()=>{z=N=null}))})}var Gs=fe(4848),mi=fe(8089),Te=fe(3018),Ee=fe(6401),_e=fe(2236);const Pt=["addListener","removeListener"],cl=["addEventListener","removeEventListener"],hl=["on","off"];function hs(x,M,u,w){if((0,Ee.m)(u)&&(w=u,u=void 0),w)return hs(x,M,u).pipe((0,_e.Z)(w));const[N,z]=function ul(x){return(0,Ee.m)(x.addEventListener)&&(0,Ee.m)(x.removeEventListener)}(x)?cl.map(W=>ce=>x[W](M,ce,u)):function Go(x){return(0,Ee.m)(x.addListener)&&(0,Ee.m)(x.removeListener)}(x)?Pt.map(Vo(x,M)):function Ho(x){return(0,Ee.m)(x.on)&&(0,Ee.m)(x.off)}(x)?hl.map(Vo(x,M)):[];if(!N&&(0,Te.z)(x))return(0,mi.z)(W=>hs(W,M,u))((0,Yt.Xf)(x));if(!N)throw new TypeError("Invalid event target");return new Gs.y(W=>{const ce=(...V)=>W.next(1<V.length?V:V[0]);return N(ce),()=>z(ce)})}function Vo(x,M){return u=>w=>x[u](M,w)}var fl=fe(8875),ml=fe(5397),gl=fe(1279),xl=fe(5820),Vr=fe(5628),Di=fe(2435),Hs=fe(3818),ei=fe(4590),Gr=fe(777),Ws=fe(6628),us=fe(3250),yl=fe(3857),Vn=fe(9247),Hr=fe(112),Dn=fe(8926),Wr=fe(6706),jr=fe(1609),_l=fe(6526),js=fe(5363),ti=fe(6849),gi=fe(5689),Ge=fe(969),kt=fe(4254);const ds=["rendererCanvas"];function fs(x,M){if(1&x&&D.GkF(0,3),2&x){D.oxw();const u=D.MAs(4);D.Q6J("ngTemplateOutlet",u)}}function dn(x,M){1&x&&D.Hsn(0)}const Fi=["*"],Zt=function(x){return{portal:x}};function Xs(x,M){if(1&x&&D.GkF(0,1),2&x){const u=D.oxw();D.Q6J("ngTemplateOutlet",u.content.templateRef)("ngTemplateOutletContext",D.VKq(2,Zt,u.instance))}}class Oi extends xl.X{constructor(M){super(M||null)}set(M){this.next("function"==typeof M?M(this.value):M)}}const Re={obj:x=>x===Object(x)&&!Re.arr(x)&&"function"!=typeof x,material:x=>!!x&&x.isMaterial,geometry:x=>!!x&&x.isBufferGeometry,mesh:x=>!!x&&x.isMesh,orthographic:x=>!!x&&x.isOrthographicCamera,perspective:x=>!!x&&x.isPerspectiveCamera,camera:x=>!!x&&x.isCamera,glRenderer:x=>!!x&&x instanceof Ge.CP7,scene:x=>!!x&&x.isScene,object3d:x=>!!x&&x.isObject3D,instance:x=>!!x&&!!x.__ngt__,ref:x=>!!x&&x instanceof Oi,vector3:x=>!!x&&x.isVector3,color:x=>!!x&&x.isColor,supportColorManagement:()=>!0,fun:x=>"function"==typeof x,str:x=>"string"==typeof x,num:x=>"number"==typeof x,boo:x=>"boolean"==typeof x,und:x=>void 0===x,eventEmitter:x=>x instanceof D.vpe,arr:x=>Array.isArray(x),equ(x,M,{arrays:u="shallow",objects:w="reference",strict:N=!0}={}){if(typeof x!=typeof M||!!x!=!!M)return!1;if(Re.str(x)||Re.num(x))return x===M;const z=Re.obj(x);if(z&&"reference"===w)return x===M;const W=Re.arr(x);if(W&&"reference"===u)return x===M;if((W||z)&&x===M)return!0;let ce;for(ce in x)if(!(ce in M))return!1;for(ce in N?M:x)if(x[ce]!==M[ce])return!1;if(Re.und(ce)){if(W&&0===x.length&&0===M.length||z&&0===Object.keys(x).length&&0===Object.keys(M).length)return!0;if(x!==M)return!1}return!0}};function fn(x,...M){return u=>[...(M||[]).map(w=>w(u)),{provide:x,useExisting:u}]}function Ft(x,{defaultValueOrFactory:M,provideValueFactory:u}={}){const N=new D.OlP(x,{factory:M&&"function"==typeof M?M:()=>M});return[function z(ce={}){return(0,D.f3M)(N,ce)},function W(ce){return{provide:N,useValue:u?u(ce):ce}},N]}function Ot(x,M,...u){Re.fun(M)&&(u=[M,...u]);const w=new D.OlP(x);return[function N(W={}){return(0,D.f3M)(w,W)},function z(W,ce){return[...(u||[]).map(V=>V(W,ce)),{provide:w,useFactory:V=>ce?()=>ce(V):Re.boo(M)?V.parentRef:()=>V.instance,deps:[W]}]},w]}const[Dc,mn,yd]=Ot("NgtInstance ref"),[ni,Ml,Fc]=Ot("NgtInstance host ref");let ps=(()=>{class x{constructor(){this.destroySubject$=new yt(1),this.destroy$=this.destroySubject$.asObservable(),this.stateSubject$=new yt(1)}ngOnDestroy(){this.stateSubject$.complete(),this.destroySubject$.next()}get(u){let w;return this.stateSubject$.pipe((0,Vr.q)(1),En(),(0,Di.U)(N=>u?u(N):N),En()).subscribe(N=>{w=N}),w}set(u){const w="function"==typeof u?u(this.get()):u;this.updateState((N,z)=>({...N,...z}))(w)}select(...u){if(0===u.length)return this.stateSubject$.pipe(En(),gt(),(0,Hs.B)({connector:()=>new yt(1),resetOnComplete:!0,resetOnRefCountZero:!0,resetOnError:!0}),(0,ei.R)(this.destroy$));(0,Gr.b)(u[u.length-1])&&u.push(()=>({}));const{observables:w,projector:N}=function zi(x){const M=Array.from(x),u=M.pop();return{observables:M,projector:u}}(u);let z;return z=0===w.length?this.stateSubject$.pipe(En(),(0,Di.U)(N)):(0,Ws.a)(w).pipe((0,Di.U)(W=>N(...W))),z.pipe(En(),gt(),(0,Hs.B)({connector:()=>new yt(1),resetOnComplete:!0,resetOnRefCountZero:!0,resetOnError:!0}),(0,ei.R)(this.destroy$))}effect(u){const w=new mt.x;return u(w).pipe((0,ei.R)(this.destroy$)).subscribe(),N=>((0,Gr.b)(N)?N:(0,us.of)(N)).pipe((0,ei.R)(this.destroy$)).subscribe(W=>{w.next(W)})}updateState(u){return w=>((0,Gr.b)(w)?w:(0,us.of)(w)).pipe((0,yl.b)(z=>(0,Vn.x)([z],vt).pipe(cs(this.stateSubject$.pipe((0,Hr.O)({}))))),(0,ei.R)(this.destroy$)).subscribe({next:([z,W])=>{this.stateSubject$.next(u(W||{},z))},error:z=>{this.stateSubject$.error(z)}})}}return x.\u0275fac=function(u){return new(u||x)},x.\u0275dir=D.lG2({type:x}),x})();function gn(x){let w,M=Cn.Z,u=!1;const N=z=>()=>{M&&M({prev:w,complete:!0,error:z})};return(0,Dn.b)({next:z=>{M&&u&&M({prev:w,complete:!1,error:!1});const W=x(z);W&&(M=W),w=z,u||(u=!0)},complete:N(!1),unsubscribe:N(!1),error:N(!0)})}function En(){return(0,Wr.h)(x=>void 0!==x)}function Pn(){return(0,Hr.O)(void 0)}const Wo={current:1,min:.5,max:1,debounce:200},[Oc,vi,bl]=Ft("NgtPerformance options",{defaultValueOrFactory:Wo,provideValueFactory:x=>({...Wo,...x})}),[Xr,,Ln]=Ft("window",{defaultValueOrFactory:()=>{const{defaultView:x}=(0,D.f3M)(Le.K0);if(!x)throw"window is not available!";return x}}),qr={box:"content-box",scroll:!1,offsetSize:!1,debounce:{scroll:50,resize:0}},[Sl,Bi,ki]=Ft("ngtResize Options",{defaultValueOrFactory:qr,provideValueFactory:x=>({...qr,...x})}),[jo]=Ft("Resize Observer API support",{defaultValueOrFactory:()=>{const x=Xr();return"ResizeObserver"in x&&null!=x.ResizeObserver}});let qs=(()=>{class x extends Gs.y{constructor(){const{nativeElement:u}=(0,D.f3M)(D.SBq),w=(0,D.f3M)(D.R0b),N=Xr(),z=jo(),{box:W,offsetSize:ce,scroll:V,debounce:X}=Sl();let ae,we,de=[];const _t=new mt.x,He=Yr(u),Lt=X?"number"==typeof X?X:X.scroll:null,et=X?"number"==typeof X?X:X.resize:null,Xe=Fe=>(0,jr.z)(Vs(Fe??0),(0,ei.R)(_t));return super(Fe=>{if(z)return w.runOutsideAngular(()=>{const xt=jt=>{de=jt;const{left:lt,top:At,width:zt,height:Ct,bottom:Kt,right:Ki,x:xo,y:zn}=u.getBoundingClientRect(),Qi={left:lt,top:At,width:zt,height:Ct,bottom:Kt,right:Ki,x:xo,y:zn};u instanceof HTMLElement&&ce&&(Qi.height=u.offsetHeight,Qi.width=u.offsetWidth),Object.freeze(Qi),Fe.next({entries:jt,dpr:N.devicePixelRatio,...Qi}),Tl(we||{},Qi)||(we=Qi)},Jt=()=>{xt(de)};ae=new ResizeObserver(xt),ae.observe(u,{box:W}),V&&(He&&He.forEach(jt=>{hs(jt,"scroll",{capture:!0,passive:!0}).pipe(Xe(Lt)).subscribe(Jt)}),hs(N,"scroll",{capture:!0,passive:!0}).pipe(Xe(Lt)).subscribe(Jt)),hs(N,"resize").pipe(Xe(et)).subscribe(Jt)}),()=>{ae&&(ae.unobserve(u),ae.disconnect()),_t.next(),_t.complete()};Fe.error("ResizeObserver is not supported in your browser. Please use a polyfill")}),this.pipe(Vs(Lt||0),(0,Hs.B)({connector:()=>new yt(1),resetOnRefCountZero:!0,resetOnComplete:!0}))}}return x.\u0275fac=function(u){return new(u||x)},x.\u0275prov=D.Yz7({token:x,factory:x.\u0275fac}),x})();function Yr(x){const M=[];if(!x||x===document.body)return M;const{overflow:u,overflowX:w,overflowY:N}=window.getComputedStyle(x);return[u,w,N].some(z=>"auto"===z||"scroll"===z)&&M.push(x),[...M,...Yr(x.parentElement)]}const wl=["x","y","top","bottom","left","right","width","height"],Tl=(x,M)=>wl.every(u=>x[u]===M[u]);function Gn(x){null!==x&&"object"==typeof x&&"needsUpdate"in x&&(x.needsUpdate=!0,"uniformsNeedUpdate"in x&&(x.uniformsNeedUpdate=!0))}function vn(x){if(x)return x.__ngt__}function xi(x,M,u,w,N=!1){const z=vn(w?.value),W=u||(z?z.parent:void 0);return Re.scene(x)&&Fn(x,{dispose:null}),Object.assign(x,{__ngt__:{root:M,primitive:N||z?.primitive,eventCount:z?.eventCount??0,handlers:z?.handlers??{},objects:z?.objects??new Oi([]),parent:W?W===x?null:W:null}})}function Ys(x,M,u=!1){const w=Object.entries(M);return 0===w.length?(0,us.of)({}):x.select(...w.map(([N,z])=>{const W=x.select(ce=>ce[N]);return z?W.pipe(Pn()):W}),(...N)=>N.reduce((z,W,ce)=>(z[w[ce][0]]=W,z),{})).pipe((0,Hr.O)({}),function dl(){return(0,Ve.e)((x,M)=>{let u,w=!1;x.subscribe((0,je.x)(M,N=>{const z=u;u=N,w&&M.next([z,N]),w=!0}))})}(),(0,Di.U)(([N,z])=>Object.entries(z).reduce((W,[ce,V])=>((!Re.equ(N[ce],V)||u&&Re.equ(N[ce],V))&&(W[ce]=V),W),{})))}function Zs(x){Re.object3d(x)?x.updateMatrix():Re.camera(x)&&((Re.perspective(x)||Re.orthographic(x))&&x.updateProjectionMatrix(),x.updateMatrixWorld()),Gn(x)}function Fn(x,M){if(!Object.keys(M).length)return;const w=(vn(x)||{}).root?.()??{};"__ngt__"in M&&(x.__ngt__=vn(M));for(const N of Object.entries(M)){const z=N[0];let W=N[1];if("raycast"===z&&null==W)continue;Re.ref(W)&&(W=W.value);const ce=x,V=ce[z];if(V&&V.set&&(V.copy||V instanceof Ge.S9g)){if(Re.arr(W))V.fromArray?V.fromArray(W):V.set(...W);else if(V.copy&&W&&W.constructor&&V.constructor.name===W.constructor.name)V.copy(W);else if(void 0!==W){const X=V instanceof Ge.Ilk;!X&&V.setScalar?V.setScalar(W):V instanceof Ge.S9g&&W instanceof Ge.S9g?V.mask=W.mask:V.set(W),!Re.supportColorManagement()&&!w.linear&&X&&V.convertSRGBToLinear()}}else ce[z]=W,!w.linear&&ce[z]instanceof Ge.xEZ&&(ce[z].encoding=Ge.knz);Gn(W),Gn(V)}}function Zr(x,M,u){Re.camera(x)||M.manual||(Re.orthographic(M)?(M.left=u.width/-2,M.right=u.width/2,M.top=u.height/2,M.bottom=u.height/-2):M.aspect=u.width/u.height,M.updateProjectionMatrix(),M.updateMatrixWorld())}function ii(x,M){return M?M instanceof x?M:(Re.arr(M)||(M="number"==typeof M?[M,M,M]:[M]),new x(...M)):new x}function Ui(x){return Re.arr(x)?Math.min(Math.max(x[0],window.devicePixelRatio),x[1]):x}const $r={};function yi(x){if(x)return(x.eventObject||x.object).uuid+"/"+x.index+x.instanceId;const M=Ge.M8C.generateUUID();return $r[M]?yi():($r[M]=!0,M)}function Jr(x,M,u,w){const N=u.get(M);N&&(u.delete(M),0===u.size&&(x.delete(w),N.target.releasePointerCapture(w)))}var Vi,ms,$s,gs,Gi,Js,Hi,Ks,Qs,er,tr,Kr,Qr,Zo,Wi,ji;const nr={click:!1,contextmenu:!1,dblclick:!1,wheel:!1,pointerdown:!0,pointerup:!0,pointerleave:!0,pointermove:!0,pointercancel:!0,lostpointercapture:!0},si={objects:"shallow",strict:!1};class sn extends ps{constructor({nativeElement:{clientWidth:M,clientHeight:u}},w,{devicePixelRatio:N},z,W,ce){super(),this.parentStore=z,this.resizeResult$=W,this.zone=ce,Vi.add(this),ms.set(this,new Ge.FM8),$s.set(this,new Ge.Pa4),gs.set(this,new Ge.Pa4),Gi.set(this,new Ge.Pa4),this.ready$=this.select(V=>V.ready).pipe((0,Wr.h)(V=>V)),Js.set(this,this.select(this.select(V=>V.camera),this.select(V=>V.scene),this.select(V=>V.gl),this.select(V=>V.raycaster),this.select(V=>V.internal.active),(V,X,ae,we,de)=>({ready:!!(V&&ae&&X&&we&&!0===de)}))),Hi.set(this,void 0),Ks.set(this,this.select(this.select(V=>V.size),this.select(V=>V.viewport))),this.startLoop=this.effect((0,Dn.b)(({invalidate:V})=>{V()})),Qs.set(this,this.effect(gn(({canvasElement:V,rootStateMap:X,advance:ae,invalidate:we})=>{const de=this.get(),_t=xi(new Ge.xsS,()=>this.get(),this.parentStore?.get(lt=>lt.sceneRef));Fn(_t,de.sceneOptions),this.get(lt=>lt.sceneRef).set(_t);let He=de.gl;de.gl||(He=function ir(x,M){const u="function"==typeof x?x(M):x;return null!=u?.render?u:new Ge.CP7({powerPreference:"high-performance",canvas:M,antialias:!0,alpha:!0,...x})}(de.glOptions,V)),this.set({gl:He});let Lt=de.raycaster;de.raycaster||(Lt=new Ge.iMs);const{params:et,...Xe}=de.raycasterOptions||{};Re.equ(Xe,Lt,si)||Fn(Lt,{...Xe}),Re.equ(et,Lt.params,si)||Fn(Lt,{params:{...Lt.params,...et||{}}});let Fe=de.camera;if(!de.camera){const lt=Re.camera(de.cameraOptions);Fe=lt?de.cameraOptions:function Xo(x){return x.orthographic?new Ge.iKG(0,0,0,0,.1,1e3):new Ge.cPb(75,x.size.width/x.size.height,.1,1e3)}(de),lt||(de.cameraOptions&&Fn(Fe,de.cameraOptions),de.cameraOptions?.position||(Fe.position.z=5),de.cameraOptions?.rotation||Fe.lookAt(de.lookAt??ii(Ge.Pa4)),Fe.updateProjectionMatrix()),Re.instance(Fe)||(Fe=xi(Fe,()=>this.get(),this.parentStore?.get(At=>At.cameraRef))),this.get(At=>At.cameraRef).set(Fe)}let xt=de.xr;if(!de.xr){const lt=(zt,Ct)=>{"never"!==this.get().frameloop&&ae(zt,!0,this.get.bind(this),Ct)},At=()=>{const zt=this.get(Ct=>Ct.gl);zt.xr.enabled=zt.xr.isPresenting,zt.xr.setAnimationLoop(zt.xr.isPresenting?lt:null),zt.xr.isPresenting||we(this.get.bind(this))};xt={connect:()=>{const zt=this.get(Ct=>Ct.gl);zt.xr.addEventListener("sessionstart",At),zt.xr.addEventListener("sessionend",At)},disconnect:()=>{const zt=this.get(Ct=>Ct.gl);zt.xr.removeEventListener("sessionstart",At),zt.xr.removeEventListener("sessionend",At)}},He.xr&&xt.connect(),this.set({xr:xt})}if(He.shadowMap){const lt=Re.boo(de.shadows);if(lt&&He.shadowMap.enabled!==de.shadows||!Re.equ(de.shadows,He.shadowMap,si)){const At=He.shadowMap.enabled;He.shadowMap.enabled=!!de.shadows,lt?He.shadowMap.type=Ge.ntZ:Object.assign(He.shadowMap,de.shadows),At!==He.shadowMap.enabled&&Gn(He.shadowMap)}}Re.supportColorManagement()&&(Ge.epp.legacyMode=de.legacy);const Jt=de.linear?Ge.rnI:Ge.knz,jt=de.flat?Ge.uL9:Ge.LY2;return He.outputEncoding!==Jt&&(He.outputEncoding=Jt),He.toneMapping!==jt&&(He.toneMapping=jt),He.setClearAlpha(0),He.setPixelRatio(Ui(de.viewport.dpr)),He.setSize(de.size.width,de.size.height),Re.obj(de.glOptions)&&!Re.fun(de.glOptions)&&!Re.glRenderer(de.glOptions)&&Fn(He,de.glOptions),this.set({gl:He,camera:Fe,scene:_t,raycaster:Lt}),()=>{const{gl:lt,xr:At,cameraRef:zt,sceneRef:Ct,events:Kt}=this.get();lt&&(Kt.disconnect&&Kt.disconnect(),lt.renderLists.dispose(),lt.forceContextLoss(),lt.xr&&lt.xr.enabled&&(lt.xr.setAnimationLoop(null),At.disconnect()),zt.complete(),Ct.complete(),this.set(Ki=>({...Ki,internal:{...Ki.internal,active:!1}})),X.delete(V))}}))),er.set(this,this.effect((0,Dn.b)(({width:V,height:X,dpr:ae})=>{this.set(({viewport:we,camera:de})=>{const _t={width:V,height:X};return{size:_t,viewport:{...we,...we.getCurrentViewport(de,(0,kt.Q_)(this,gs,"f"),_t),dpr:Ui(ae)}}})}))),tr.set(this,this.effect((0,Dn.b)(()=>{const{camera:V,gl:X,ready:ae,cameraOptions:we,size:de,viewport:_t}=this.get();ae&&(Zr(we,V,de),X.setPixelRatio(_t.dpr),X.setSize(de.width,de.height))}))),Kr.set(this,this.effect(gn(({uuid:V,...X})=>(V&&this.set(ae=>({internal:{...ae.internal,animations:new Map(ae.internal.animations).set(V,X),priority:ae.internal.priority+((X.priority||0)>0?1:0)}})),({prev:{uuid:ae}={},complete:we})=>{(ae!==V||we)&&this.unregisterBeforeRender(V)})))),Qr.set(this,this.effect((0,Dn.b)(()=>{const V=this.get(ae=>ae.internal);if(!V.animations.size)return;const X=Array.from(V.animations.values());X.sort((ae,we)=>(ae.priority||0)-(we.priority||0)),this.set(ae=>({internal:{...ae.internal,subscribers:X}}))}))),this.set({ready:!1,clock:new Ge.SUY,frameloop:"always",legacy:!1,linear:!1,flat:!1,orthographic:!1,shadows:!1,controls:null,pointer:(0,kt.Q_)(this,ms,"f"),mouse:(0,kt.Q_)(this,ms,"f"),sceneRef:new Oi,cameraRef:new Oi,events:{priority:1,enabled:!0,connected:void 0,handlers:{},compute:(V,X)=>{X.pointer.set(V.offsetX/X.size.width*2-1,-V.offsetY/X.size.height*2+1),X.raycaster.setFromCamera(X.pointer,X.camera)}},cameraOptions:{},glOptions:{},raycasterOptions:{},sceneOptions:{},pointerMissed:()=>{},internal:{active:!1,lastEvent:null,priority:0,frames:0,interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,animations:new Map},dpr:[1,2],size:{width:M,height:u},viewport:{initialDpr:N||1,dpr:N||1,width:M,height:u,aspect:M/u,distance:0,factor:0,getCurrentViewport:(V=this.get(we=>we.camera),X=(0,kt.Q_)(this,gs,"f"),ae=this.get(we=>we.size))=>{const{width:we,height:de}=ae,_t=we/de;X instanceof Ge.Pa4?(0,kt.Q_)(this,Gi,"f").copy(X):(0,kt.Q_)(this,Gi,"f").set(...X);const He=V.getWorldPosition((0,kt.Q_)(this,$s,"f")).distanceTo((0,kt.Q_)(this,Gi,"f"));if(Re.orthographic(V))return{width:we/V.zoom,height:de/V.zoom,factor:1,distance:He,aspect:_t};const Lt=V.fov*Math.PI/180,et=2*Math.tan(Lt/2)*He,Xe=et*(we/de);return{width:Xe,height:et,factor:we/Xe,distance:He,aspect:_t}}},performance:{...w,regress:()=>{this.zone.runOutsideAngular(()=>{const V=this.get(X=>X.performance);(0,kt.Q_)(this,Hi,"f")&&clearTimeout((0,kt.Q_)(this,Hi,"f")),V.current!==V.min&&this.set(X=>({performance:{...X.performance,current:V.min}})),(0,kt.YH)(this,Hi,setTimeout(()=>this.set(X=>({performance:{...X.performance,current:this.get(ae=>ae.performance.max)}})),V.debounce),"f")})}},previousState:z?.get()})}init(M,u,w,N){(0,kt.Q_)(this,Vi,"m",Zo).call(this,M),(0,kt.Q_)(this,er,"f").call(this,this.resizeResult$),(0,kt.Q_)(this,tr,"f").call(this,(0,kt.Q_)(this,Ks,"f")),(0,kt.Q_)(this,Qs,"f").call(this,{canvasElement:M,rootStateMap:u,advance:N,invalidate:w}),(0,kt.Q_)(this,Qr,"f").call(this,this.select(this.select(z=>z.internal.animations),this.select(z=>z.internal.priority))),this.set(z=>({invalidate:()=>w(this.get.bind(this)),advance:(W,ce)=>N(W,ce,this.get.bind(this)),internal:{...z.internal,active:!0}})),this.set((0,kt.Q_)(this,Js,"f"))}onReady(M){return this.effect(gn(M))(this.ready$)}registerBeforeRender(M){const u=Re.object3d(M.obj)?M.obj.uuid:Re.ref(M.obj)?M.obj.value.uuid:yi();return(0,kt.Q_)(this,Kr,"f").call(this,{...M,uuid:u}),()=>{this.unregisterBeforeRender(u)}}unregisterBeforeRender(M){if(!M)return;const u=this.get(z=>z.internal.animations),w=u.get(M);u.delete(M)&&w&&this.set(z=>({internal:{...z.internal,animations:u,priority:z.internal.priority-((w.priority||0)>0?1:0)}}))}addInteraction(M){this.set(u=>({...u,internal:{...u.internal,interaction:[...u.internal.interaction,M]}}))}removeInteraction(M){this.set(u=>({...u,internal:{...u.internal,interaction:u.internal.interaction.filter(w=>w.uuid!==M)}}))}setFrameloop(M="always"){const u=this.get(w=>w.clock);u.stop(),u.elapsedTime=0,"never"!==M&&(u.start(),u.elapsedTime=0),this.set({frameloop:M})}setDpr(M){const u=Ui(M);this.set(({viewport:w})=>({dpr:u,viewport:{...w,dpr:u,initialDpr:w.initialDpr||u}}))}ngOnDestroy(){(0,kt.Q_)(this,Vi,"m",ji).call(this),super.ngOnDestroy()}}function pt(x){return null!=x&&"false"!=`${x}`}function Vt(x,M=0){return function zc(x){return!isNaN(parseFloat(x))&&!isNaN(Number(x))}(x)?Number(x):Vt(M)}function eo(x,M,u){const{decomposedPath:w,base:N}=function Al(x){return x.length<1?{base:"",decomposedPath:[]}:{base:x[0],decomposedPath:x}}(M);void 0!==N&&(function ri(x,M){!Object.prototype.hasOwnProperty.call(x,M)&&Reflect&&Reflect.has&&!Reflect.has(x,M)&&(x[M]={})}(x,N),w.length<=1?Fn(x,{[N]:u}):eo(x[N],w.slice(1),u))}ms=new WeakMap,$s=new WeakMap,gs=new WeakMap,Gi=new WeakMap,Js=new WeakMap,Hi=new WeakMap,Ks=new WeakMap,Qs=new WeakMap,er=new WeakMap,tr=new WeakMap,Kr=new WeakMap,Qr=new WeakMap,Vi=new WeakSet,Zo=function(M){const{handlePointer:u}=function Yo(x){const M=new Ge.Pa4;function w(X){return X.filter(ae=>["move","over","enter","out","leave"].some(we=>vn(ae)?.handlers?.["pointer"+we]))}function W(X){const ae=x().internal;Array.from(ae.hovered.values()).forEach(we=>{if(!X.length||!X.find(de=>de.object===we.object&&de.index===we.index&&de.instanceId===we.instanceId)){const _t=vn(we.eventObject),He=_t?.handlers;if(ae.hovered.delete(yi(we)),_t?.eventCount){const Lt={...we,intersections:X||[]};He.pointerout?.(Lt),He.pointerleave?.(Lt)}}})}function V(X,ae){ae.forEach(we=>vn(we)?.handlers?.pointermissed?.(X))}return{handlePointer:X=>{switch(X){case"pointerleave":case"pointercancel":return()=>W([]);case"lostpointercapture":return ae=>{const we=x().internal;"pointerId"in ae&&!we.capturedMap.has(ae.pointerId)&&(we.capturedMap.delete(ae.pointerId),W([]))}}return ae=>{const{pointerMissed:we,internal:de}=x();de.lastEvent=ae;const _t="pointermove"===X,He="click"===X||"contextmenu"===X||"dblclick"===X,et=function N(X,ae){const we=x(),de=new Set,_t=[],He=ae?ae(we.internal.interaction):we.internal.interaction;He.forEach(et=>{const Xe=vn(et)?.root();Xe&&(Xe.raycaster.camera=void 0)}),we.previousState||we.events.compute?.(X,we);let Lt=He.flatMap(et=>{const Xe=vn(et)?.root();return Xe&&Xe.events.enabled&&null!==Xe.raycaster.camera?(void 0===Xe.raycaster.camera&&(Xe.events.compute?.(X,Xe,Xe.previousState),void 0===Xe.raycaster.camera&&(Xe.raycaster.camera=null)),Xe.raycaster.camera?Xe.raycaster.intersectObject(et,!0):[]):[]}).sort((et,Xe)=>{const Fe=vn(et.object)?.root(),xt=vn(Xe.object)?.root();return Fe&&xt?xt.events.priority-Fe.events.priority||et.distance-Xe.distance:0}).filter(et=>{const Xe=yi(et);return!de.has(Xe)&&(de.add(Xe),!0)});we.events.filter&&(Lt=we.events.filter(Lt,we));for(const et of Lt){let Xe=et.object;for(;Xe;)vn(Xe)?.eventCount&&_t.push({...et,eventObject:Xe}),Xe=Xe.parent}if("pointerId"in X&&we.internal.capturedMap.has(X.pointerId))for(const et of we.internal.capturedMap.get(X.pointerId).values())_t.push(et.intersection);return _t}(ae,_t?w:void 0),Xe=He?function u(X){const ae=x().internal,we=X.offsetX-ae.initialClick[0],de=X.offsetY-ae.initialClick[1];return Math.round(Math.sqrt(we*we+de*de))}(ae):0;"pointerdown"===X&&(de.initialClick=[ae.offsetX,ae.offsetY],de.initialHits=et.map(Fe=>Fe.eventObject)),He&&!et.length&&Xe<=2&&(V(ae,de.interaction),we&&we(ae)),_t&&W(et),function z(X,ae,we,de){const{raycaster:_t,pointer:He,camera:Lt,internal:et}=x();if(X.length){const Xe=M.set(He.x,He.y,0).unproject(Lt),Fe={stopped:!1};for(const xt of X){const Jt=Ct=>et.capturedMap.get(Ct)?.has(xt.eventObject)??!1,jt=Ct=>{const Kt={intersection:xt,target:ae.target};et.capturedMap.has(Ct)?et.capturedMap.get(Ct).set(xt.eventObject,Kt):et.capturedMap.set(Ct,new Map([[xt.eventObject,Kt]])),ae.target.setPointerCapture(Ct)},lt=Ct=>{const Kt=et.capturedMap.get(Ct);Kt&&Jr(et.capturedMap,xt.eventObject,Kt,Ct)},At={};for(const Ct in ae){const Kt=ae[Ct];"function"!=typeof Kt&&(At[Ct]=Kt)}const zt={...xt,...At,pointer:He,intersections:X,stopped:Fe.stopped,delta:we,unprojectedPoint:Xe,ray:_t.ray,camera:Lt,stopPropagation:()=>{const Ct="pointerId"in ae&&et.capturedMap.get(ae.pointerId);(!Ct||Ct.has(xt.eventObject))&&(zt.stopped=Fe.stopped=!0,et.hovered.size&&Array.from(et.hovered.values()).find(Kt=>Kt.eventObject===xt.eventObject))&&W([...X.slice(0,X.indexOf(xt)),xt])},target:{hasPointerCapture:Jt,setPointerCapture:jt,releasePointerCapture:lt},currentTarget:{hasPointerCapture:Jt,setPointerCapture:jt,releasePointerCapture:lt},nativeEvent:ae};if(de(zt),!0===Fe.stopped)break}}}(et,ae,Xe,Fe=>{const xt=Fe.eventObject,Jt=vn(xt),jt=Jt?.handlers;if(Jt?.eventCount)if(_t){if(jt.pointerover||jt.pointerenter||jt.pointerout||jt.pointerleave){const lt=yi(Fe),At=de.hovered.get(lt);At?At.stopped&&Fe.stopPropagation():(de.hovered.set(lt,Fe),jt.pointerover?.(Fe),jt.pointerenter?.(Fe))}jt.pointermove?.(Fe)}else{const lt=jt[X];lt?(!He||de.initialHits.includes(xt))&&(V(ae,de.interaction.filter(At=>!de.initialHits.includes(At))),lt(Fe)):He&&de.initialHits.includes(xt)&&V(ae,de.interaction.filter(At=>!de.initialHits.includes(At)))}})}}}}(()=>this.get());this.set(w=>({events:{...w.events,handlers:Object.keys(nr).reduce((N,z)=>(N[z]=u(z),N),{})}})),(0,kt.Q_)(this,Vi,"m",Wi).call(this,M)},Wi=function(M){this.set(w=>({events:{...w.events,connected:M}}));const u=this.get(w=>w.events.handlers);Object.entries(u??{}).forEach(([w,N])=>{M.addEventListener(w,N,{passive:nr[w]})})},ji=function(){const{handlers:M,connected:u}=this.get(w=>w.events);u&&Object.entries(M??{}).forEach(([w,N])=>{u instanceof HTMLElement&&u.removeEventListener(w,N)})},sn.\u0275fac=function(M){return new(M||sn)(D.LFG(D.SBq),D.LFG(bl),D.LFG(Ln),D.LFG(sn,12),D.LFG(qs),D.LFG(D.R0b))},sn.\u0275prov=D.Yz7({token:sn,factory:sn.\u0275fac});let Mt=(()=>{class x extends ps{constructor(u=!1){super(),this.skipSelfStore=u,this.ready=new D.vpe,this.hasEmittedAlready=!1,this.update=new D.vpe,this.instance$=this.select(w=>w.instance).pipe((0,_l.w)(w=>w.pipe((0,Wr.h)(N=>null!=N)))),this.instanceArgs$=this.select(w=>w.instanceArgs),this.zone=(0,D.f3M)(D.R0b),this.store=this.skipSelfStore?(0,D.f3M)(sn,{skipSelf:!0}):(0,D.f3M)(sn),this.document=(0,D.f3M)(Le.K0),this.parentRef=Dc({skipSelf:!0,optional:!0}),this.parentHostRef=ni({skipSelf:!0,optional:!0}),this.isPrimitive=!1,this.isWrapper=!1,this.isRaw=!1,this.instanceReady=this.effect(gn(()=>{const w=this.setOptions(this.select(Ys(this,this.optionFields,Re.material(this.instanceValue)),this.setOptionsTrigger$,N=>N));return this.get(N=>N.noAttach)||this.attachToParent(),()=>{w.unsubscribe()}})),this.setOptions=this.effect((0,Dn.b)(w=>{if(0!==Object.keys(w).length&&this.instanceValue){const N=this.get(),z={},{rotation:W,quaternion:ce,...V}=w;W?z.rotation=N.rotation:ce&&(z.quaternion=N.quaternion);for(const X of Object.keys(V))(Re.material(this.instanceValue)?void 0!==N[X]:null!=N[X])&&(z[X]=N[X]);Re.material(this.instanceValue)?(z.uniforms={},"uniforms"in this.instanceValue&&"uniforms"in V&&(z.uniforms={...this.instanceValue.uniforms,...V.uniforms}),this.instanceValue.setValues(z)):Fn(this.instanceValue,z),this.postSetOptions(this.instanceValue),Zs(this.instanceValue),this.update.observed&&this.update.emit(this.instanceValue)}})),this.attachToParent=this.effect((0,jr.z)(cs(this.select(w=>w.attach)),(0,Dn.b)(([,w])=>{let N=this.__ngt__.parent;if(!N||!N.value){if(!this.parent?.value)return;this.__ngt__.parent=this.parent,N=this.parent}if("function"==typeof w){const z=w(N,this.instance);z&&(this.__ngt__.previousAttach=z)}else{const z=[...w];if(0===z.length||("material"===z[0]&&z[1]&&Re.num(Number(z[1]))&&Re.material(this.instanceValue)&&(Re.arr(N.value.material)||(N.value.material=[])),("material"===z[0]||"geometry"===z[0])&&!Re.mesh(N.value)))return;this.__ngt__.previousAttachValue=z.reduce((W,ce)=>W[ce],N.value),eo(N.value,z,this.instanceValue),this.__ngt__&&this.__ngt__.root().invalidate(),N.value.__ngt__&&N.value.__ngt__.root().invalidate(),this.__ngt__.previousAttach=z,this.set({attach:z})}Zs(N.value),Zs(this.instanceValue)}))),this.set({instance:new Oi(null),instanceArgs:[],attach:[],noAttach:!1,skipParent:!1})}set ref(u){this.set({instance:u})}set skipParent(u){this.set({attachExplicit:!0,skipParent:pt(u)})}get skipParent(){return this.get(u=>u.skipParent)}set noAttach(u){this.set({noAttachExplicit:!0,noAttach:pt(u)})}get noAttach(){return this.get(u=>u.noAttach)}set attach(u){u&&this.set({skipParentExplicit:!0,attach:"function"==typeof u||Re.arr(u)?u:[u]})}get attach(){return this.get(u=>u.attach)}get instance(){return this.get(u=>u.instance)}get instanceValue(){return this.isRaw?this.instance.value.valueOf():this.instance.value}get __ngt__(){return this.instance.value.__ngt__}get parent(){return this.skipParent&&this.parentHostRef?.()||this.parentRef?.()}set instanceArgs(u){this.set({instanceArgs:Re.arr(u)?u:[u]})}get instanceArgs(){return this.get(u=>u.instanceArgs)}ngOnInit(){this.zone.runOutsideAngular(()=>{this.preInit(),this.store.onReady(()=>{this.instanceReady(this.instance$)})})}preInit(){}postInit(){}emitReady(){this.hasEmittedAlready||(this.ready.emit(this.instanceValue),this.hasEmittedAlready=!0)}prepareInstance(u,w){w&&"uuid"in u&&(u.uuid=w);const N=xi(u,()=>this.store.get(),this.parent,this.instance,this.isPrimitive);if(this.postPrepare(N),this.instance.set(N),this.emitReady(),!Re.object3d(N)&&!this.noAttach&&!this.skipParent){const z=N.__ngt__.parent?.value?.__ngt__?.objects;z&&z.set([...z.value,this.instance])}return N}adjustCtorParams(u){return u}get ctorParams$(){return this.instanceArgs$.pipe((0,Di.U)(()=>({})))}destroy(){if(this.instanceValue){if(Re.object3d(this.instanceValue)){const w=this.parent;w&&Re.object3d(w.value)&&function qo(x,M){const u=x().internal;u.interaction=u.interaction.filter(w=>w!==M),u.initialHits=u.initialHits.filter(w=>w!==M),u.hovered.forEach((w,N)=>{(w.eventObject===M||w.object===M)&&u.hovered.delete(N)}),u.capturedMap.forEach((w,N)=>{Jr(u.capturedMap,M,w,N)})}(this.__ngt__.root.bind(this.__ngt__),this.instanceValue),null!=this.instanceValue.clear&&this.instanceValue.clear()}else{const w=this.__ngt__.previousAttach;if(null!=w)if("function"==typeof w)w(),this.__ngt__.parent&&this.__ngt__.parent.value&&Gn(this.__ngt__.parent.value);else{const N=this.__ngt__.previousAttachValue;this.__ngt__.parent&&this.__ngt__.parent.value&&(eo(this.__ngt__.parent.value,w,N),Gn(this.__ngt__.parent.value))}}const u=this.instanceValue.dispose;u&&"function"==typeof u&&u.apply(this.instanceValue)}this.set({attach:[]}),this.instance.complete()}postPrepare(u){}get optionFields(){return{}}ngOnDestroy(){this.zone.runOutsideAngular(()=>{this.destroy()}),super.ngOnDestroy()}postSetOptions(u){}get setOptionsTrigger$(){return(0,us.of)({})}}return x.\u0275fac=function(u){return new(u||x)(D.Y36("NGT_SKIP_SELF_STORE",8))},x.\u0275dir=D.lG2({type:x,inputs:{ref:"ref",skipParent:"skipParent",noAttach:"noAttach",attach:"attach"},outputs:{ready:"ready",update:"update"},features:[D.qOj]}),x})();const $n=fn(Mt),[vs,cn,Cl]=Ot("NgtObject ref",mn),[to,Jn,Xi]=Ot("NgtObject host ref",!0,Ml),[_d,sr,Md]=Ot("NgtCamera ref"),[bd,El,Sd]=Ot("NgtScene ref"),Bc=["click","contextmenu","dblclick","pointerup","pointerdown","pointerover","pointerout","pointerenter","pointerleave","pointermove","pointermissed","pointercancel","wheel"];let $o=(()=>{class x extends Mt{constructor(){super(),this.click=new D.vpe,this.contextmenu=new D.vpe,this.dblclick=new D.vpe,this.pointerup=new D.vpe,this.pointerdown=new D.vpe,this.pointerover=new D.vpe,this.pointerout=new D.vpe,this.pointerenter=new D.vpe,this.pointerleave=new D.vpe,this.pointermove=new D.vpe,this.pointermissed=new D.vpe,this.pointercancel=new D.vpe,this.wheel=new D.vpe,this.shouldPassThroughRef=!0,this.parentRef=vs({optional:!0,skipSelf:!0}),this.parentHostRef=to({optional:!0,skipSelf:!0}),this.set({name:"",position:new Ge.Pa4,rotation:new Ge.USm,quaternion:new Ge._fP,scale:new Ge.Pa4(1,1,1),color:new Ge.Ilk,castShadow:!1,receiveShadow:!1,priority:0,visible:!0,matrixAutoUpdate:!0,appendMode:"immediate",userData:{}})}set name(u){this.set({nameExplicit:!0,name:u})}get name(){return this.get(u=>u.name)}set position(u){this.set({positionExplicit:!0,position:ii(Ge.Pa4,u)})}get position(){return this.get(u=>u.position)}get rotation(){return this.get(u=>u.rotation)}set rotation(u){this.set({rotationExplicit:!0,rotation:ii(Ge.USm,u)})}get quaternion(){return this.get(u=>u.quaternion)}set quaternion(u){this.set({quaternionExplicit:!0,quaternion:ii(Ge._fP,u)})}get scale(){return this.get(u=>u.scale)}set scale(u){this.set({scaleExplicit:!0,scale:ii(Ge.Pa4,u)})}get color(){return this.get(u=>u.color)}set color(u){this.set({colorExplicit:!0,color:ii(Ge.Ilk,u)})}get castShadow(){return this.get(u=>u.castShadow)}set castShadow(u){this.set({castShadowExplicit:!0,castShadow:pt(u)})}get receiveShadow(){return this.get(u=>u.receiveShadow)}set receiveShadow(u){this.set({receiveShadowExplicit:!0,receiveShadow:pt(u)})}get priority(){return this.get(u=>u.priority)}set priority(u){this.set({priorityExplicit:!0,priority:Vt(u)})}get visible(){return this.get(u=>u.visible)}set visible(u){this.set({visibleExplicit:!0,visible:pt(u)})}get matrixAutoUpdate(){return this.get(u=>u.matrixAutoUpdate)}set matrixAutoUpdate(u){this.set({matrixAutoUpdateExplicit:!0,matrixAutoUpdate:pt(u)})}get userData(){return this.get(u=>u.userData)}set userData(u){this.set({userDataExplicit:!0,userData:u})}get dispose(){return this.get(u=>u.dispose)}set dispose(u){this.set({disposeExplicit:!0,dispose:u})}get raycast(){return this.get(u=>u.raycast)}set raycast(u){this.set({raycastExplicit:!0,raycast:u})}get appendMode(){return this.get(u=>u.appendMode)}set appendMode(u){this.set({appendModeExplicit:!0,appendMode:u})}get appendTo(){return this.get(u=>u.appendTo)}set appendTo(u){this.set({appendToExplicit:!0,appendTo:u?Re.ref(u)?u:new Oi(u):void 0})}get optionFields(){return{name:!1,position:!1,rotation:!1,quaternion:!1,scale:!1,color:!1,castShadow:!1,receiveShadow:!1,visible:!1,matrixAutoUpdate:!1,userData:!1,dispose:!0,raycast:!0}}}return x.\u0275fac=function(u){return new(u||x)},x.\u0275dir=D.lG2({type:x,inputs:{name:"name",position:"position",rotation:"rotation",quaternion:"quaternion",scale:"scale",color:"color",castShadow:"castShadow",receiveShadow:"receiveShadow",priority:"priority",visible:"visible",matrixAutoUpdate:"matrixAutoUpdate",userData:"userData",dispose:"dispose",raycast:"raycast",appendMode:"appendMode",appendTo:"appendTo"},outputs:{click:"click",contextmenu:"contextmenu",dblclick:"dblclick",pointerup:"pointerup",pointerdown:"pointerdown",pointerover:"pointerover",pointerout:"pointerout",pointerenter:"pointerenter",pointerleave:"pointerleave",pointermove:"pointermove",pointermissed:"pointermissed",pointercancel:"pointercancel",wheel:"wheel"},features:[D.qOj]}),x})(),oi=(()=>{class x extends $o{constructor(){super(...arguments),this.appended=new D.vpe,this.beforeRender=new D.vpe,this.animateReady=this.beforeRender,this.init=this.effect(gn(()=>{if(this.instance.value&&this.__ngt__?this.switch():this.prepareInstance(this.objectInitFn(),this.instance?.value?.uuid),this.instance.value){this.postInit&&this.postInit();const u=Bc.reduce((w,N)=>{const z=this[N].observed?this[N]:null;return z&&(w.handlers[N]=this.eventNameToHandler(z),w.eventCount+=1),w},{handlers:{},eventCount:0});Fn(this.__ngt__,{handlers:u.handlers,eventCount:u.eventCount}),u.eventCount>0&&this.store.addInteraction(this.instance.value),Re.object3d(this.instance.value)&&this.appendToParent(),this.beforeRender.observed&&this.store.registerBeforeRender({obj:this.instance,callback:w=>{this.beforeRender.emit({state:w,object:this.instance.value})},priority:this.get(w=>w.priority)})}return()=>{this.destroy()}}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.store.onReady(()=>{this.preObjectInit?this.preObjectInit(()=>this.init(this.instanceArgs$)):this.init(this.instanceArgs$)})})}get preObjectInit(){}destroy(){this.instance.value&&(this.store.unregisterBeforeRender(this.instance.value.uuid),this.__ngt__.eventCount>0&&this.store.removeInteraction(this.instance.value.uuid),this.remove()),super.destroy()}appendToParent(){const u=()=>{const N=this.get(W=>W.appendTo);if(N&&N.value)return N.value.add(this.instance.value),void this.appended.emit(this.instance.value);const z=this.get(W=>W.appendMode);if("none"!==z){if("root"===z)return this.addToScene(),void this.appended.emit(this.instance.value);"immediate"===z&&(this.addToParent(),this.appended.emit(this.instance.value))}},w=this.store.get(N=>N.gl);w.xr.enabled?w.xr.getSession()?.requestAnimationFrame(u):requestAnimationFrame(u)}addToScene(){const u=this.store.get(w=>w.scene);u&&u.add(this.instance.value)}addToParent(){let u=this.parent;this.shouldUseParent(u)?u.value.add(this.instance.value):(u=this.parentHostRef?.(),this.shouldUseParent(u)?u.value.add(this.instance.value):this.addToScene())}shouldUseParent(u){return u&&u.value&&u.value.uuid!==this.instance.value.uuid}remove(){const{appendMode:u,appendTo:w}=this.get();if(w&&w.value)w.value.remove(this.instance.value);else if(this.shouldUseParent(this.parent)&&"immediate"===u)this.parent.value.remove(this.instance.value);else{const N=this.store.get(z=>z.scene);N&&N.remove(this.instance.value)}}switch(){const u=this.objectInitFn();this.instance.value.children&&(this.instance.value.traverse(w=>{w!==this.instance.value&&w.parent===this.instance.value&&(w.parent=u)}),this.instance.value.children=[]),this.__ngt__.eventCount>0&&this.store.removeInteraction(this.instance.value.uuid),this.remove(),this.prepareInstance(u)}eventNameToHandler(u){return w=>{this.zone.run(()=>{u.emit(w)})}}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,outputs:{appended:"appended",beforeRender:"beforeRender",animateReady:"animateReady"},features:[D.qOj]}),x})();const _i=fn(oi,$n);let Pl=(()=>{class x extends oi{set material(u){this.set({material:u})}set geometry(u){this.set({geometry:u})}set morphTargetInfluences(u){this.set({morphTargetInfluences:u})}set morphTargetDictionary(u){this.set({morphTargetDictionary:u})}objectInitFn(){const u=this.get(),w=this.argsKeys.reduce((z,W)=>(z.push(u[W]),z),[]),N=new this.objectType(Re.ref(u.geometry)?u.geometry.value:u.geometry,Re.arr(u.material)?u.material.map(z=>Re.ref(z)?z.value:z):Re.ref(u.material)?u.material.value:u.material,...w);return u.morphTargetDictionary&&"morphTargetDictionary"in N&&(N.morphTargetDictionary=u.morphTargetDictionary),u.morphTargetInfluences&&"morphTargetInfluences"in N&&(N.morphTargetInfluences=u.morphTargetInfluences),N}get argsKeys(){return[]}get optionFields(){return{...super.optionFields,material:!0,geometry:!0,morphTargetInfluences:!0,morphTargetDictionary:!0}}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{material:"material",geometry:"geometry",morphTargetInfluences:"morphTargetInfluences",morphTargetDictionary:"morphTargetDictionary"},features:[D.qOj]}),x})(),Ll=(()=>{class x{constructor(){this.cached=new Map}use(u,w,N,z){const W=Re.arr(w)?w:[w],ce=new u;N&&N(ce);const V=W.map(X=>(this.cached.has(X)||this.cached.set(X,(0,js.D)(ce.loadAsync(X,z)).pipe((0,Dn.b)(ae=>{ae.scene&&Object.assign(ae,function kc(x){const M={nodes:{},materials:{}};return x&&x.traverse(u=>{u.name&&(M.nodes[u.name]=u),u.material&&!M.materials[u.material.name]&&(M.materials[u.material.name]=u.material)}),M}(ae.scene))}),function pl(x=1/0){let M;M=x&&"object"==typeof x?x:{count:x};const{count:u=1/0,delay:w,resetOnSuccess:N=!1}=M;return u<=0?ot.y:(0,Ve.e)((z,W)=>{let V,ce=0;const X=()=>{let ae=!1;V=z.subscribe((0,je.x)(W,we=>{N&&(ce=0),W.next(we)},void 0,we=>{if(ce++<u){const de=()=>{V?(V.unsubscribe(),V=null,X()):ae=!0};if(null!=w){const _t="number"==typeof w?(0,fl.H)(w):(0,Yt.Xf)(w(we,ce)),He=(0,je.x)(W,()=>{He.unsubscribe(),de()},()=>{W.complete()});_t.subscribe(He)}else de()}else W.error(we)})),ae&&(V.unsubscribe(),V=null,X())};X()})}({count:2}),(0,ti.K)(ae=>(console.error(`Error loading ${X}: ${ae.message}`),(0,us.of)(null))),(0,Hs.B)({connector:()=>new yt,resetOnComplete:!0,resetOnRefCountZero:!0,resetOnError:!0}))),this.cached.get(X)));return function vl(...x){const M=(0,Un.jO)(x),{args:u,keys:w}=(0,ml.D)(x),N=new Gs.y(z=>{const{length:W}=u;if(!W)return void z.complete();const ce=new Array(W);let V=W,X=W;for(let ae=0;ae<W;ae++){let we=!1;(0,Yt.Xf)(u[ae]).subscribe((0,je.x)(z,de=>{we||(we=!0,X--),ce[ae]=de},()=>V--,void 0,()=>{(!V||!we)&&(X||z.next(w?(0,gl.n)(w,ce):ce),z.complete())}))}});return M?N.pipe((0,_e.Z)(M)):N}(V).pipe((0,Di.U)(X=>Re.arr(w)?X:X[0]))}destroy(){this.cached.clear()}ngOnDestroy(){this.destroy()}}return x.\u0275fac=function(u){return new(u||x)},x.\u0275prov=D.Yz7({token:x,factory:x.\u0275fac,providedIn:"root"}),x})();const no=new Set,io=new Set,so=new Set;function xs(x,M){const u={callback:x};return M.add(u),()=>{M.delete(u)}}function ys(x,M){x.forEach(({callback:u})=>u(M))}function Uc(x){return xs(x,no)}function Vc(x){return xs(x,io)}function Jo(x,M,u){const w=M();let N=w.clock.getDelta();"never"===w.frameloop&&"number"==typeof x&&(N=x-w.clock.elapsedTime,w.clock.oldTime=w.clock.elapsedTime,w.clock.elapsedTime=x);for(const z of w.internal.subscribers){const W=Re.ref(z.obj)?z.obj.value:z.obj;z.callback({...w,delta:N,frame:u},W)}return!w.internal.priority&&w.gl.render&&w.gl.render(w.scene,w.camera),w.internal.frames=Math.max(0,w.internal.frames-1),"always"===w.frameloop?1:w.internal.frames}const Ko=new Map,{invalidate:Hc,advance:Wc}=function Gc(x){let u,w,N,M=!1;function z(V){if(w=requestAnimationFrame(z),M=!0,u=0,no.size&&ys(no,V),x.forEach(X=>{N=X(),N.internal.active&&("always"===N.frameloop||N.internal.frames>0)&&!N.gl.xr?.isPresenting&&(u+=Jo(V,X))}),io.size&&ys(io,V),0===u)return so.size&&ys(so,V),M=!1,cancelAnimationFrame(w)}return{loop:z,invalidate:function W(V,X=1){const ae=V?.();if(!ae)return x.forEach(we=>W(we,X));ae.gl.xr?.isPresenting||!ae.internal.active||"never"===ae.frameloop||(ae.internal.frames=Math.min(60,ae.internal.frames+X),M||(M=!0,requestAnimationFrame(z)))},advance:function ce(V,X=!0,ae,we){X&&ys(no,V),ae?Jo(V,ae,we):x.forEach(de=>Jo(V,de)),X&&ys(io,V)}}}(Ko);let Qo=(()=>{class x extends ps{constructor(){super(...arguments),this.hostClass=!0,this._initialLog=!1,this._projectContent=!1,this.created=new D.vpe,this.pointermissed=new D.vpe,this.zone=(0,D.f3M)(D.R0b),this.store=(0,D.f3M)(sn),this.loader=(0,D.f3M)(Ll)}set linear(u){this.store.set({linear:pt(u)})}set legacy(u){this.store.set({legacy:pt(u)})}set flat(u){this.store.set({flat:pt(u)})}set frameloop(u){this.store.setFrameloop(u)}set orthographic(u){this.store.set({orthographic:pt(u)})}set dpr(u){this.store.setDpr(u)}set raycaster(u){this.store.set({raycasterOptions:u})}set shadows(u){this.store.set({shadows:"object"==typeof u?u:pt(u)})}set camera(u){this.store.set({cameraOptions:u})}get cameraRef(){return this.store.get(u=>u.cameraRef)}set lookAt(u){this.store.set({lookAt:ii(Ge.Pa4,u)})}set scene(u){this.store.set({sceneOptions:u})}get sceneRef(){return this.store.get(u=>u.sceneRef)}set gl(u){this.store.set({glOptions:u})}get initialLog(){return this._initialLog}set initialLog(u){this._initialLog=pt(u)}get projectContent(){return this._projectContent}set projectContent(u){this._projectContent=pt(u)}ngOnInit(){this.zone.runOutsideAngular(()=>{this.pointermissed.observed&&this.store.set({pointerMissed:u=>{this.pointermissed.emit(u)}}),Ko.set(this.rendererCanvas.nativeElement,()=>this.store.get()),this.store.init(this.rendererCanvas.nativeElement,Ko,Hc,Wc),this.store.onReady(()=>{const u=this.store.get();this.created.emit(u),this.initialLog&&(console.group("[NgtCanvas] Initialized"),console.log(u),console.groupEnd()),this.store.startLoop(this.store.select())})})}ngOnDestroy(){super.ngOnDestroy(),this.loader.destroy()}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275cmp=D.Xpm({type:x,selectors:[["ngt-canvas"]],viewQuery:function(u,w){if(1&u&&D.Gf(ds,7),2&u){let N;D.iGM(N=D.CRH())&&(w.rendererCanvas=N.first)}},hostVars:2,hostBindings:function(u,w){2&u&&D.ekj("ngt-canvas",w.hostClass)},inputs:{linear:"linear",legacy:"legacy",flat:"flat",frameloop:"frameloop",orthographic:"orthographic",dpr:"dpr",raycaster:"raycaster",shadows:"shadows",camera:"camera",lookAt:"lookAt",scene:"scene",gl:"gl",initialLog:"initialLog",projectContent:"projectContent"},outputs:{created:"created",pointermissed:"pointermissed"},standalone:!0,features:[D._Bn([sn,qs,cn(x,M=>M.sceneRef),El(x,M=>M.sceneRef),sr(x,M=>M.cameraRef)]),D.qOj,D.jDz],ngContentSelectors:Fi,decls:5,vars:1,consts:[["rendererCanvas",""],[3,"ngTemplateOutlet",4,"ngIf"],["contentTemplate",""],[3,"ngTemplateOutlet"]],template:function(u,w){1&u&&(D.F$t(),D._UZ(0,"canvas",null,0),D.YNc(2,fs,1,1,"ng-container",1),D.YNc(3,dn,1,0,"ng-template",null,2,D.W1O)),2&u&&(D.xp6(2),D.Q6J("ngIf",w.projectContent))},dependencies:[Le.O5,Le.tP],styles:["[_nghost-%COMP%]{display:block;position:relative;width:100%;height:100%;overflow:hidden}[_nghost-%COMP%]   canvas[_ngcontent-%COMP%]{display:block}"],changeDetection:0}),x})();const[qi,hn,Rl]=Ot("NgtCommonAttribute ref",mn),[Yi,rr,Rn]=Ot("NgtCommonAudio ref",cn),[$t,ro,jc]=Ot("NgtCommonCamera ref",cn),[Xc,or,qc]=Ot("NgtCommonCurve ref",mn),[Yc,Il,Zc]=Ot("NgtCommonGeometry ref",mn),[$c,Nl,Jc]=Ot("NgtCommonHelper ref",cn),[Kc,Qc,eh]=Ot("NgtCommonObjectHelper ref",mn),[oo,,Dl]=Ft("isWebGLAvailable",{defaultValueOrFactory:()=>{const x=(0,D.f3M)(Le.K0),M=Xr();try{const u=x.createElement("canvas");return!(!M.WebGL2RenderingContext||!u.getContext("webgl2"))}catch{return!1}}}),[ao,Fl,th]=Ot("NgtCommonLight ref",cn),[nh,ih,ne]=Ot("NgtCommonLine ref",cn),[_n,ta,sh]=Ot("NgtCommonMaterial ref",mn),[_s,Ms,Zi]=Ot("NgtCommonMesh ref",cn),[lo,na,On]=Ot("NgtSkinnedMesh host ref",!0),[Ol,rn,Hn]=Ot("NgtSkeleton host ref",!0),[co,ia,ho]=Ot("NgtBone host ref",!0),[Pe,bs,zl]=Ot("NgtCommonSprite ref",cn),[Ss,sa,rh]=Ot("NgtCommonTexture ref",mn);let oh=(()=>{class x{constructor(u){this.host=u}set ngtObjectPassThrough(u){x.assertWrapper(u);const w=function uo(x,M){return(u,w=!1,N=!1)=>{let z=x.select(ce=>ce[u]),W=M.select(ce=>ce[u]);w&&(z=z.pipe(Pn()),W=W.pipe(Pn())),(0,gi.T)(z,W).pipe((0,ei.R)(x.destroy$)).subscribe(ce=>{M[u]=N?void 0!==M[u]&&void 0===ce?M[u]:ce:M.get(V=>V[u+"Explicit"])?M[u]:x[u]})}}(u,this.host),N=function Kn(x,M){return u=>{const w=x[u],N=M[u];Re.eventEmitter(w)&&Re.eventEmitter(N)&&w.observed&&N.pipe((0,ei.R)(x.destroy$)).subscribe(w.emit.bind(w))}}(u,this.host);N("click"),N("contextmenu"),N("dblclick"),N("pointerup"),N("pointerdown"),N("pointerover"),N("pointerout"),N("pointerenter"),N("pointerleave"),N("pointermove"),N("pointermissed"),N("pointercancel"),N("wheel"),N("ready"),u.shouldPassThroughRef&&(this.host.ref=u.instance),w("attach"),w("skipParent"),w("noAttach"),w("name"),w("position"),w("rotation"),w("quaternion"),w("scale"),w("color"),w("userData"),w("castShadow",!0),w("receiveShadow",!0),w("visible"),w("matrixAutoUpdate"),w("dispose",!0),w("raycast",!0),w("appendMode"),w("appendTo",!0)}static assertWrapper(u){if(!(u instanceof $o))throw new Error("[NgtObjectPassThrough] wrapper is not an NgtObject")}}return x.\u0275fac=function(u){return new(u||x)(D.Y36(oi,10))},x.\u0275dir=D.lG2({type:x,selectors:[["","ngtObjectPassThrough",""]],inputs:{ngtObjectPassThrough:"ngtObjectPassThrough"},standalone:!0}),x})(),ah=(()=>{class x extends Le.sg{set ngForRepeat(u){this.ngForOf=Number.isInteger(u)?Array.from({length:u},(w,N)=>N):[]}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,selectors:[["","ngFor","","ngForRepeat",""]],inputs:{ngForRepeat:"ngForRepeat"},standalone:!0,features:[D.qOj]}),x})(),Mi=(()=>{class x{transform(u){return u*Math.PI/180}}return x.\u0275fac=function(u){return new(u||x)},x.\u0275pipe=D.Yjl({name:"radian",type:x,pure:!0,standalone:!0}),x})(),bi=(()=>{class x{transform(u){switch(u){case"front":return Ge.Wl3;case"back":return Ge._Li;case"double":return Ge.ehD}}}return x.\u0275fac=function(u){return new(u||x)},x.\u0275pipe=D.Yjl({name:"side",type:x,pure:!0,standalone:!0}),x})();const $i=["events","invalidate","advance","size","viewport"];let Si=(()=>{class x{constructor(u){this.templateRef=u}static ngTemplateContextGuard(u,w){return!0}}return x.\u0275fac=function(u){return new(u||x)(D.Y36(D.Rgc))},x.\u0275dir=D.lG2({type:x,selectors:[["ng-template","ngt-portal-content",""]],standalone:!0}),x})(),Ji=(()=>{class x extends Mt{constructor(){super(!0),this.resizeResult$=(0,D.f3M)(qs),this.init=this.effect((0,Dn.b)(()=>{const u=this.store.get();this.set(w=>({raycaster:new Ge.iMs,pointer:new Ge.FM8,size:w.size??u.size,events:w.events??u.events}))})),this.initPortalStore=this.effect((0,Dn.b)(()=>{const u=this.store.get(),w=this.get(),N={clientWidth:w.size.width,clientHeight:w.size.height},{regress:z,...W}=u.performance,ce=new sn({nativeElement:N},W,{devicePixelRatio:Ui(u.viewport.dpr)},this.store,this.resizeResult$,this.zone),V=this.instance;let X=this.instance.value;X||(X=xi(new Ge.xsS,()=>ce.get(),this.parentRef?.()),this.instance.set(X)),ce.set({...u,scene:X,sceneRef:V,raycaster:w.raycaster,pointer:w.pointer,mouse:w.pointer,previousState:this.store.get(),events:{...u.events,...w.events},size:{...u.size,...w.size}}),this.set({portalStore:ce})})),this.subscribeToRoot=this.effect(gn(()=>{const u=this.store.select().subscribe(w=>{this.get(N=>N.portalStore).set(N=>this.inject(w,N))});return()=>{u.unsubscribe()}})),this.setInitialPortalState=this.effect((0,Dn.b)(()=>{this.get(u=>u.portalStore).set(u=>this.inject(this.store.get(),u))}))}set size(u){this.set({size:u})}set events(u){this.set({events:u})}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.init(),this.store.onReady(()=>{this.initPortalStore(),this.subscribeToRoot(),this.setInitialPortalState()})})}inject(u,w){const{size:N,events:z,portalStore:W}=this.get(),{scene:ce,raycaster:V,pointer:X,previousState:ae,events:we,size:de,viewport:_t,mouse:He,...Lt}=W.get(),et={...u};let Xe;if(Object.keys(u).forEach(Fe=>{($i.includes(Fe)||u[Fe]!==w[Fe])&&delete et[Fe]}),w&&N){const Fe=w.camera;Xe=u.viewport.getCurrentViewport(Fe,new Ge.Pa4,N),Fe!==u.camera&&Zr(u.cameraOptions,Fe,N)}return{...et,scene:ce,raycaster:V,pointer:X,mouse:He,previousState:ae,events:{...u.events,...w?.events||we,...z},size:{...u.size,...de,...N},viewport:{...u.viewport,...Xe||_t},...Lt}}}return x.\u0275fac=function(u){return new(u||x)},x.\u0275cmp=D.Xpm({type:x,selectors:[["ngt-portal"]],contentQueries:function(u,w,N){if(1&u&&D.Suo(N,Si,5),2&u){let z;D.iGM(z=D.CRH())&&(w.content=z.first)}},inputs:{size:"size",events:"events"},standalone:!0,features:[D._Bn([qs,{provide:sn,useFactory:M=>M.get(u=>u.portalStore),deps:[x]},cn(x,M=>M.get(u=>u.portalStore).get(u=>u.sceneRef)),El(x,M=>M.get(u=>u.portalStore).get(u=>u.sceneRef)),sr(x,M=>M.get(u=>u.portalStore).get(u=>u.cameraRef))]),D.qOj,D.jDz],ngContentSelectors:Fi,decls:2,vars:1,consts:[[3,"ngTemplateOutlet","ngTemplateOutletContext",4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(u,w){1&u&&(D.F$t(),D.YNc(0,Xs,1,4,"ng-container",0),D.Hsn(1)),2&u&&D.Q6J("ngIf",w.content)},dependencies:[Le.O5,Le.tP],encapsulation:2,changeDetection:0}),x})(),Qn=(()=>{class x extends Mt{constructor(){super(...arguments),this.init=this.effect(gn(u=>{this.prepareInstance(new this.attributeType(...u))}))}set args(u){this.instanceArgs=u}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.store.onReady(()=>{const u=this.init(this.instanceArgs$);return this.postInit(),()=>{u&&u.unsubscribe&&u.unsubscribe()}})})}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{args:"args"},features:[D.qOj]}),x})();const Ti=fn(Qn,$n);fn((()=>{class x extends oi{set listener(u){this.set({listener:u})}set buffer(u){this.set({buffer:u})}set detune(u){this.set({detune:Vt(u)})}set loop(u){this.set({loop:pt(u)})}set loopStart(u){this.set({loopStart:Vt(u)})}set loopEnd(u){this.set({loopEnd:Vt(u)})}set offset(u){this.set({offset:Vt(u)})}set playbackRate(u){this.set({playbackRate:Vt(u)})}set isPlaying(u){this.set({isPlaying:pt(u)})}set hasPlaybackControl(u){this.set({hasPlaybackControl:pt(u)})}set sourceType(u){this.set({sourceType:u})}set source(u){this.set({source:u})}set filters(u){this.set({filters:u})}set duration(u){this.set({duration:Vt(u)})}set autoplay(u){this.set({autoplay:pt(u)})}objectInitFn(){const{listener:u}=this.get();if(!u)throw new Error(`[NgtCommonAudio] Cannot initialize ${this.audioType} without "THREE.AudioListener"`);return new this.audioType(u)}preInit(){this.set(u=>({buffer:u.buffer||null,detune:u.detune||0,loop:u.loop||!1,loopStart:u.loopStart||0,loopEnd:u.loopEnd||0,offset:u.offset||0,duration:u.duration||void 0,playbackRate:u.playbackRate||1,isPlaying:u.isPlaying||!1,hasPlaybackControl:u.hasPlaybackControl||!0,sourceType:u.sourceType||"empty",source:u.source||null,filters:u.filters||[]}))}get preObjectInit(){return u=>{this.effect(gn(()=>{u()}))(this.select(w=>w.listener))}}get optionFields(){return{...super.optionFields,autoplay:!0,buffer:!1,detune:!1,loop:!1,loopStart:!1,loopEnd:!1,offset:!1,duration:!0,playbackRate:!1,isPlaying:!1,hasPlaybackControl:!1,sourceType:!1,source:!1,filters:!1}}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{listener:"listener",buffer:"buffer",detune:"detune",loop:"loop",loopStart:"loopStart",loopEnd:"loopEnd",offset:"offset",playbackRate:"playbackRate",isPlaying:"isPlaying",hasPlaybackControl:"hasPlaybackControl",sourceType:"sourceType",source:"source",filters:"filters",duration:"duration",autoplay:"autoplay"},features:[D.qOj]}),x})(),_i);let ws=(()=>{class x extends oi{set args(u){this.instanceArgs=u}objectInitFn(){const u=this.get(w=>w.instanceArgs);return new this.cameraType(...u)}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{args:"args"},features:[D.qOj]}),x})();const Ai=fn(ws,_i);fn((()=>{class x extends Mt{constructor(){super(...arguments),this.init=this.effect(gn(u=>{this.prepareInstance(new this.curveType(...u))}))}set args(u){this.instanceArgs=u}set arcLengthDivisions(u){this.set({arcLengthDivisions:Vt(u)})}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.store.onReady(()=>{this.init(this.instanceArgs$),this.postInit()})})}postPrepare(u){const w=this.get(N=>N.arcLengthDivisions);null!=w&&(u.arcLengthDivisions=w)}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{args:"args",arcLengthDivisions:"arcLengthDivisions"},features:[D.qOj]}),x})(),$n);let po=(()=>{class x extends Mt{constructor(){super(...arguments),this.parentRef=vs({optional:!0,skipSelf:!0}),this.parentHostRef=to({optional:!0,skipSelf:!0}),this.init=this.effect(gn(()=>{const u=this.get(z=>z.instanceArgs),w=this.adjustCtorParams(u),N=this.prepareInstance(new this.geometryType(...w));return()=>{N.dispose()}}))}set args(u){this.instanceArgs=u}preInit(){this.set(u=>({attach:u.attach.length?u.attach:["geometry"]}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.store.onReady(()=>{this.init(this.ctorParams$),this.postInit()})})}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{args:"args"},features:[D.qOj]}),x})();const lr=fn(po,$n);let cr=(()=>{class x extends oi{set args(u){this.instanceArgs=u}objectInitFn(){const u=this.get(w=>w.instanceArgs);return new this.helperType(...u)}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{args:"args"},features:[D.qOj]}),x})();const Ci=fn(cr,_i);let jn=(()=>{class x extends oi{set args(u){this.instanceArgs=u}set intensity(u){this.set({intensity:Vt(u)})}objectInitFn(){const{intensity:u,instanceArgs:w}=this.get(),N=new this.lightType(...w);return null!=u&&(N.intensity=u),N}get preObjectInit(){return u=>{this.set(w=>({intensity:w.intensity??1})),u()}}get optionFields(){return{...super.optionFields,intensity:!1}}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{args:"args",intensity:"intensity"},features:[D.qOj]}),x})();const mo=fn(jn,_i);fn((()=>{class x extends Pl{get objectType(){return this.lineType}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,features:[D.qOj]}),x})(),_i);let hr=(()=>{class x extends Mt{constructor(){super(...arguments),this.parentRef=vs({optional:!0,skipSelf:!0}),this.parentHostRef=to({optional:!0,skipSelf:!0}),this.init=this.effect(gn(()=>{const u=this.prepareInstance(new this.materialType);return()=>{u.dispose()}}))}set alphaTest(u){this.set({alphaTest:Vt(u)})}set alphaToCoverage(u){this.set({alphaToCoverage:pt(u)})}set blendDst(u){this.set({blendDst:u})}set blendDstAlpha(u){this.set({blendDstAlpha:Vt(u)})}set blendEquation(u){this.set({blendEquation:u})}set blendEquationAlpha(u){this.set({blendEquationAlpha:Vt(u)})}set blending(u){this.set({blending:u})}set blendSrc(u){this.set({blendSrc:u})}set blendSrcAlpha(u){this.set({blendSrcAlpha:Vt(u)})}set clipIntersection(u){this.set({clipIntersection:pt(u)})}set clippingPlanes(u){this.set({clippingPlanes:u})}set clipShadows(u){this.set({clipShadows:pt(u)})}set colorWrite(u){this.set({colorWrite:pt(u)})}set defines(u){this.set({defines:u})}set depthFunc(u){this.set({depthFunc:u})}set depthTest(u){this.set({depthTest:pt(u)})}set depthWrite(u){this.set({depthWrite:pt(u)})}set name(u){this.set({name:u})}set opacity(u){this.set({opacity:Vt(u)})}set polygonOffset(u){this.set({polygonOffset:pt(u)})}set polygonOffsetFactor(u){this.set({polygonOffsetFactor:Vt(u)})}set polygonOffsetUnits(u){this.set({polygonOffsetUnits:Vt(u)})}set precision(u){this.set({precision:u})}set premultipliedAlpha(u){this.set({premultipliedAlpha:pt(u)})}set dithering(u){this.set({dithering:pt(u)})}set side(u){this.set({side:u})}set shadowSide(u){this.set({shadowSide:u})}set toneMapped(u){this.set({toneMapped:pt(u)})}set transparent(u){this.set({transparent:pt(u)})}set vertexColors(u){this.set({vertexColors:pt(u)})}set visible(u){this.set({visible:pt(u)})}set format(u){this.set({format:u})}set stencilWrite(u){this.set({stencilWrite:pt(u)})}set stencilFunc(u){this.set({stencilFunc:u})}set stencilRef(u){this.set({stencilRef:Vt(u)})}set stencilWriteMask(u){this.set({stencilWriteMask:Vt(u)})}set stencilFuncMask(u){this.set({stencilFuncMask:Vt(u)})}set stencilFail(u){this.set({stencilFail:u})}set stencilZFail(u){this.set({stencilZFail:u})}set stencilZPass(u){this.set({stencilZPass:u})}set userData(u){this.set({userData:u})}preInit(){this.set(u=>({attach:u.attach.length?u.attach:["material"]}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.store.onReady(()=>{this.init(this.ctorParams$),this.postInit()})})}get optionFields(){return{...super.optionFields,alphaTest:!0,alphaToCoverage:!0,blendDst:!0,blendDstAlpha:!0,blendEquation:!0,blendEquationAlpha:!0,blending:!0,blendSrc:!0,blendSrcAlpha:!0,clipIntersection:!0,clippingPlanes:!0,clipShadows:!0,colorWrite:!0,defines:!0,depthFunc:!0,depthTest:!0,depthWrite:!0,fog:!0,name:!0,opacity:!0,polygonOffset:!0,polygonOffsetFactor:!0,polygonOffsetUnits:!0,precision:!0,premultipliedAlpha:!0,dithering:!0,side:!0,shadowSide:!0,toneMapped:!0,transparent:!0,vertexColors:!0,visible:!0,format:!0,stencilWrite:!0,stencilFunc:!0,stencilRef:!0,stencilWriteMask:!0,stencilFuncMask:!0,stencilFail:!0,stencilZFail:!0,stencilZPass:!0,userData:!0}}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{alphaTest:"alphaTest",alphaToCoverage:"alphaToCoverage",blendDst:"blendDst",blendDstAlpha:"blendDstAlpha",blendEquation:"blendEquation",blendEquationAlpha:"blendEquationAlpha",blending:"blending",blendSrc:"blendSrc",blendSrcAlpha:"blendSrcAlpha",clipIntersection:"clipIntersection",clippingPlanes:"clippingPlanes",clipShadows:"clipShadows",colorWrite:"colorWrite",defines:"defines",depthFunc:"depthFunc",depthTest:"depthTest",depthWrite:"depthWrite",name:"name",opacity:"opacity",polygonOffset:"polygonOffset",polygonOffsetFactor:"polygonOffsetFactor",polygonOffsetUnits:"polygonOffsetUnits",precision:"precision",premultipliedAlpha:"premultipliedAlpha",dithering:"dithering",side:"side",shadowSide:"shadowSide",toneMapped:"toneMapped",transparent:"transparent",vertexColors:"vertexColors",visible:"visible",format:"format",stencilWrite:"stencilWrite",stencilFunc:"stencilFunc",stencilRef:"stencilRef",stencilWriteMask:"stencilWriteMask",stencilFuncMask:"stencilFuncMask",stencilFail:"stencilFail",stencilZFail:"stencilZFail",stencilZPass:"stencilZPass",userData:"userData"},features:[D.qOj]}),x})();const ur=fn(hr,$n);let dr=(()=>{class x extends Pl{get objectType(){return this.meshType}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,features:[D.qOj]}),x})();const fr=fn(dr,_i);fn((()=>{class x extends Mt{constructor(){super(...arguments),this.parentRef=vs({optional:!0}),this.parentHostRef=to({optional:!0}),this.init=this.effect(gn(u=>{if(!this.parent||!this.parent.value)return void console.info("Parent is not an object3d");const w=this.prepareInstance(new this.objectHelperType(this.parent.value,...u)),N=this.store.get(z=>z.scene);if(w&&N){N.add(w);const z=this.store.registerBeforeRender({callback:()=>{w&&w.update()},obj:this.instance});return()=>{w&&N&&(N.remove(w),z())}}}))}set helperVisible(u){this.set({visible:pt(u)})}preInit(){super.preInit(),this.set(u=>({visible:u.visible??!0}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.store.onReady(()=>{this.init(this.instanceArgs$),this.postInit()})})}get optionFields(){return{...super.optionFields,visible:!1}}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{helperVisible:"helperVisible"},features:[D.qOj]}),x})(),$n),fn((()=>{class x extends oi{set args(u){this.instanceArgs=u}set material(u){this.set({material:u})}objectInitFn(){const{material:u}=this.get();return new this.spriteType(u)}get optionFields(){return{...super.optionFields,material:!0}}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{args:"args",material:"material"},features:[D.qOj]}),x})(),_i),fn((()=>{class x extends Mt{constructor(){super(...arguments),this.init=this.effect(gn(()=>{const u=this.store.get(W=>W.gl),w=this.get(W=>W.instanceArgs),N=this.adjustCtorParams(w),z=this.prepareInstance(new this.textureType(...N));return z.encoding=u.outputEncoding,Gn(z),()=>{z.dispose()}}))}set args(u){this.instanceArgs=u}set image(u){this.set({image:u})}set mapping(u){this.set({mapping:u})}set wrapS(u){this.set({wrapS:u})}set wrapT(u){this.set({wrapT:u})}set magFilter(u){this.set({magFilter:u})}set minFilter(u){this.set({minFilter:u})}set format(u){this.set({format:u})}set type(u){this.set({type:u})}set anisotropy(u){this.set({anisotropy:Vt(u)})}set encoding(u){this.set({encoding:u})}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.store.onReady(()=>{this.init(this.ctorParams$),this.postInit()})})}get optionFields(){return{...super.optionFields,image:!0,mapping:!0,wrapS:!0,wrapT:!0,magFilter:!0,minFilter:!0,format:!0,type:!0,anisotropy:!0,encoding:!0}}}return x.\u0275fac=function(){let M;return function(w){return(M||(M=D.n5z(x)))(w||x)}}(),x.\u0275dir=D.lG2({type:x,inputs:{args:"args",image:"image",mapping:"mapping",wrapS:"wrapS",wrapT:"wrapT",magFilter:"magFilter",minFilter:"minFilter",format:"format",type:"type",anisotropy:"anisotropy",encoding:"encoding"},features:[D.qOj]}),x})(),$n)},969:(Yn,Wt,fe)=>{fe.d(Wt,{$V:()=>Z0,$YQ:()=>jh,A5E:()=>ov,BKK:()=>Cs,CP7:()=>Xh,D1R:()=>mn,DvJ:()=>ss,EJi:()=>Iu,F5T:()=>Bn,FM8:()=>ne,IEO:()=>Er,IOt:()=>cn,Ilk:()=>Pe,JQ4:()=>En,Kj0:()=>xn,L5s:()=>Zu,LY2:()=>jr,Ltg:()=>Tt,Lun:()=>ec,M8C:()=>ih,Mig:()=>qu,N$j:()=>rc,NMF:()=>ji,OdW:()=>La,OoA:()=>Fi,Ox3:()=>Xu,PMe:()=>Hu,Pa4:()=>E,QRU:()=>N0,QmN:()=>wt,ROQ:()=>Ig,RSm:()=>Du,RsA:()=>mt,S9g:()=>N,SPe:()=>lu,SUY:()=>td,Syv:()=>Wi,TUv:()=>su,T_f:()=>Yu,TlE:()=>an,Tme:()=>Fe,Tn7:()=>Ru,TyD:()=>Zt,USm:()=>w,UY4:()=>ac,UZH:()=>D,UlW:()=>eo,V1s:()=>xa,VLJ:()=>J0,Vkp:()=>_n,VzW:()=>Pn,WdD:()=>ut,Wid:()=>yc,Wl3:()=>Zn,Y8D:()=>qr,YBo:()=>Fu,YLQ:()=>Xs,ZAu:()=>Sr,Zp0:()=>wc,ZzF:()=>Mi,_12:()=>Cs,_C8:()=>Do,_Li:()=>at,_am:()=>mh,_fP:()=>Mn,a$l:()=>Oe,aH4:()=>Re,aLr:()=>Ci,aNw:()=>Ns,av9:()=>Yr,b_z:()=>Eo,blk:()=>pu,brP:()=>ki,cBK:()=>S0,cJO:()=>Io,cLu:()=>zi,cPb:()=>pn,cek:()=>ju,dSO:()=>Ge,dUE:()=>Fo,dd2:()=>Kn,dj0:()=>ys,dpR:()=>T0,ehD:()=>vt,ejS:()=>Na,epp:()=>On,fHI:()=>Is,fY$:()=>ti,hEm:()=>jo,hH6:()=>Ni,iKG:()=>Ma,iLg:()=>Dr,iMs:()=>Y0,iUV:()=>Ut,jFi:()=>Cn,jyz:()=>Li,kB5:()=>Ls,knz:()=>Mt,lLk:()=>_c,lRF:()=>Ql,lb7:()=>Pr,m7l:()=>zo,mSO:()=>vs,nls:()=>In,ntZ:()=>tn,oAp:()=>gh,p7A:()=>av,pBf:()=>qi,qyh:()=>Ot,rBU:()=>Me,rDY:()=>ph,rnI:()=>ri,rpg:()=>fs,tEQ:()=>Bu,u9r:()=>ct,uL9:()=>Vn,uWy:()=>dn,vBJ:()=>es,vmT:()=>ku,vpT:()=>ic,wJv:()=>vi,wem:()=>Ft,wk1:()=>Ln,woe:()=>gu,x12:()=>Rs,xEZ:()=>Wn,xWb:()=>Cc,xfE:()=>js,xo$:()=>Ir,xoR:()=>Nu,xsS:()=>qh,yC1:()=>Oo,yGw:()=>Qe,ybr:()=>Ta,ywz:()=>ni,yxD:()=>w0,z$h:()=>Al,z81:()=>$n,z8B:()=>Qh,zob:()=>lv});var Le=fe(1519);const D="142",mt={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},wt={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},tn=2,Zn=0,at=1,vt=2,Cn=0,Vn=0,jr=4,js=300,ti=301,Ge=303,fs=1e3,dn=1001,Fi=1002,Zt=1003,Xs=1004,Re=1005,Ft=1006,Ot=1007,mn=1008,ni=1009,En=1014,Pn=1015,zi=1016,vi=1020,Ln=1023,qr=1024,Bi=1026,ki=1027,jo=1028,Yr=1030,Wi=2300,ji=2301,eo=1,Al=2,ri=3e3,Mt=3001,$n=3200,vs=3201,cn=0,Jn="srgb",Xi="srgb-linear",ys=35048;class qi{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const i=this._listeners[e];if(void 0!==i){const s=i.indexOf(t);-1!==s&&i.splice(s,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const n=this._listeners[e.type];if(void 0!==n){e.target=this;const i=n.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,e);e.target=null}}}const hn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Rl=1234567;const Yi=Math.PI/180,rr=180/Math.PI;function Rn(){const a=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(hn[255&a]+hn[a>>8&255]+hn[a>>16&255]+hn[a>>24&255]+"-"+hn[255&e]+hn[e>>8&255]+"-"+hn[e>>16&15|64]+hn[e>>24&255]+"-"+hn[63&t|128]+hn[t>>8&255]+"-"+hn[t>>16&255]+hn[t>>24&255]+hn[255&n]+hn[n>>8&255]+hn[n>>16&255]+hn[n>>24&255]).toLowerCase()}function $t(a,e,t){return Math.max(e,Math.min(t,a))}function ro(a,e){return(a%e+e)%e}function or(a,e,t){return(1-t)*a+t*e}function oo(a){return 0==(a&a-1)&&0!==a}function Dl(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))}function ao(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}var ih=Object.freeze({__proto__:null,DEG2RAD:Yi,RAD2DEG:rr,generateUUID:Rn,clamp:$t,euclideanModulo:ro,mapLinear:function jc(a,e,t,n,i){return n+(a-e)*(i-n)/(t-e)},inverseLerp:function Xc(a,e,t){return a!==e?(t-a)/(e-a):0},lerp:or,damp:function qc(a,e,t,n){return or(a,e,1-Math.exp(-t*n))},pingpong:function Yc(a,e=1){return e-Math.abs(ro(a,2*e)-e)},smoothstep:function Il(a,e,t){return a<=e?0:a>=t?1:(a=(a-e)/(t-e))*a*(3-2*a)},smootherstep:function Zc(a,e,t){return a<=e?0:a>=t?1:(a=(a-e)/(t-e))*a*a*(a*(6*a-15)+10)},randInt:function $c(a,e){return a+Math.floor(Math.random()*(e-a+1))},randFloat:function Nl(a,e){return a+Math.random()*(e-a)},randFloatSpread:function Jc(a){return a*(.5-Math.random())},seededRandom:function Kc(a){void 0!==a&&(Rl=a);let e=Rl+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function Qc(a){return a*Yi},radToDeg:function eh(a){return a*rr},isPowerOfTwo:oo,ceilPowerOfTwo:Dl,floorPowerOfTwo:ao,setQuaternionFromProperEuler:function Fl(a,e,t,n,i){const s=Math.cos,r=Math.sin,o=s(t/2),l=r(t/2),c=s((e+n)/2),h=r((e+n)/2),d=s((e-n)/2),f=r((e-n)/2),p=s((n-e)/2),v=r((n-e)/2);switch(i){case"XYX":a.set(o*h,l*d,l*f,o*c);break;case"YZY":a.set(l*f,o*h,l*d,o*c);break;case"ZXZ":a.set(l*d,l*f,o*h,o*c);break;case"XZX":a.set(o*h,l*v,l*p,o*c);break;case"YXY":a.set(l*p,o*h,l*v,o*c);break;case"ZYZ":a.set(l*v,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}},normalize:function nh(a,e){switch(e.constructor){case Float32Array:return a;case Uint16Array:return Math.round(65535*a);case Uint8Array:return Math.round(255*a);case Int16Array:return Math.round(32767*a);case Int8Array:return Math.round(127*a);default:throw new Error("Invalid component type.")}},denormalize:function th(a,e){switch(e.constructor){case Float32Array:return a;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw new Error("Invalid component type.")}}});class ne{constructor(e=0,t=0){ne.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*n-r*i+e.x,this.y=s*i+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class _n{constructor(){_n.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,r,o,l,c){const h=this.elements;return h[0]=e,h[1]=i,h[2]=o,h[3]=t,h[4]=s,h[5]=l,h[6]=n,h[7]=r,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],o=n[3],l=n[6],c=n[1],h=n[4],d=n[7],f=n[2],p=n[5],v=n[8],m=i[0],g=i[3],y=i[6],_=i[1],T=i[4],b=i[7],C=i[2],L=i[5],F=i[8];return s[0]=r*m+o*_+l*C,s[3]=r*g+o*T+l*L,s[6]=r*y+o*b+l*F,s[1]=c*m+h*_+d*C,s[4]=c*g+h*T+d*L,s[7]=c*y+h*b+d*F,s[2]=f*m+p*_+v*C,s[5]=f*g+p*T+v*L,s[8]=f*y+p*b+v*F,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],o=e[5],l=e[6],c=e[7],h=e[8];return t*r*h-t*o*c-n*s*h+n*o*l+i*s*c-i*r*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],o=e[5],l=e[6],c=e[7],h=e[8],d=h*r-o*c,f=o*l-h*s,p=c*s-r*l,v=t*d+n*f+i*p;if(0===v)return this.set(0,0,0,0,0,0,0,0,0);const m=1/v;return e[0]=d*m,e[1]=(i*c-h*n)*m,e[2]=(o*n-i*r)*m,e[3]=f*m,e[4]=(h*t-i*l)*m,e[5]=(i*s-o*t)*m,e[6]=p*m,e[7]=(n*l-c*t)*m,e[8]=(r*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,r,o){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*r+c*o)+r+e,-i*c,i*l,-i*(-c*r+l*o)+o+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],r=i[3],o=i[6],l=i[1],c=i[4],h=i[7];return i[0]=t*s+n*l,i[3]=t*r+n*c,i[6]=t*o+n*h,i[1]=-n*s+t*l,i[4]=-n*r+t*c,i[7]=-n*o+t*h,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function ta(a){for(let e=a.length-1;e>=0;--e)if(a[e]>65535)return!0;return!1}function Ms(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function Zi(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function lo(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const na={[Jn]:{[Xi]:Zi},[Xi]:{[Jn]:lo}},On={legacyMode:!0,get workingColorSpace(){return Xi},set workingColorSpace(a){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(a,e,t){if(this.legacyMode||e===t||!e||!t)return a;if(na[e]&&void 0!==na[e][t]){const n=na[e][t];return a.r=n(a.r),a.g=n(a.g),a.b=n(a.b),a}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(a,e){return this.convert(a,this.workingColorSpace,e)},toWorkingColorSpace:function(a,e){return this.convert(a,e,this.workingColorSpace)}},Ol={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},rn={r:0,g:0,b:0},Hn={h:0,s:0,l:0},co={h:0,s:0,l:0};function ia(a,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?a+6*(e-a)*t:t<.5?e:t<2/3?a+6*(e-a)*(2/3-t):a}function ho(a,e){return e.r=a.r,e.g=a.g,e.b=a.b,e}let bs,Pe=(()=>{class a{constructor(t,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===n&&void 0===i?this.set(t):this.setRGB(t,n,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,n=Jn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,On.toWorkingColorSpace(this,n),this}setRGB(t,n,i,s=Xi){return this.r=t,this.g=n,this.b=i,On.toWorkingColorSpace(this,s),this}setHSL(t,n,i,s=Xi){if(t=ro(t,1),n=$t(n,0,1),i=$t(i,0,1),0===n)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,o=2*i-r;this.r=ia(o,r,t+1/3),this.g=ia(o,r,t),this.b=ia(o,r,t-1/3)}return On.toWorkingColorSpace(this,s),this}setStyle(t,n=Jn){function i(r){void 0!==r&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const l=s[2];switch(s[1]){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,On.toWorkingColorSpace(this,n),i(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,On.toWorkingColorSpace(this,n),i(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l)){const c=parseFloat(r[1])/360,h=parseInt(r[2],10)/100,d=parseInt(r[3],10)/100;return i(r[4]),this.setHSL(c,h,d,n)}}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],o=r.length;if(3===o)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,On.toWorkingColorSpace(this,n),this;if(6===o)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,On.toWorkingColorSpace(this,n),this}return t&&t.length>0?this.setColorName(t,n):this}setColorName(t,n=Jn){const i=Ol[t.toLowerCase()];return void 0!==i?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Zi(t.r),this.g=Zi(t.g),this.b=Zi(t.b),this}copyLinearToSRGB(t){return this.r=lo(t.r),this.g=lo(t.g),this.b=lo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Jn){return On.fromWorkingColorSpace(ho(this,rn),t),$t(255*rn.r,0,255)<<16^$t(255*rn.g,0,255)<<8^$t(255*rn.b,0,255)<<0}getHexString(t=Jn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,n=Xi){On.fromWorkingColorSpace(ho(this,rn),n);const i=rn.r,s=rn.g,r=rn.b,o=Math.max(i,s,r),l=Math.min(i,s,r);let c,h;const d=(l+o)/2;if(l===o)c=0,h=0;else{const f=o-l;switch(h=d<=.5?f/(o+l):f/(2-o-l),o){case i:c=(s-r)/f+(s<r?6:0);break;case s:c=(r-i)/f+2;break;case r:c=(i-s)/f+4}c/=6}return t.h=c,t.s=h,t.l=d,t}getRGB(t,n=Xi){return On.fromWorkingColorSpace(ho(this,rn),n),t.r=rn.r,t.g=rn.g,t.b=rn.b,t}getStyle(t=Jn){return On.fromWorkingColorSpace(ho(this,rn),t),t!==Jn?`color(${t} ${rn.r} ${rn.g} ${rn.b})`:`rgb(${255*rn.r|0},${255*rn.g|0},${255*rn.b|0})`}offsetHSL(t,n,i){return this.getHSL(Hn),Hn.h+=t,Hn.s+=n,Hn.l+=i,this.setHSL(Hn.h,Hn.s,Hn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this}lerpColors(t,n,i){return this.r=t.r+(n.r-t.r)*i,this.g=t.g+(n.g-t.g)*i,this.b=t.b+(n.b-t.b)*i,this}lerpHSL(t,n){this.getHSL(Hn),t.getHSL(co);const i=or(Hn.h,co.h,n),s=or(Hn.s,co.s,n),r=or(Hn.l,co.l,n);return this.setHSL(i,s,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,n=0){return this.r=t[n],this.g=t[n+1],this.b=t[n+2],this}toArray(t=[],n=0){return t[n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}fromBufferAttribute(t,n){return this.r=t.getX(n),this.g=t.getY(n),this.b=t.getZ(n),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}return a.NAMES=Ol,a})();class zl{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===bs&&(bs=Ms("canvas")),bs.width=e.width,bs.height=e.height;const n=bs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=bs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ms("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let r=0;r<s.length;r++)s[r]=255*Zi(s[r]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t[n]=t instanceof Uint8Array||t instanceof Uint8ClampedArray?Math.floor(255*Zi(t[n]/255)):Zi(t[n]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Ss{constructor(e=null){this.isSource=!0,this.uuid=Rn(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let s;if(Array.isArray(i)){s=[];for(let r=0,o=i.length;r<o;r++)s.push(sa(i[r].isDataTexture?i[r].image:i[r]))}else s=sa(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function sa(a){return typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&a instanceof ImageBitmap?zl.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let rh=0,Wn=(()=>{class a extends qi{constructor(t=a.DEFAULT_IMAGE,n=a.DEFAULT_MAPPING,i=dn,s=dn,r=Ft,o=mn,l=Ln,c=ni,h=1,d=ri){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:rh++}),this.uuid=Rn(),this.name="",this.source=new Ss(t),this.mipmaps=[],this.mapping=n,this.wrapS=i,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=c,this.offset=new ne(0,0),this.repeat=new ne(1,1),this.center=new ne(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new _n,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const n=void 0===t||"string"==typeof t;if(!n&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),n||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==js)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case fs:t.x=t.x-Math.floor(t.x);break;case dn:t.x=t.x<0?0:1;break;case Fi:t.x=1===Math.abs(Math.floor(t.x)%2)?Math.ceil(t.x)-t.x:t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case fs:t.y=t.y-Math.floor(t.y);break;case dn:t.y=t.y<0?0:1;break;case Fi:t.y=1===Math.abs(Math.floor(t.y)%2)?Math.ceil(t.y)-t.y:t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}return a.DEFAULT_IMAGE=null,a.DEFAULT_MAPPING=js,a})();class Tt{constructor(e=0,t=0,n=0,i=1){Tt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*t+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*t+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*t+r[7]*n+r[11]*i+r[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,c=l[0],h=l[4],d=l[8],f=l[1],p=l[5],v=l[9],m=l[2],g=l[6],y=l[10];if(Math.abs(h-f)<.01&&Math.abs(d-m)<.01&&Math.abs(v-g)<.01){if(Math.abs(h+f)<.1&&Math.abs(d+m)<.1&&Math.abs(v+g)<.1&&Math.abs(c+p+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const T=(c+1)/2,b=(p+1)/2,C=(y+1)/2,L=(h+f)/4,F=(d+m)/4,S=(v+g)/4;return T>b&&T>C?T<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(T),i=L/n,s=F/n):b>C?b<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(b),n=L/i,s=S/i):C<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(C),n=F/s,i=S/s),this.set(n,i,s,t),this}let _=Math.sqrt((g-v)*(g-v)+(d-m)*(d-m)+(f-h)*(f-h));return Math.abs(_)<.001&&(_=1),this.x=(g-v)/_,this.y=(d-m)/_,this.z=(f-h)/_,this.w=Math.acos((c+p+y-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Kn extends qi{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Tt(0,0,e,t),this.scissorTest=!1,this.viewport=new Tt(0,0,e,t),this.texture=new Wn({width:e,height:t,depth:1},n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Ft,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Ss(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class uo extends Wn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Zt,this.minFilter=Zt,this.wrapR=dn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ra extends Wn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Zt,this.minFilter=Zt,this.wrapR=dn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Mn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,r,o){let l=n[i+0],c=n[i+1],h=n[i+2],d=n[i+3];const f=s[r+0],p=s[r+1],v=s[r+2],m=s[r+3];if(0===o)return e[t+0]=l,e[t+1]=c,e[t+2]=h,void(e[t+3]=d);if(1===o)return e[t+0]=f,e[t+1]=p,e[t+2]=v,void(e[t+3]=m);if(d!==m||l!==f||c!==p||h!==v){let g=1-o;const y=l*f+c*p+h*v+d*m,_=y>=0?1:-1,T=1-y*y;if(T>Number.EPSILON){const C=Math.sqrt(T),L=Math.atan2(C,y*_);g=Math.sin(g*L)/C,o=Math.sin(o*L)/C}const b=o*_;if(l=l*g+f*b,c=c*g+p*b,h=h*g+v*b,d=d*g+m*b,g===1-o){const C=1/Math.sqrt(l*l+c*c+h*h+d*d);l*=C,c*=C,h*=C,d*=C}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d}static multiplyQuaternionsFlat(e,t,n,i,s,r){const o=n[i],l=n[i+1],c=n[i+2],h=n[i+3],d=s[r],f=s[r+1],p=s[r+2],v=s[r+3];return e[t]=o*v+h*d+l*p-c*f,e[t+1]=l*v+h*f+c*d-o*p,e[t+2]=c*v+h*p+o*f-l*d,e[t+3]=h*v-o*d-l*f-c*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,r=e._order,o=Math.cos,l=Math.sin,c=o(n/2),h=o(i/2),d=o(s/2),f=l(n/2),p=l(i/2),v=l(s/2);switch(r){case"XYZ":this._x=f*h*d+c*p*v,this._y=c*p*d-f*h*v,this._z=c*h*v+f*p*d,this._w=c*h*d-f*p*v;break;case"YXZ":this._x=f*h*d+c*p*v,this._y=c*p*d-f*h*v,this._z=c*h*v-f*p*d,this._w=c*h*d+f*p*v;break;case"ZXY":this._x=f*h*d-c*p*v,this._y=c*p*d+f*h*v,this._z=c*h*v+f*p*d,this._w=c*h*d-f*p*v;break;case"ZYX":this._x=f*h*d-c*p*v,this._y=c*p*d+f*h*v,this._z=c*h*v-f*p*d,this._w=c*h*d+f*p*v;break;case"YZX":this._x=f*h*d+c*p*v,this._y=c*p*d+f*h*v,this._z=c*h*v-f*p*d,this._w=c*h*d-f*p*v;break;case"XZY":this._x=f*h*d-c*p*v,this._y=c*p*d-f*h*v,this._z=c*h*v+f*p*d,this._w=c*h*d+f*p*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],r=t[1],o=t[5],l=t[9],c=t[2],h=t[6],d=t[10],f=n+o+d;if(f>0){const p=.5/Math.sqrt(f+1);this._w=.25/p,this._x=(h-l)*p,this._y=(s-c)*p,this._z=(r-i)*p}else if(n>o&&n>d){const p=2*Math.sqrt(1+n-o-d);this._w=(h-l)/p,this._x=.25*p,this._y=(i+r)/p,this._z=(s+c)/p}else if(o>d){const p=2*Math.sqrt(1+o-n-d);this._w=(s-c)/p,this._x=(i+r)/p,this._y=.25*p,this._z=(l+h)/p}else{const p=2*Math.sqrt(1+d-n-o);this._w=(r-i)/p,this._x=(s+c)/p,this._y=(l+h)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs($t(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,r=e._w,o=t._x,l=t._y,c=t._z,h=t._w;return this._x=n*h+r*o+i*c-s*l,this._y=i*h+r*l+s*o-n*c,this._z=s*h+r*c+n*l-i*o,this._w=r*h-n*o-i*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,s=this._z,r=this._w;let o=r*e._w+n*e._x+i*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const p=1-t;return this._w=p*r+t*this._w,this._x=p*n+t*this._x,this._y=p*i+t*this._y,this._z=p*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),d=Math.sin((1-t)*h)/c,f=Math.sin(t*h)/c;return this._w=r*d+this._w*f,this._x=n*d+this._x*f,this._y=i*d+this._y*f,this._z=s*d+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class E{constructor(e=0,t=0,n=0){E.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Bl.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Bl.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,r=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,r=e.y,o=e.z,l=e.w,c=l*t+r*i-o*n,h=l*n+o*t-s*i,d=l*i+s*n-r*t,f=-s*t-r*n-o*i;return this.x=c*l+f*-s+h*-o-d*-r,this.y=h*l+f*-r+d*-s-c*-o,this.z=d*l+f*-o+c*-r-h*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,r=t.x,o=t.y,l=t.z;return this.x=i*l-s*o,this.y=s*r-n*l,this.z=n*o-i*r,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return oa.copy(this).projectOnVector(e),this.sub(oa)}reflect(e){return this.sub(oa.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos($t(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const oa=new E,Bl=new Mn;class Mi{constructor(e=new E(1/0,1/0,1/0),t=new E(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,r=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const h=e[l],d=e[l+1],f=e[l+2];h<t&&(t=h),d<n&&(n=d),f<i&&(i=f),h>s&&(s=h),d>r&&(r=d),f>o&&(o=f)}return this.min.set(t,n,i),this.max.set(s,r,o),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,r=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const h=e.getX(l),d=e.getY(l),f=e.getZ(l);h<t&&(t=h),d<n&&(n=d),f<i&&(i=f),h>s&&(s=h),d>r&&(r=d),f>o&&(o=f)}return this.min.set(t,n,i),this.max.set(s,r,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=bi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n)if(t&&null!=n.attributes&&void 0!==n.attributes.position){const s=n.attributes.position;for(let r=0,o=s.count;r<o;r++)bi.fromBufferAttribute(s,r).applyMatrix4(e.matrixWorld),this.expandByPoint(bi)}else null===n.boundingBox&&n.computeBoundingBox(),aa.copy(n.boundingBox),aa.applyMatrix4(e.matrixWorld),this.union(aa);const i=e.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,bi),bi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ar),fo.subVectors(this.max,ar),$i.subVectors(e.a,ar),Si.subVectors(e.b,ar),Ji.subVectors(e.c,ar),wi.subVectors(Si,$i),Qn.subVectors(Ji,Si),Ti.subVectors($i,Ji);let t=[0,-wi.z,wi.y,0,-Qn.z,Qn.y,0,-Ti.z,Ti.y,wi.z,0,-wi.x,Qn.z,0,-Qn.x,Ti.z,0,-Ti.x,-wi.y,wi.x,0,-Qn.y,Qn.x,0,-Ti.y,Ti.x,0];return!(!la(t,$i,Si,Ji,fo)||(t=[1,0,0,0,1,0,0,0,1],!la(t,$i,Si,Ji,fo)))&&(ws.crossVectors(wi,Qn),t=[ws.x,ws.y,ws.z],la(t,$i,Si,Ji,fo))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return bi.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(bi).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(ai[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ai[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ai[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ai[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ai[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ai[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ai[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ai[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ai)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ai=[new E,new E,new E,new E,new E,new E,new E,new E],bi=new E,aa=new Mi,$i=new E,Si=new E,Ji=new E,wi=new E,Qn=new E,Ti=new E,ar=new E,fo=new E,ws=new E,Ai=new E;function la(a,e,t,n,i){for(let s=0,r=a.length-3;s<=r;s+=3){Ai.fromArray(a,s);const o=i.x*Math.abs(Ai.x)+i.y*Math.abs(Ai.y)+i.z*Math.abs(Ai.z),l=e.dot(Ai),c=t.dot(Ai),h=n.dot(Ai);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const lh=new Mi,po=new E,lr=new E,cr=new E;class Ci{constructor(e=new E,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):lh.setFromPoints(e).getCenter(n);let i=0;for(let s=0,r=e.length;s<r;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){cr.subVectors(e,this.center);const t=cr.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=.5*(n-this.radius);this.center.add(cr.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return!0===this.center.equals(e.center)?lr.set(0,0,1).multiplyScalar(e.radius):lr.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(po.copy(e.center).add(lr)),this.expandByPoint(po.copy(e.center).sub(lr)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const jn=new E,mo=new E,go=new E,Ei=new E,hr=new E,ur=new E,dr=new E;class fr{constructor(e=new E,t=new E(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,jn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=jn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(jn.copy(this.direction).multiplyScalar(t).add(this.origin),jn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){mo.copy(e).add(t).multiplyScalar(.5),go.copy(t).sub(e).normalize(),Ei.copy(this.origin).sub(mo);const s=.5*e.distanceTo(t),r=-this.direction.dot(go),o=Ei.dot(this.direction),l=-Ei.dot(go),c=Ei.lengthSq(),h=Math.abs(1-r*r);let d,f,p,v;if(h>0)if(d=r*l-o,f=r*o-l,v=s*h,d>=0)if(f>=-v)if(f<=v){const m=1/h;d*=m,f*=m,p=d*(d+r*f+2*o)+f*(r*d+f+2*l)+c}else f=s,d=Math.max(0,-(r*f+o)),p=-d*d+f*(f+2*l)+c;else f=-s,d=Math.max(0,-(r*f+o)),p=-d*d+f*(f+2*l)+c;else f<=-v?(d=Math.max(0,-(-r*s+o)),f=d>0?-s:Math.min(Math.max(-s,-l),s),p=-d*d+f*(f+2*l)+c):f<=v?(d=0,f=Math.min(Math.max(-s,-l),s),p=f*(f+2*l)+c):(d=Math.max(0,-(r*s+o)),f=d>0?s:Math.min(Math.max(-s,-l),s),p=-d*d+f*(f+2*l)+c);else f=r>0?-s:s,d=Math.max(0,-(r*f+o)),p=-d*d+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(d).add(this.origin),i&&i.copy(go).multiplyScalar(f).add(mo),p}intersectSphere(e,t){jn.subVectors(e.center,this.origin);const n=jn.dot(this.direction),i=jn.dot(jn)-n*n,s=e.radius*e.radius;if(i>s)return null;const r=Math.sqrt(s-i),o=n-r,l=n+r;return o<0&&l<0?null:this.at(o<0?l:o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,r,o,l;const c=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,i=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,i=(e.min.x-f.x)*c),h>=0?(s=(e.min.y-f.y)*h,r=(e.max.y-f.y)*h):(s=(e.max.y-f.y)*h,r=(e.min.y-f.y)*h),n>r||s>i||((s>n||n!=n)&&(n=s),(r<i||i!=i)&&(i=r),d>=0?(o=(e.min.z-f.z)*d,l=(e.max.z-f.z)*d):(o=(e.max.z-f.z)*d,l=(e.min.z-f.z)*d),n>l||o>i)||((o>n||n!=n)&&(n=o),(l<i||i!=i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return null!==this.intersectBox(e,jn)}intersectTriangle(e,t,n,i,s){hr.subVectors(t,e),ur.subVectors(n,e),dr.crossVectors(hr,ur);let o,r=this.direction.dot(dr);if(r>0){if(i)return null;o=1}else{if(!(r<0))return null;o=-1,r=-r}Ei.subVectors(this.origin,e);const l=o*this.direction.dot(ur.crossVectors(Ei,ur));if(l<0)return null;const c=o*this.direction.dot(hr.cross(Ei));if(c<0||l+c>r)return null;const h=-o*Ei.dot(dr);return h<0?null:this.at(h/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Qe{constructor(){Qe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,r,o,l,c,h,d,f,p,v,m,g){const y=this.elements;return y[0]=e,y[4]=t,y[8]=n,y[12]=i,y[1]=s,y[5]=r,y[9]=o,y[13]=l,y[2]=c,y[6]=h,y[10]=d,y[14]=f,y[3]=p,y[7]=v,y[11]=m,y[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Qe).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ts.setFromMatrixColumn(e,0).length(),s=1/Ts.setFromMatrixColumn(e,1).length(),r=1/Ts.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,r=Math.cos(n),o=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(s),d=Math.sin(s);if("XYZ"===e.order){const f=r*h,p=r*d,v=o*h,m=o*d;t[0]=l*h,t[4]=-l*d,t[8]=c,t[1]=p+v*c,t[5]=f-m*c,t[9]=-o*l,t[2]=m-f*c,t[6]=v+p*c,t[10]=r*l}else if("YXZ"===e.order){const f=l*h,p=l*d,v=c*h,m=c*d;t[0]=f+m*o,t[4]=v*o-p,t[8]=r*c,t[1]=r*d,t[5]=r*h,t[9]=-o,t[2]=p*o-v,t[6]=m+f*o,t[10]=r*l}else if("ZXY"===e.order){const f=l*h,p=l*d,v=c*h,m=c*d;t[0]=f-m*o,t[4]=-r*d,t[8]=v+p*o,t[1]=p+v*o,t[5]=r*h,t[9]=m-f*o,t[2]=-r*c,t[6]=o,t[10]=r*l}else if("ZYX"===e.order){const f=r*h,p=r*d,v=o*h,m=o*d;t[0]=l*h,t[4]=v*c-p,t[8]=f*c+m,t[1]=l*d,t[5]=m*c+f,t[9]=p*c-v,t[2]=-c,t[6]=o*l,t[10]=r*l}else if("YZX"===e.order){const f=r*l,p=r*c,v=o*l,m=o*c;t[0]=l*h,t[4]=m-f*d,t[8]=v*d+p,t[1]=d,t[5]=r*h,t[9]=-o*h,t[2]=-c*h,t[6]=p*d+v,t[10]=f-m*d}else if("XZY"===e.order){const f=r*l,p=r*c,v=o*l,m=o*c;t[0]=l*h,t[4]=-d,t[8]=c*h,t[1]=f*d+m,t[5]=r*h,t[9]=p*d-v,t[2]=v*d-p,t[6]=o*h,t[10]=m*d+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ch,e,hh)}lookAt(e,t,n){const i=this.elements;return x.subVectors(e,t),0===x.lengthSq()&&(x.z=1),x.normalize(),Pi.crossVectors(n,x),0===Pi.lengthSq()&&(1===Math.abs(n.z)?x.x+=1e-4:x.z+=1e-4,x.normalize(),Pi.crossVectors(n,x)),Pi.normalize(),vo.crossVectors(x,Pi),i[0]=Pi.x,i[4]=vo.x,i[8]=x.x,i[1]=Pi.y,i[5]=vo.y,i[9]=x.y,i[2]=Pi.z,i[6]=vo.z,i[10]=x.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],o=n[4],l=n[8],c=n[12],h=n[1],d=n[5],f=n[9],p=n[13],v=n[2],m=n[6],g=n[10],y=n[14],_=n[3],T=n[7],b=n[11],C=n[15],L=i[0],F=i[4],S=i[8],R=i[12],B=i[1],k=i[5],ie=i[9],pe=i[13],U=i[2],K=i[6],j=i[10],se=i[14],oe=i[3],q=i[7],J=i[11],he=i[15];return s[0]=r*L+o*B+l*U+c*oe,s[4]=r*F+o*k+l*K+c*q,s[8]=r*S+o*ie+l*j+c*J,s[12]=r*R+o*pe+l*se+c*he,s[1]=h*L+d*B+f*U+p*oe,s[5]=h*F+d*k+f*K+p*q,s[9]=h*S+d*ie+f*j+p*J,s[13]=h*R+d*pe+f*se+p*he,s[2]=v*L+m*B+g*U+y*oe,s[6]=v*F+m*k+g*K+y*q,s[10]=v*S+m*ie+g*j+y*J,s[14]=v*R+m*pe+g*se+y*he,s[3]=_*L+T*B+b*U+C*oe,s[7]=_*F+T*k+b*K+C*q,s[11]=_*S+T*ie+b*j+C*J,s[15]=_*R+T*pe+b*se+C*he,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],r=e[1],o=e[5],l=e[9],c=e[13],h=e[2],d=e[6],f=e[10],p=e[14];return e[3]*(+s*l*d-i*c*d-s*o*f+n*c*f+i*o*p-n*l*p)+e[7]*(+t*l*p-t*c*f+s*r*f-i*r*p+i*c*h-s*l*h)+e[11]*(+t*c*d-t*o*p-s*r*d+n*r*p+s*o*h-n*c*h)+e[15]*(-i*o*h-t*l*d+t*o*f+i*r*d-n*r*f+n*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],o=e[5],l=e[6],c=e[7],h=e[8],d=e[9],f=e[10],p=e[11],v=e[12],m=e[13],g=e[14],y=e[15],_=d*g*c-m*f*c+m*l*p-o*g*p-d*l*y+o*f*y,T=v*f*c-h*g*c-v*l*p+r*g*p+h*l*y-r*f*y,b=h*m*c-v*d*c+v*o*p-r*m*p-h*o*y+r*d*y,C=v*d*l-h*m*l-v*o*f+r*m*f+h*o*g-r*d*g,L=t*_+n*T+i*b+s*C;if(0===L)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const F=1/L;return e[0]=_*F,e[1]=(m*f*s-d*g*s-m*i*p+n*g*p+d*i*y-n*f*y)*F,e[2]=(o*g*s-m*l*s+m*i*c-n*g*c-o*i*y+n*l*y)*F,e[3]=(d*l*s-o*f*s-d*i*c+n*f*c+o*i*p-n*l*p)*F,e[4]=T*F,e[5]=(h*g*s-v*f*s+v*i*p-t*g*p-h*i*y+t*f*y)*F,e[6]=(v*l*s-r*g*s-v*i*c+t*g*c+r*i*y-t*l*y)*F,e[7]=(r*f*s-h*l*s+h*i*c-t*f*c-r*i*p+t*l*p)*F,e[8]=b*F,e[9]=(v*d*s-h*m*s-v*n*p+t*m*p+h*n*y-t*d*y)*F,e[10]=(r*m*s-v*o*s+v*n*c-t*m*c-r*n*y+t*o*y)*F,e[11]=(h*o*s-r*d*s-h*n*c+t*d*c+r*n*p-t*o*p)*F,e[12]=C*F,e[13]=(h*m*i-v*d*i+v*n*f-t*m*f-h*n*g+t*d*g)*F,e[14]=(v*o*i-r*m*i-v*n*l+t*m*l+r*n*g-t*o*g)*F,e[15]=(r*d*i-h*o*i+h*n*l-t*d*l-r*n*f+t*o*f)*F,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,r=e.x,o=e.y,l=e.z,c=s*r,h=s*o;return this.set(c*r+n,c*o-i*l,c*l+i*o,0,c*o+i*l,h*o+n,h*l-i*r,0,c*l-i*o,h*l+i*r,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,r){return this.set(1,n,s,0,e,1,r,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,r=t._y,o=t._z,l=t._w,c=s+s,h=r+r,d=o+o,f=s*c,p=s*h,v=s*d,m=r*h,g=r*d,y=o*d,_=l*c,T=l*h,b=l*d,C=n.x,L=n.y,F=n.z;return i[0]=(1-(m+y))*C,i[1]=(p+b)*C,i[2]=(v-T)*C,i[3]=0,i[4]=(p-b)*L,i[5]=(1-(f+y))*L,i[6]=(g+_)*L,i[7]=0,i[8]=(v+T)*F,i[9]=(g-_)*F,i[10]=(1-(f+m))*F,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ts.set(i[0],i[1],i[2]).length();const r=Ts.set(i[4],i[5],i[6]).length(),o=Ts.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Xn.copy(this);const c=1/s,h=1/r,d=1/o;return Xn.elements[0]*=c,Xn.elements[1]*=c,Xn.elements[2]*=c,Xn.elements[4]*=h,Xn.elements[5]*=h,Xn.elements[6]*=h,Xn.elements[8]*=d,Xn.elements[9]*=d,Xn.elements[10]*=d,t.setFromRotationMatrix(Xn),n.x=s,n.y=r,n.z=o,this}makePerspective(e,t,n,i,s,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,c=2*s/(n-i),h=(t+e)/(t-e),d=(n+i)/(n-i),f=-(r+s)/(r-s),p=-2*r*s/(r-s);return o[0]=2*s/(t-e),o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=d,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,s,r){const o=this.elements,l=1/(t-e),c=1/(n-i),h=1/(r-s),d=(t+e)*l,f=(n+i)*c,p=(r+s)*h;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-d,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ts=new E,Xn=new Qe,ch=new E(0,0,0),hh=new E(1,1,1),Pi=new E,vo=new E,x=new E,M=new Qe,u=new Mn;let w=(()=>{class a{constructor(t=0,n=0,i=0,s=a.DefaultOrder){this.isEuler=!0,this._x=t,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,n,i,s=this._order){return this._x=t,this._y=n,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,n=this._order,i=!0){const s=t.elements,r=s[0],o=s[4],l=s[8],c=s[1],h=s[5],d=s[9],f=s[2],p=s[6],v=s[10];switch(n){case"XYZ":this._y=Math.asin($t(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-d,v),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(p,h),this._z=0);break;case"YXZ":this._x=Math.asin(-$t(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(l,v),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-f,r),this._z=0);break;case"ZXY":this._x=Math.asin($t(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-f,v),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-$t(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(p,v),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin($t(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-f,r)):(this._x=0,this._y=Math.atan2(l,v));break;case"XZY":this._z=Math.asin(-$t(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,h),this._y=Math.atan2(l,r)):(this._x=Math.atan2(-d,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,n,i){return M.makeRotationFromQuaternion(t),this.setFromRotationMatrix(M,n,i)}setFromVector3(t,n=this._order){return this.set(t.x,t.y,t.z,n)}reorder(t){return u.setFromEuler(this),this.setFromQuaternion(u,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],n=0){return t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}return a.DefaultOrder="XYZ",a.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],a})();class N{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let z=0;const W=new E,ce=new Mn,V=new Qe,X=new E,ae=new E,we=new E,de=new Mn,_t=new E(1,0,0),He=new E(0,1,0),Lt=new E(0,0,1),et={type:"added"},Xe={type:"removed"};let Fe=(()=>{class a extends qi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:z++}),this.uuid=Rn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=a.DefaultUp.clone();const t=new E,n=new w,i=new Mn,s=new E(1,1,1);n._onChange(function r(){i.setFromEuler(n,!1)}),i._onChange(function o(){n.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Qe},normalMatrix:{value:new _n}}),this.matrix=new Qe,this.matrixWorld=new Qe,this.matrixAutoUpdate=a.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new N,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,n){this.quaternion.setFromAxisAngle(t,n)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,n){return ce.setFromAxisAngle(t,n),this.quaternion.multiply(ce),this}rotateOnWorldAxis(t,n){return ce.setFromAxisAngle(t,n),this.quaternion.premultiply(ce),this}rotateX(t){return this.rotateOnAxis(_t,t)}rotateY(t){return this.rotateOnAxis(He,t)}rotateZ(t){return this.rotateOnAxis(Lt,t)}translateOnAxis(t,n){return W.copy(t).applyQuaternion(this.quaternion),this.position.add(W.multiplyScalar(n)),this}translateX(t){return this.translateOnAxis(_t,t)}translateY(t){return this.translateOnAxis(He,t)}translateZ(t){return this.translateOnAxis(Lt,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(V.copy(this.matrixWorld).invert())}lookAt(t,n,i){t.isVector3?X.copy(t):X.set(t,n,i);const s=this.parent;this.updateWorldMatrix(!0,!1),ae.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?V.lookAt(ae,X,this.up):V.lookAt(X,ae,this.up),this.quaternion.setFromRotationMatrix(V),s&&(V.extractRotation(s.matrixWorld),ce.setFromRotationMatrix(V),this.quaternion.premultiply(ce.invert()))}add(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(et)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(t);return-1!==n&&(t.parent=null,this.children.splice(n,1),t.dispatchEvent(Xe)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const n=this.children[t];n.parent=null,n.dispatchEvent(Xe)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),V.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),V.multiply(t.parent.matrixWorld)),t.applyMatrix4(V),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,n){if(this[t]===n)return this;for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectByProperty(t,n);if(void 0!==o)return o}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ae,t,we),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ae,de,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return t.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(t){t(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverseVisible(t)}traverseAncestors(t){const n=this.parent;null!==n&&(t(n),n.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].updateMatrixWorld(t)}updateWorldMatrix(t,n){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===n){const s=this.children;for(let r=0,o=s.length;r<o;r++)s[r].updateWorldMatrix(!1,!0)}}toJSON(t){const n=void 0===t||"string"==typeof t,i={};n&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};function r(l,c){return void 0===l[c.uuid]&&(l[c.uuid]=c.toJSON(t)),c.uuid}if(s.uuid=this.uuid,s.type=this.type,""!==this.name&&(s.name=this.name),!0===this.castShadow&&(s.castShadow=!0),!0===this.receiveShadow&&(s.receiveShadow=!0),!1===this.visible&&(s.visible=!1),!1===this.frustumCulled&&(s.frustumCulled=!1),0!==this.renderOrder&&(s.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(s.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const l=this.geometry.parameters;if(void 0!==l&&void 0!==l.shapes){const c=l.shapes;if(Array.isArray(c))for(let h=0,d=c.length;h<d;h++)r(t.shapes,c[h]);else r(t.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const l=[];for(let c=0,h=this.material.length;c<h;c++)l.push(r(t.materials,this.material[c]));s.material=l}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let l=0;l<this.children.length;l++)s.children.push(this.children[l].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let l=0;l<this.animations.length;l++)s.animations.push(r(t.animations,this.animations[l]))}if(n){const l=o(t.geometries),c=o(t.materials),h=o(t.textures),d=o(t.images),f=o(t.shapes),p=o(t.skeletons),v=o(t.animations),m=o(t.nodes);l.length>0&&(i.geometries=l),c.length>0&&(i.materials=c),h.length>0&&(i.textures=h),d.length>0&&(i.images=d),f.length>0&&(i.shapes=f),p.length>0&&(i.skeletons=p),v.length>0&&(i.animations=v),m.length>0&&(i.nodes=m)}return i.object=s,i;function o(l){const c=[];for(const h in l){const d=l[h];delete d.metadata,c.push(d)}return c}}clone(t){return(new this.constructor).copy(this,t)}copy(t,n=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===n)for(let i=0;i<t.children.length;i++)this.add(t.children[i].clone());return this}}return a.DefaultUp=new E(0,1,0),a.DefaultMatrixAutoUpdate=!0,a})();const xt=new E,Jt=new E,jt=new E,lt=new E,At=new E,zt=new E,Ct=new E,Kt=new E,Ki=new E,xo=new E;class zn{constructor(e=new E,t=new E,n=new E){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),xt.subVectors(e,t),i.cross(xt);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){xt.subVectors(i,t),Jt.subVectors(n,t),jt.subVectors(e,t);const r=xt.dot(xt),o=xt.dot(Jt),l=xt.dot(jt),c=Jt.dot(Jt),h=Jt.dot(jt),d=r*c-o*o;if(0===d)return s.set(-2,-1,-1);const f=1/d,p=(c*l-o*h)*f,v=(r*h-o*l)*f;return s.set(1-p-v,v,p)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,lt),lt.x>=0&&lt.y>=0&&lt.x+lt.y<=1}static getUV(e,t,n,i,s,r,o,l){return this.getBarycoord(e,t,n,i,lt),l.set(0,0),l.addScaledVector(s,lt.x),l.addScaledVector(r,lt.y),l.addScaledVector(o,lt.z),l}static isFrontFacing(e,t,n,i){return xt.subVectors(n,t),Jt.subVectors(e,t),xt.cross(Jt).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return xt.subVectors(this.c,this.b),Jt.subVectors(this.a,this.b),.5*xt.cross(Jt).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return zn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return zn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return zn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return zn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return zn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let r,o;At.subVectors(i,n),zt.subVectors(s,n),Kt.subVectors(e,n);const l=At.dot(Kt),c=zt.dot(Kt);if(l<=0&&c<=0)return t.copy(n);Ki.subVectors(e,i);const h=At.dot(Ki),d=zt.dot(Ki);if(h>=0&&d<=h)return t.copy(i);const f=l*d-h*c;if(f<=0&&l>=0&&h<=0)return r=l/(l-h),t.copy(n).addScaledVector(At,r);xo.subVectors(e,s);const p=At.dot(xo),v=zt.dot(xo);if(v>=0&&p<=v)return t.copy(s);const m=p*c-l*v;if(m<=0&&c>=0&&v<=0)return o=c/(c-v),t.copy(n).addScaledVector(zt,o);const g=h*v-p*d;if(g<=0&&d-h>=0&&p-v>=0)return Ct.subVectors(s,i),o=(d-h)/(d-h+(p-v)),t.copy(i).addScaledVector(Ct,o);const y=1/(g+m+f);return r=m*y,o=f*y,t.copy(n).addScaledVector(At,r).addScaledVector(zt,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Qi=0;class Bn extends qi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Qi++}),this.uuid=Rn(),this.name="",this.type="Material",this.blending=1,this.side=Zn,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(s){const r=[];for(const o in s){const l=s[o];delete l.metadata,r.push(l)}return r}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),this.side!==Zn&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const s=i(e.textures),r=i(e.images);s.length>0&&(n.textures=s),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class es extends Bn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const on=new E,ca=new ne;class an{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new Pe),t[n++]=r.r,t[n++]=r.g,t[n++]=r.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new ne),t[n++]=r.x,t[n++]=r.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new E),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let r=e[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new Tt),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z,t[n++]=r.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)ca.fromBufferAttribute(this,t),ca.applyMatrix3(e),this.setXY(t,ca.x,ca.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)on.fromBufferAttribute(this,t),on.applyMatrix3(e),this.setXYZ(t,on.x,on.y,on.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)on.fromBufferAttribute(this,t),on.applyMatrix4(e),this.setXYZ(t,on.x,on.y,on.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)on.fromBufferAttribute(this,t),on.applyNormalMatrix(e),this.setXYZ(t,on.x,on.y,on.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)on.fromBufferAttribute(this,t),on.transformDirection(e),this.setXYZ(t,on.x,on.y,on.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}class uh extends an{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class dh extends an{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Oe extends an{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Ad=0;const qn=new Qe,kl=new Fe,pr=new E,kn=new Mi,yo=new Mi,un=new E;class ct extends qi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ad++}),this.uuid=Rn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return this.index=Array.isArray(e)?new(ta(e)?dh:uh)(e,1):e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const s=(new _n).getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return qn.makeRotationFromQuaternion(e),this.applyMatrix4(qn),this}rotateX(e){return qn.makeRotationX(e),this.applyMatrix4(qn),this}rotateY(e){return qn.makeRotationY(e),this.applyMatrix4(qn),this}rotateZ(e){return qn.makeRotationZ(e),this.applyMatrix4(qn),this}translate(e,t,n){return qn.makeTranslation(e,t,n),this.applyMatrix4(qn),this}scale(e,t,n){return qn.makeScale(e,t,n),this.applyMatrix4(qn),this}lookAt(e){return kl.lookAt(e),kl.updateMatrix(),this.applyMatrix4(kl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(pr).negate(),this.translate(pr.x,pr.y,pr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Oe(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Mi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new E(-1/0,-1/0,-1/0),new E(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++)kn.setFromBufferAttribute(t[n]),this.morphTargetsRelative?(un.addVectors(this.boundingBox.min,kn.min),this.boundingBox.expandByPoint(un),un.addVectors(this.boundingBox.max,kn.max),this.boundingBox.expandByPoint(un)):(this.boundingBox.expandByPoint(kn.min),this.boundingBox.expandByPoint(kn.max))}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ci);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new E,1/0);if(e){const n=this.boundingSphere.center;if(kn.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++)yo.setFromBufferAttribute(t[s]),this.morphTargetsRelative?(un.addVectors(kn.min,yo.min),kn.expandByPoint(un),un.addVectors(kn.max,yo.max),kn.expandByPoint(un)):(kn.expandByPoint(yo.min),kn.expandByPoint(yo.max));kn.getCenter(n);let i=0;for(let s=0,r=e.count;s<r;s++)un.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(un));if(t)for(let s=0,r=t.length;s<r;s++){const o=t[s],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)un.fromBufferAttribute(o,c),l&&(pr.fromBufferAttribute(e,c),un.add(pr)),i=Math.max(i,n.distanceToSquared(un))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,s=t.normal.array,r=t.uv.array,o=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new an(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let B=0;B<o;B++)c[B]=new E,h[B]=new E;const d=new E,f=new E,p=new E,v=new ne,m=new ne,g=new ne,y=new E,_=new E;function T(B,k,ie){d.fromArray(i,3*B),f.fromArray(i,3*k),p.fromArray(i,3*ie),v.fromArray(r,2*B),m.fromArray(r,2*k),g.fromArray(r,2*ie),f.sub(d),p.sub(d),m.sub(v),g.sub(v);const pe=1/(m.x*g.y-g.x*m.y);!isFinite(pe)||(y.copy(f).multiplyScalar(g.y).addScaledVector(p,-m.y).multiplyScalar(pe),_.copy(p).multiplyScalar(m.x).addScaledVector(f,-g.x).multiplyScalar(pe),c[B].add(y),c[k].add(y),c[ie].add(y),h[B].add(_),h[k].add(_),h[ie].add(_))}let b=this.groups;0===b.length&&(b=[{start:0,count:n.length}]);for(let B=0,k=b.length;B<k;++B){const ie=b[B],pe=ie.start;for(let K=pe,j=pe+ie.count;K<j;K+=3)T(n[K+0],n[K+1],n[K+2])}const C=new E,L=new E,F=new E,S=new E;function R(B){F.fromArray(s,3*B),S.copy(F);const k=c[B];C.copy(k),C.sub(F.multiplyScalar(F.dot(k))).normalize(),L.crossVectors(S,k);const pe=L.dot(h[B])<0?-1:1;l[4*B]=C.x,l[4*B+1]=C.y,l[4*B+2]=C.z,l[4*B+3]=pe}for(let B=0,k=b.length;B<k;++B){const ie=b[B],pe=ie.start;for(let K=pe,j=pe+ie.count;K<j;K+=3)R(n[K+0]),R(n[K+1]),R(n[K+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new an(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let f=0,p=n.count;f<p;f++)n.setXYZ(f,0,0,0);const i=new E,s=new E,r=new E,o=new E,l=new E,c=new E,h=new E,d=new E;if(e)for(let f=0,p=e.count;f<p;f+=3){const v=e.getX(f+0),m=e.getX(f+1),g=e.getX(f+2);i.fromBufferAttribute(t,v),s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,g),h.subVectors(r,s),d.subVectors(i,s),h.cross(d),o.fromBufferAttribute(n,v),l.fromBufferAttribute(n,m),c.fromBufferAttribute(n,g),o.add(h),l.add(h),c.add(h),n.setXYZ(v,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let f=0,p=t.count;f<p;f+=3)i.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),r.fromBufferAttribute(t,f+2),h.subVectors(r,s),d.subVectors(i,s),h.cross(d),n.setXYZ(f+0,h.x,h.y,h.z),n.setXYZ(f+1,h.x,h.y,h.z),n.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===e.attributes[i])continue;const r=n[i].array,o=e.attributes[i],l=o.array,c=o.itemSize*t,h=Math.min(l.length,r.length-c);for(let d=0,f=c;d<h;d++,f++)r[f]=l[d]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)un.fromBufferAttribute(e,t),un.normalize(),e.setXYZ(t,un.x,un.y,un.z)}toNonIndexed(){function e(o,l){const c=o.array,h=o.itemSize,d=o.normalized,f=new c.constructor(l.length*h);let p=0,v=0;for(let m=0,g=l.length;m<g;m++){p=o.isInterleavedBufferAttribute?l[m]*o.data.stride+o.offset:l[m]*h;for(let y=0;y<h;y++)f[v++]=c[p++]}return new an(f,h,d)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ct,n=this.index.array,i=this.attributes;for(const o in i){const c=e(i[o],n);t.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let h=0,d=c.length;h<d;h++){const p=e(c[h],n);l.push(p)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,l=r.length;o<l;o++){const c=r[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const l=this.parameters;for(const c in l)void 0!==l[c]&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n)e.data.attributes[l]=n[l].toJSON(e.data);const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let d=0,f=c.length;d<f;d++)h.push(c[d].toJSON(e.data));h.length>0&&(i[l]=h,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i)this.setAttribute(c,i[c].clone(t));const s=e.morphAttributes;for(const c in s){const h=[],d=s[c];for(let f=0,p=d.length;f<p;f++)h.push(d[f].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let c=0,h=r.length;c<h;c++){const d=r[c];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const fh=new Qe,mr=new fr,Ul=new Ci,ts=new E,ns=new E,is=new E,Vl=new E,Gl=new E,Hl=new E,ha=new E,ua=new E,da=new E,fa=new ne,pa=new ne,ma=new ne,Wl=new E,ga=new E;class xn extends Fe{constructor(e=new ct,t=new es){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(void 0===i||(null===n.boundingSphere&&n.computeBoundingSphere(),Ul.copy(n.boundingSphere),Ul.applyMatrix4(s),!1===e.ray.intersectsSphere(Ul))||(fh.copy(s).invert(),mr.copy(e.ray).applyMatrix4(fh),null!==n.boundingBox&&!1===mr.intersectsBox(n.boundingBox)))return;let r;const o=n.index,l=n.attributes.position,c=n.morphAttributes.position,h=n.morphTargetsRelative,d=n.attributes.uv,f=n.attributes.uv2,p=n.groups,v=n.drawRange;if(null!==o)if(Array.isArray(i))for(let m=0,g=p.length;m<g;m++){const y=p[m],_=i[y.materialIndex];for(let C=Math.max(y.start,v.start),L=Math.min(o.count,Math.min(y.start+y.count,v.start+v.count));C<L;C+=3){const F=o.getX(C),S=o.getX(C+1),R=o.getX(C+2);r=va(this,_,e,mr,l,c,h,d,f,F,S,R),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=y.materialIndex,t.push(r))}}else for(let y=Math.max(0,v.start),_=Math.min(o.count,v.start+v.count);y<_;y+=3){const T=o.getX(y),b=o.getX(y+1),C=o.getX(y+2);r=va(this,i,e,mr,l,c,h,d,f,T,b,C),r&&(r.faceIndex=Math.floor(y/3),t.push(r))}else if(void 0!==l)if(Array.isArray(i))for(let m=0,g=p.length;m<g;m++){const y=p[m],_=i[y.materialIndex];for(let C=Math.max(y.start,v.start),L=Math.min(l.count,Math.min(y.start+y.count,v.start+v.count));C<L;C+=3)r=va(this,_,e,mr,l,c,h,d,f,C,C+1,C+2),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=y.materialIndex,t.push(r))}else for(let y=Math.max(0,v.start),_=Math.min(l.count,v.start+v.count);y<_;y+=3)r=va(this,i,e,mr,l,c,h,d,f,y,y+1,y+2),r&&(r.faceIndex=Math.floor(y/3),t.push(r))}}function va(a,e,t,n,i,s,r,o,l,c,h,d){ts.fromBufferAttribute(i,c),ns.fromBufferAttribute(i,h),is.fromBufferAttribute(i,d);const f=a.morphTargetInfluences;if(s&&f){ha.set(0,0,0),ua.set(0,0,0),da.set(0,0,0);for(let v=0,m=s.length;v<m;v++){const g=f[v],y=s[v];0!==g&&(Vl.fromBufferAttribute(y,c),Gl.fromBufferAttribute(y,h),Hl.fromBufferAttribute(y,d),r?(ha.addScaledVector(Vl,g),ua.addScaledVector(Gl,g),da.addScaledVector(Hl,g)):(ha.addScaledVector(Vl.sub(ts),g),ua.addScaledVector(Gl.sub(ns),g),da.addScaledVector(Hl.sub(is),g)))}ts.add(ha),ns.add(ua),is.add(da)}a.isSkinnedMesh&&(a.boneTransform(c,ts),a.boneTransform(h,ns),a.boneTransform(d,is));const p=function Cd(a,e,t,n,i,s,r,o){let l;if(l=e.side===at?n.intersectTriangle(r,s,i,!0,o):n.intersectTriangle(i,s,r,e.side!==vt,o),null===l)return null;ga.copy(o),ga.applyMatrix4(a.matrixWorld);const c=t.ray.origin.distanceTo(ga);return c<t.near||c>t.far?null:{distance:c,point:ga.clone(),object:a}}(a,e,t,n,ts,ns,is,Wl);if(p){o&&(fa.fromBufferAttribute(o,c),pa.fromBufferAttribute(o,h),ma.fromBufferAttribute(o,d),p.uv=zn.getUV(Wl,ts,ns,is,fa,pa,ma,new ne)),l&&(fa.fromBufferAttribute(l,c),pa.fromBufferAttribute(l,h),ma.fromBufferAttribute(l,d),p.uv2=zn.getUV(Wl,ts,ns,is,fa,pa,ma,new ne));const v={a:c,b:h,c:d,normal:new E,materialIndex:0};zn.getNormal(ts,ns,is,v.normal),p.face=v}return p}class ss extends ct{constructor(e=1,t=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};const o=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);const l=[],c=[],h=[],d=[];let f=0,p=0;function v(m,g,y,_,T,b,C,L,F,S,R){const B=b/F,k=C/S,ie=b/2,pe=C/2,U=L/2,K=F+1,j=S+1;let se=0,oe=0;const q=new E;for(let J=0;J<j;J++){const he=J*k-pe;for(let le=0;le<K;le++)q[m]=(le*B-ie)*_,q[g]=he*T,q[y]=U,c.push(q.x,q.y,q.z),q[m]=0,q[g]=0,q[y]=L>0?1:-1,h.push(q.x,q.y,q.z),d.push(le/F),d.push(1-J/S),se+=1}for(let J=0;J<S;J++)for(let he=0;he<F;he++){const ye=f+he+K*(J+1),ze=f+(he+1)+K*(J+1),ke=f+(he+1)+K*J;l.push(f+he+K*J,ye,ke),l.push(ye,ze,ke),oe+=6}o.addGroup(p,oe,R),p+=oe,f+=se}v("z","y","x",-1,-1,n,t,e,r,s,0),v("z","y","x",1,-1,n,t,-e,r,s,1),v("x","z","y",1,1,e,n,t,i,r,2),v("x","z","y",1,-1,e,n,-t,i,r,3),v("x","y","z",1,-1,e,t,n,i,s,4),v("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new Oe(c,3)),this.setAttribute("normal",new Oe(h,3)),this.setAttribute("uv",new Oe(d,2))}static fromJSON(e){return new ss(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function gr(a){const e={};for(const t in a){e[t]={};for(const n in a[t]){const i=a[t][n];e[t][n]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.clone():Array.isArray(i)?i.slice():i}}return e}function yn(a){const e={};for(let t=0;t<a.length;t++){const n=gr(a[t]);for(const i in n)e[i]=n[i]}return e}const ph={clone:gr,merge:yn};class Li extends Bn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=gr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;t.uniforms[i]=r&&r.isTexture?{type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?{type:"c",value:r.getHex()}:r&&r.isVector2?{type:"v2",value:r.toArray()}:r&&r.isVector3?{type:"v3",value:r.toArray()}:r&&r.isVector4?{type:"v4",value:r.toArray()}:r&&r.isMatrix3?{type:"m3",value:r.toArray()}:r&&r.isMatrix4?{type:"m4",value:r.toArray()}:{value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class xa extends Fe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Qe,this.projectionMatrix=new Qe,this.projectionMatrixInverse=new Qe}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class pn extends xa{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*rr*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Yi*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*rr*Math.atan(Math.tan(.5*Yi*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,r){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Yi*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const l=r.fullWidth,c=r.fullHeight;s+=r.offsetX*i/l,t-=r.offsetY*n/c,i*=r.width/l,n*=r.height/c}const o=this.filmOffset;0!==o&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class mh extends Fe{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new pn(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new E(1,0,0)),this.add(i);const s=new pn(90,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new E(-1,0,0)),this.add(s);const r=new pn(90,1,e,t);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new E(0,1,0)),this.add(r);const o=new pn(90,1,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new E(0,-1,0)),this.add(o);const l=new pn(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new E(0,0,1)),this.add(l);const c=new pn(90,1,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new E(0,0,-1)),this.add(c)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,r,o,l,c]=this.children,h=e.getRenderTarget(),d=e.toneMapping,f=e.xr.enabled;e.toneMapping=Vn,e.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,r),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=p,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(h),e.toneMapping=d,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class ya extends Wn{constructor(e,t,n,i,s,r,o,l,c,h){super(e=void 0!==e?e:[],t=void 0!==t?t:ti,n,i,s,r,o,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class gh extends Kn{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1};this.texture=new ya([n,n,n,n,n,n],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Ft}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n_uniforms={tEquirect:{value:null}},n_vertexShader="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",n_fragmentShader="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",i=new ss(5,5,5),s=new Li({name:"CubemapFromEquirect",uniforms:gr(n_uniforms),vertexShader:n_vertexShader,fragmentShader:n_fragmentShader,side:at,blending:Cn});s.uniforms.tEquirect.value=t;const r=new xn(i,s),o=t.minFilter;return t.minFilter===mn&&(t.minFilter=Ft),new mh(1,10,this).update(e,r),t.minFilter=o,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(s)}}const jl=new E,Ld=new E,Rd=new _n;class As{constructor(e=new E(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=jl.subVectors(n,t).cross(Ld.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(jl),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Rd.getNormalMatrix(e),i=this.coplanarPoint(jl).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const yr=new Ci,_a=new E;class Xl{constructor(e=new As,t=new As,n=new As,i=new As,s=new As,r=new As){this.planes=[e,t,n,i,s,r]}set(e,t,n,i,s,r){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(s),o[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],r=n[2],o=n[3],l=n[4],c=n[5],h=n[6],d=n[7],f=n[8],p=n[9],v=n[10],m=n[11],g=n[12],y=n[13],_=n[14],T=n[15];return t[0].setComponents(o-i,d-l,m-f,T-g).normalize(),t[1].setComponents(o+i,d+l,m+f,T+g).normalize(),t[2].setComponents(o+s,d+c,m+p,T+y).normalize(),t[3].setComponents(o-s,d-c,m-p,T-y).normalize(),t[4].setComponents(o-r,d-h,m-v,T-_).normalize(),t[5].setComponents(o+r,d+h,m+v,T+_).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),yr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(yr)}intersectsSprite(e){return yr.center.set(0,0,0),yr.radius=.7071067811865476,yr.applyMatrix4(e.matrixWorld),this.intersectsSphere(yr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(_a.x=i.normal.x>0?e.max.x:e.min.x,_a.y=i.normal.y>0?e.max.y:e.min.y,_a.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(_a)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function vh(){let a=null,e=!1,t=null,n=null;function i(s,r){t(s,r),n=a.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==t&&(n=a.requestAnimationFrame(i),e=!0)},stop:function(){a.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){a=s}}}function Id(a,e){const t=e.isWebGL2,n=new WeakMap;return{get:function r(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)},remove:function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h&&(a.deleteBuffer(h.buffer),n.delete(c))},update:function l(c,h){if(c.isGLBufferAttribute){const f=n.get(c);return void((!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version}))}c.isInterleavedBufferAttribute&&(c=c.data);const d=n.get(c);void 0===d?n.set(c,function i(c,h){const d=c.array,f=c.usage,p=a.createBuffer();let v;if(a.bindBuffer(h,p),a.bufferData(h,d,f),c.onUploadCallback(),d instanceof Float32Array)v=5126;else if(d instanceof Uint16Array)if(c.isFloat16BufferAttribute){if(!t)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");v=5131}else v=5123;else if(d instanceof Int16Array)v=5122;else if(d instanceof Uint32Array)v=5125;else if(d instanceof Int32Array)v=5124;else if(d instanceof Int8Array)v=5120;else if(d instanceof Uint8Array)v=5121;else{if(!(d instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);v=5121}return{buffer:p,type:v,bytesPerElement:d.BYTES_PER_ELEMENT,version:c.version}}(c,h)):d.version<c.version&&(function s(c,h,d){const f=h.array,p=h.updateRange;a.bindBuffer(d,c),-1===p.count?a.bufferSubData(d,0,f):(t?a.bufferSubData(d,p.offset*f.BYTES_PER_ELEMENT,f,p.offset,p.count):a.bufferSubData(d,p.offset*f.BYTES_PER_ELEMENT,f.subarray(p.offset,p.offset+p.count)),p.count=-1)}(d.buffer,c,h),d.version=c.version)}}}class Cs extends ct{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,r=t/2,o=Math.floor(n),l=Math.floor(i),c=o+1,h=l+1,d=e/o,f=t/l,p=[],v=[],m=[],g=[];for(let y=0;y<h;y++){const _=y*f-r;for(let T=0;T<c;T++)v.push(T*d-s,-_,0),m.push(0,0,1),g.push(T/o),g.push(1-y/l)}for(let y=0;y<l;y++)for(let _=0;_<o;_++){const b=_+c*(y+1),C=_+1+c*(y+1),L=_+1+c*y;p.push(_+c*y,b,L),p.push(b,C,L)}this.setIndex(p),this.setAttribute("position",new Oe(v,3)),this.setAttribute("normal",new Oe(m,3)),this.setAttribute("uv",new Oe(g,2))}static fromJSON(e){return new Cs(e.width,e.height,e.widthSegments,e.heightSegments)}}const ut={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\nconst mat3 XYZ_TO_REC709 = mat3(\n    3.2404542, -0.9692660,  0.0556434,\n   -1.5371385,  1.8760108, -0.2040259,\n   -0.4985314,  0.0415560,  1.0572252\n);\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n   vec3 sqrtF0 = sqrt( fresnel0 );\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n}\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n}\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n}\nvec3 evalSensitivity( float OPD, vec3 shift ) {\n   float phase = 2.0 * PI * OPD * 1.0e-9;\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\n   xyz /= 1.0685e-7;\n   vec3 srgb = XYZ_TO_REC709 * xyz;\n   return srgb;\n}\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n   vec3 I;\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\n   if ( cosTheta2Sq < 0.0 ) {\n       return vec3( 1.0 );\n   }\n   float cosTheta2 = sqrt( cosTheta2Sq );\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n   float R21 = R12;\n   float T121 = 1.0 - R12;\n   float phi12 = 0.0;\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n   float phi21 = PI - phi12;\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n   vec3 phi23 = vec3( 0.0 );\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n   vec3 phi = vec3( phi21 ) + phi23;\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n   vec3 r123 = sqrt( R123 );\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n   vec3 C0 = R12 + Rs;\n   I = C0;\n   vec3 Cm = Rs - T121;\n   for ( int m = 1; m <= 2; ++m ) {\n       Cm *= r123;\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n       I += Cm * Sm;\n   }\n   return max( I, vec3( 0.0 ) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\nif ( material.iridescenceThickness == 0.0 ) {\n\tmaterial.iridescence = 0.0;\n} else {\n\tmaterial.iridescence = saturate( material.iridescence );\n}\nif ( material.iridescence > 0.0 ) {\n\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Me={common:{diffuse:{value:new Pe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new _n},uv2Transform:{value:new _n},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ne(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Pe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Pe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new _n}},sprite:{diffuse:{value:new Pe(16777215)},opacity:{value:1},center:{value:new ne(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new _n}}},li={basic:{uniforms:yn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.fog]),vertexShader:ut.meshbasic_vert,fragmentShader:ut.meshbasic_frag},lambert:{uniforms:yn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.fog,Me.lights,{emissive:{value:new Pe(0)}}]),vertexShader:ut.meshlambert_vert,fragmentShader:ut.meshlambert_frag},phong:{uniforms:yn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,Me.lights,{emissive:{value:new Pe(0)},specular:{value:new Pe(1118481)},shininess:{value:30}}]),vertexShader:ut.meshphong_vert,fragmentShader:ut.meshphong_frag},standard:{uniforms:yn([Me.common,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.roughnessmap,Me.metalnessmap,Me.fog,Me.lights,{emissive:{value:new Pe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag},toon:{uniforms:yn([Me.common,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.gradientmap,Me.fog,Me.lights,{emissive:{value:new Pe(0)}}]),vertexShader:ut.meshtoon_vert,fragmentShader:ut.meshtoon_frag},matcap:{uniforms:yn([Me.common,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,{matcap:{value:null}}]),vertexShader:ut.meshmatcap_vert,fragmentShader:ut.meshmatcap_frag},points:{uniforms:yn([Me.points,Me.fog]),vertexShader:ut.points_vert,fragmentShader:ut.points_frag},dashed:{uniforms:yn([Me.common,Me.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ut.linedashed_vert,fragmentShader:ut.linedashed_frag},depth:{uniforms:yn([Me.common,Me.displacementmap]),vertexShader:ut.depth_vert,fragmentShader:ut.depth_frag},normal:{uniforms:yn([Me.common,Me.bumpmap,Me.normalmap,Me.displacementmap,{opacity:{value:1}}]),vertexShader:ut.meshnormal_vert,fragmentShader:ut.meshnormal_frag},sprite:{uniforms:yn([Me.sprite,Me.fog]),vertexShader:ut.sprite_vert,fragmentShader:ut.sprite_frag},background:{uniforms:{uvTransform:{value:new _n},t2D:{value:null}},vertexShader:ut.background_vert,fragmentShader:ut.background_frag},cube:{uniforms:yn([Me.envmap,{opacity:{value:1}}]),vertexShader:ut.cube_vert,fragmentShader:ut.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ut.equirect_vert,fragmentShader:ut.equirect_frag},distanceRGBA:{uniforms:yn([Me.common,Me.displacementmap,{referencePosition:{value:new E},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ut.distanceRGBA_vert,fragmentShader:ut.distanceRGBA_frag},shadow:{uniforms:yn([Me.lights,Me.fog,{color:{value:new Pe(0)},opacity:{value:1}}]),vertexShader:ut.shadow_vert,fragmentShader:ut.shadow_frag}};function Rp(a,e,t,n,i,s){const r=new Pe(0);let l,c,o=!0===i?0:1,h=null,d=0,f=null;function v(m,g){t.buffers.color.setClear(m.r,m.g,m.b,g,s)}return{getClearColor:function(){return r},setClearColor:function(m,g=1){r.set(m),o=g,v(r,o)},getClearAlpha:function(){return o},setClearAlpha:function(m){o=m,v(r,o)},render:function p(m,g){let y=!1,_=!0===g.isScene?g.background:null;_&&_.isTexture&&(_=e.get(_));const T=a.xr,b=T.getSession&&T.getSession();b&&"additive"===b.environmentBlendMode&&(_=null),null===_?v(r,o):_&&_.isColor&&(v(_,1),y=!0),(a.autoClear||y)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),_&&(_.isCubeTexture||306===_.mapping)?(void 0===c&&(c=new xn(new ss(1,1,1),new Li({name:"BackgroundCubeMaterial",uniforms:gr(li.cube.uniforms),vertexShader:li.cube.vertexShader,fragmentShader:li.cube.fragmentShader,side:at,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(C,L,F){this.matrixWorld.copyPosition(F.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&!1===_.isRenderTargetTexture?-1:1,(h!==_||d!==_.version||f!==a.toneMapping)&&(c.material.needsUpdate=!0,h=_,d=_.version,f=a.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(void 0===l&&(l=new xn(new Cs(2,2),new Li({name:"BackgroundMaterial",uniforms:gr(li.background.uniforms),vertexShader:li.background.vertexShader,fragmentShader:li.background.fragmentShader,side:Zn,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=_,!0===_.matrixAutoUpdate&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),(h!==_||d!==_.version||f!==a.toneMapping)&&(l.material.needsUpdate=!0,h=_,d=_.version,f=a.toneMapping),l.layers.enableAll(),m.unshift(l,l.geometry,l.material,0,0,null))}}}function Ip(a,e,t,n){const i=a.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),r=n.isWebGL2||null!==s,o={},l=g(null);let c=l,h=!1;function p(U){return n.isWebGL2?a.bindVertexArray(U):s.bindVertexArrayOES(U)}function v(U){return n.isWebGL2?a.deleteVertexArray(U):s.deleteVertexArrayOES(U)}function g(U){const K=[],j=[],se=[];for(let oe=0;oe<i;oe++)K[oe]=0,j[oe]=0,se[oe]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:K,enabledAttributes:j,attributeDivisors:se,object:U,attributes:{},index:null}}function T(){const U=c.newAttributes;for(let K=0,j=U.length;K<j;K++)U[K]=0}function b(U){C(U,0)}function C(U,K){const se=c.enabledAttributes,oe=c.attributeDivisors;c.newAttributes[U]=1,0===se[U]&&(a.enableVertexAttribArray(U),se[U]=1),oe[U]!==K&&((n.isWebGL2?a:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](U,K),oe[U]=K)}function L(){const U=c.newAttributes,K=c.enabledAttributes;for(let j=0,se=K.length;j<se;j++)K[j]!==U[j]&&(a.disableVertexAttribArray(j),K[j]=0)}function F(U,K,j,se,oe,q){!0!==n.isWebGL2||5124!==j&&5125!==j?a.vertexAttribPointer(U,K,j,se,oe,q):a.vertexAttribIPointer(U,K,j,oe,q)}function ie(){pe(),h=!0,c!==l&&(c=l,p(c.object))}function pe(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function d(U,K,j,se,oe){let q=!1;if(r){const J=function m(U,K,j){const se=!0===j.wireframe;let oe=o[U.id];void 0===oe&&(oe={},o[U.id]=oe);let q=oe[K.id];void 0===q&&(q={},oe[K.id]=q);let J=q[se];return void 0===J&&(J=g(function f(){return n.isWebGL2?a.createVertexArray():s.createVertexArrayOES()}()),q[se]=J),J}(se,j,K);c!==J&&(c=J,p(c.object)),q=function y(U,K,j,se){const oe=c.attributes,q=K.attributes;let J=0;const he=j.getAttributes();for(const le in he)if(he[le].location>=0){const ze=oe[le];let ke=q[le];if(void 0===ke&&("instanceMatrix"===le&&U.instanceMatrix&&(ke=U.instanceMatrix),"instanceColor"===le&&U.instanceColor&&(ke=U.instanceColor)),void 0===ze||ze.attribute!==ke||ke&&ze.data!==ke.data)return!0;J++}return c.attributesNum!==J||c.index!==se}(U,se,j,oe),q&&function _(U,K,j,se){const oe={},q=K.attributes;let J=0;const he=j.getAttributes();for(const le in he)if(he[le].location>=0){let ze=q[le];void 0===ze&&("instanceMatrix"===le&&U.instanceMatrix&&(ze=U.instanceMatrix),"instanceColor"===le&&U.instanceColor&&(ze=U.instanceColor));const ke={};ke.attribute=ze,ze&&ze.data&&(ke.data=ze.data),oe[le]=ke,J++}c.attributes=oe,c.attributesNum=J,c.index=se}(U,se,j,oe)}else{const J=!0===K.wireframe;(c.geometry!==se.id||c.program!==j.id||c.wireframe!==J)&&(c.geometry=se.id,c.program=j.id,c.wireframe=J,q=!0)}null!==oe&&t.update(oe,34963),(q||h)&&(h=!1,function S(U,K,j,se){if(!1===n.isWebGL2&&(U.isInstancedMesh||se.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;T();const oe=se.attributes,q=j.getAttributes(),J=K.defaultAttributeValues;for(const he in q){const le=q[he];if(le.location>=0){let ye=oe[he];if(void 0===ye&&("instanceMatrix"===he&&U.instanceMatrix&&(ye=U.instanceMatrix),"instanceColor"===he&&U.instanceColor&&(ye=U.instanceColor)),void 0!==ye){const ze=ye.normalized,ke=ye.itemSize,Q=t.get(ye);if(void 0===Q)continue;const Dt=Q.buffer,it=Q.type,tt=Q.bytesPerElement;if(ye.isInterleavedBufferAttribute){const be=ye.data,dt=be.stride,re=ye.offset;if(be.isInstancedInterleavedBuffer){for(let ee=0;ee<le.locationSize;ee++)C(le.location+ee,be.meshPerAttribute);!0!==U.isInstancedMesh&&void 0===se._maxInstanceCount&&(se._maxInstanceCount=be.meshPerAttribute*be.count)}else for(let ee=0;ee<le.locationSize;ee++)b(le.location+ee);a.bindBuffer(34962,Dt);for(let ee=0;ee<le.locationSize;ee++)F(le.location+ee,ke/le.locationSize,it,ze,dt*tt,(re+ke/le.locationSize*ee)*tt)}else{if(ye.isInstancedBufferAttribute){for(let be=0;be<le.locationSize;be++)C(le.location+be,ye.meshPerAttribute);!0!==U.isInstancedMesh&&void 0===se._maxInstanceCount&&(se._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let be=0;be<le.locationSize;be++)b(le.location+be);a.bindBuffer(34962,Dt);for(let be=0;be<le.locationSize;be++)F(le.location+be,ke/le.locationSize,it,ze,ke*tt,ke/le.locationSize*be*tt)}}else if(void 0!==J){const ze=J[he];if(void 0!==ze)switch(ze.length){case 2:a.vertexAttrib2fv(le.location,ze);break;case 3:a.vertexAttrib3fv(le.location,ze);break;case 4:a.vertexAttrib4fv(le.location,ze);break;default:a.vertexAttrib1fv(le.location,ze)}}}}L()}(U,K,j,se),null!==oe&&a.bindBuffer(34963,t.get(oe).buffer))},reset:ie,resetDefaultState:pe,dispose:function R(){ie();for(const U in o){const K=o[U];for(const j in K){const se=K[j];for(const oe in se)v(se[oe].object),delete se[oe];delete K[j]}delete o[U]}},releaseStatesOfGeometry:function B(U){if(void 0===o[U.id])return;const K=o[U.id];for(const j in K){const se=K[j];for(const oe in se)v(se[oe].object),delete se[oe];delete K[j]}delete o[U.id]},releaseStatesOfProgram:function k(U){for(const K in o){const j=o[K];if(void 0===j[U.id])continue;const se=j[U.id];for(const oe in se)v(se[oe].object),delete se[oe];delete j[U.id]}},initAttributes:T,enableAttribute:b,disableUnusedAttributes:L}}function Np(a,e,t,n){const i=n.isWebGL2;let s;this.setMode=function r(c){s=c},this.render=function o(c,h){a.drawArrays(s,c,h),t.update(h,s,1)},this.renderInstances=function l(c,h,d){if(0===d)return;let f,p;if(i)f=a,p="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",null===f)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");f[p](s,c,h,d),t.update(h,s,d)}}function Dp(a,e,t){let n;function s(F){if("highp"===F){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";F="mediump"}return"mediump"===F&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r=typeof WebGL2RenderingContext<"u"&&a instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&a instanceof WebGL2ComputeRenderingContext;let o=void 0!==t.precision?t.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=r||e.has("WEBGL_draw_buffers"),h=!0===t.logarithmicDepthBuffer,d=a.getParameter(34930),f=a.getParameter(35660),p=a.getParameter(3379),v=a.getParameter(34076),m=a.getParameter(34921),g=a.getParameter(36347),y=a.getParameter(36348),_=a.getParameter(36349),T=f>0,b=r||e.has("OES_texture_float");return{isWebGL2:r,drawBuffers:c,getMaxAnisotropy:function i(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const F=e.get("EXT_texture_filter_anisotropic");n=a.getParameter(F.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:s,precision:o,logarithmicDepthBuffer:h,maxTextures:d,maxVertexTextures:f,maxTextureSize:p,maxCubemapSize:v,maxAttributes:m,maxVertexUniforms:g,maxVaryings:y,maxFragmentUniforms:_,vertexTextures:T,floatFragmentTextures:b,floatVertexTextures:T&&b,maxSamples:r?a.getParameter(36183):0}}function Fp(a){const e=this;let t=null,n=0,i=!1,s=!1;const r=new As,o=new _n,l={value:null,needsUpdate:!1};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(d,f,p,v){const m=null!==d?d.length:0;let g=null;if(0!==m){if(g=l.value,!0!==v||null===g){const y=p+4*m,_=f.matrixWorldInverse;o.getNormalMatrix(_),(null===g||g.length<y)&&(g=new Float32Array(y));for(let T=0,b=p;T!==m;++T,b+=4)r.copy(d[T]).applyMatrix4(_,o),r.normal.toArray(g,b),g[b+3]=r.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,f,p){const v=0!==d.length||f||0!==n||i;return i=f,t=h(d,p,0),n=d.length,v},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,c()},this.setState=function(d,f,p){const v=d.clippingPlanes,m=d.clipIntersection,g=d.clipShadows,y=a.get(d);if(!i||null===v||0===v.length||s&&!g)s?h(null):c();else{const _=s?0:n,T=4*_;let b=y.clippingState||null;l.value=b,b=h(v,f,T,p);for(let C=0;C!==T;++C)b[C]=t[C];y.clippingState=b,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=_}}}function Op(a){let e=new WeakMap;function t(r,o){return o===Ge?r.mapping=ti:304===o&&(r.mapping=302),r}function i(r){const o=r.target;o.removeEventListener("dispose",i);const l=e.get(o);void 0!==l&&(e.delete(o),l.dispose())}return{get:function n(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const o=r.mapping;if(o===Ge||304===o){if(e.has(r))return t(e.get(r).texture,r.mapping);{const l=r.image;if(l&&l.height>0){const c=new gh(l.height/2);return c.fromEquirectangularTexture(a,r),e.set(r,c),r.addEventListener("dispose",i),t(c.texture,r.mapping)}return null}}}return r},dispose:function s(){e=new WeakMap}}}li.physical={uniforms:yn([li.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ne(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Pe(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ne},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Pe(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Pe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag};class Ma extends xa{constructor(e=-1,t=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,r=n+e,o=i+t,l=i-t;if(null!==this.view&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,r=s+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(s,r,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const xh=[.125,.215,.35,.446,.526,.582],ql=new Ma,yh=new Pe;let Yl=null;const Ps=(1+Math.sqrt(5))/2,Mr=1/Ps,_h=[new E(1,1,1),new E(-1,1,1),new E(1,1,-1),new E(-1,1,-1),new E(0,Ps,Mr),new E(0,Ps,-Mr),new E(Mr,0,Ps),new E(-Mr,0,Ps),new E(Ps,Mr,0),new E(-Ps,Mr,0)];class Mh{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Yl=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=wh(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Sh(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Yl),e.scissorTest=!1,ba(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSize(e.mapping===ti||302===e.mapping?0===e.image.length?16:e.image[0].width||e.image[0].image.width:e.image.width/4),Yl=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Ft,minFilter:Ft,generateMipmaps:!1,type:zi,format:Ln,encoding:ri,depthBuffer:!1},i=bh(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=bh(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function zp(a){const e=[],t=[],n=[];let i=a;const s=a-4+1+xh.length;for(let r=0;r<s;r++){const o=Math.pow(2,i);t.push(o);let l=1/o;r>a-4?l=xh[r-a+4-1]:0===r&&(l=0),n.push(l);const c=1/(o-2),h=-c,d=1+c,f=[h,h,d,h,d,d,h,h,d,d,h,d],p=6,v=6,m=3,g=2,y=1,_=new Float32Array(m*v*p),T=new Float32Array(g*v*p),b=new Float32Array(y*v*p);for(let L=0;L<p;L++){const F=L%3*2/3-1,S=L>2?0:-1;_.set([F,S,0,F+2/3,S,0,F+2/3,S+1,0,F,S,0,F+2/3,S+1,0,F,S+1,0],m*v*L),T.set(f,g*v*L),b.set([L,L,L,L,L,L],y*v*L)}const C=new ct;C.setAttribute("position",new an(_,m)),C.setAttribute("uv",new an(T,g)),C.setAttribute("faceIndex",new an(b,y)),e.push(C),i>4&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}(s)),this._blurMaterial=function Bp(a,e,t){const n=new Float32Array(20),i=new E(0,1,0);return new Li({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:Cn,depthTest:!1,depthWrite:!1})}(s,e,t)}return i}_compileMaterial(e){const t=new xn(this._lodPlanes[0],e);this._renderer.compile(t,ql)}_sceneToCubeUV(e,t,n,i){const o=new pn(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.toneMapping;h.getClearColor(yh),h.toneMapping=Vn,h.autoClear=!1;const p=new es({name:"PMREM.Background",side:at,depthWrite:!1,depthTest:!1}),v=new xn(new ss,p);let m=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,m=!0):(p.color.copy(yh),m=!0);for(let y=0;y<6;y++){const _=y%3;0===_?(o.up.set(0,l[y],0),o.lookAt(c[y],0,0)):1===_?(o.up.set(0,0,l[y]),o.lookAt(0,c[y],0)):(o.up.set(0,l[y],0),o.lookAt(0,0,c[y]));const T=this._cubeSize;ba(i,_*T,y>2?T:0,T,T),h.setRenderTarget(i),m&&h.render(v,o),h.render(e,o)}v.geometry.dispose(),v.material.dispose(),h.toneMapping=f,h.autoClear=d,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ti||302===e.mapping;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=wh()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Sh());const s=i?this._cubemapMaterial:this._equirectMaterial,r=new xn(this._lodPlanes[0],s);s.uniforms.envMap.value=e;const l=this._cubeSize;ba(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(r,ql)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]);this._blur(e,i-1,i,s,_h[(i-1)%_h.length])}t.autoClear=n}_blur(e,t,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,i,"latitudinal",s),this._halfBlur(r,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,r,o){const l=this._renderer,c=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const d=new xn(this._lodPlanes[i],c),f=c.uniforms,p=this._sizeLods[n]-1,v=isFinite(s)?Math.PI/(2*p):2*Math.PI/39,m=s/v,g=isFinite(s)?1+Math.floor(3*m):20;g>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to 20`);const y=[];let _=0;for(let F=0;F<20;++F){const S=F/m,R=Math.exp(-S*S/2);y.push(R),0===F?_+=R:F<g&&(_+=2*R)}for(let F=0;F<y.length;F++)y[F]=y[F]/_;f.envMap.value=e.texture,f.samples.value=g,f.weights.value=y,f.latitudinal.value="latitudinal"===r,o&&(f.poleAxis.value=o);const{_lodMax:T}=this;f.dTheta.value=v,f.mipInt.value=T-n;const b=this._sizeLods[i];ba(t,3*b*(i>T-4?i-T+4:0),4*(this._cubeSize-b),3*b,2*b),l.setRenderTarget(t),l.render(d,ql)}}function bh(a,e,t){const n=new Kn(a,e,t);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ba(a,e,t,n,i){a.viewport.set(e,t,n,i),a.scissor.set(e,t,n,i)}function Sh(){return new Li({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:Cn,depthTest:!1,depthWrite:!1})}function wh(){return new Li({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:Cn,depthTest:!1,depthWrite:!1})}function kp(a){let e=new WeakMap,t=null;function s(o){const l=o.target;l.removeEventListener("dispose",s);const c=e.get(l);void 0!==c&&(e.delete(l),c.dispose())}return{get:function n(o){if(o&&o.isTexture){const l=o.mapping,c=l===Ge||304===l,h=l===ti||302===l;if(c||h){if(o.isRenderTargetTexture&&!0===o.needsPMREMUpdate){o.needsPMREMUpdate=!1;let d=e.get(o);return null===t&&(t=new Mh(a)),d=c?t.fromEquirectangular(o,d):t.fromCubemap(o,d),e.set(o,d),d.texture}if(e.has(o))return e.get(o).texture;{const d=o.image;if(c&&d&&d.height>0||h&&d&&function i(o){let l=0;for(let h=0;h<6;h++)void 0!==o[h]&&l++;return 6===l}(d)){null===t&&(t=new Mh(a));const f=c?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",s),f.texture}return null}}}return o},dispose:function r(){e=new WeakMap,null!==t&&(t.dispose(),t=null)}}}function Up(a){const e={};function t(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=a.getExtension(n)}return e[n]=i,i}return{has:function(n){return null!==t(n)},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return null===i&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Vp(a,e,t,n){const i={},s=new WeakMap;function r(d){const f=d.target;null!==f.index&&e.remove(f.index);for(const v in f.attributes)e.remove(f.attributes[v]);f.removeEventListener("dispose",r),delete i[f.id];const p=s.get(f);p&&(e.remove(p),s.delete(f)),n.releaseStatesOfGeometry(f),!0===f.isInstancedBufferGeometry&&delete f._maxInstanceCount,t.memory.geometries--}function c(d){const f=[],p=d.index,v=d.attributes.position;let m=0;if(null!==p){const _=p.array;m=p.version;for(let T=0,b=_.length;T<b;T+=3){const C=_[T+0],L=_[T+1],F=_[T+2];f.push(C,L,L,F,F,C)}}else{m=v.version;for(let T=0,b=v.array.length/3-1;T<b;T+=3){const C=T+0,L=T+1,F=T+2;f.push(C,L,L,F,F,C)}}const g=new(ta(f)?dh:uh)(f,1);g.version=m;const y=s.get(d);y&&e.remove(y),s.set(d,g)}return{get:function o(d,f){return!0===i[f.id]||(f.addEventListener("dispose",r),i[f.id]=!0,t.memory.geometries++),f},update:function l(d){const f=d.attributes;for(const v in f)e.update(f[v],34962);const p=d.morphAttributes;for(const v in p){const m=p[v];for(let g=0,y=m.length;g<y;g++)e.update(m[g],34962)}},getWireframeAttribute:function h(d){const f=s.get(d);if(f){const p=d.index;null!==p&&f.version<p.version&&c(d)}else c(d);return s.get(d)}}}function Gp(a,e,t,n){const i=n.isWebGL2;let s,o,l;this.setMode=function r(f){s=f},this.setIndex=function c(f){o=f.type,l=f.bytesPerElement},this.render=function h(f,p){a.drawElements(s,p,o,f*l),t.update(p,s,1)},this.renderInstances=function d(f,p,v){if(0===v)return;let m,g;if(i)m=a,g="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",null===m)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");m[g](s,p,o,f*l,v),t.update(p,s,v)}}function Hp(a){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function n(s,r,o){switch(t.calls++,r){case 4:t.triangles+=o*(s/3);break;case 1:t.lines+=o*(s/2);break;case 3:t.lines+=o*(s-1);break;case 2:t.lines+=o*s;break;case 0:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function Wp(a,e){return a[0]-e[0]}function jp(a,e){return Math.abs(e[1])-Math.abs(a[1])}function $l(a,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Uint8Array?t=255:n instanceof Uint16Array?t=65535:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),a.divideScalar(t)}function Xp(a,e,t){const n={},i=new Float32Array(8),s=new WeakMap,r=new Tt,o=[];for(let c=0;c<8;c++)o[c]=[c,0];return{update:function l(c,h,d,f){const p=c.morphTargetInfluences;if(!0===e.isWebGL2){const v=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,m=void 0!==v?v.length:0;let g=s.get(h);if(void 0===g||g.count!==m){let K=function(){pe.dispose(),s.delete(h),h.removeEventListener("dispose",K)};void 0!==g&&g.texture.dispose();const T=void 0!==h.morphAttributes.position,b=void 0!==h.morphAttributes.normal,C=void 0!==h.morphAttributes.color,L=h.morphAttributes.position||[],F=h.morphAttributes.normal||[],S=h.morphAttributes.color||[];let R=0;!0===T&&(R=1),!0===b&&(R=2),!0===C&&(R=3);let B=h.attributes.position.count*R,k=1;B>e.maxTextureSize&&(k=Math.ceil(B/e.maxTextureSize),B=e.maxTextureSize);const ie=new Float32Array(B*k*4*m),pe=new uo(ie,B,k,m);pe.type=Pn,pe.needsUpdate=!0;const U=4*R;for(let j=0;j<m;j++){const se=L[j],oe=F[j],q=S[j],J=B*k*4*j;for(let he=0;he<se.count;he++){const le=he*U;!0===T&&(r.fromBufferAttribute(se,he),!0===se.normalized&&$l(r,se),ie[J+le+0]=r.x,ie[J+le+1]=r.y,ie[J+le+2]=r.z,ie[J+le+3]=0),!0===b&&(r.fromBufferAttribute(oe,he),!0===oe.normalized&&$l(r,oe),ie[J+le+4]=r.x,ie[J+le+5]=r.y,ie[J+le+6]=r.z,ie[J+le+7]=0),!0===C&&(r.fromBufferAttribute(q,he),!0===q.normalized&&$l(r,q),ie[J+le+8]=r.x,ie[J+le+9]=r.y,ie[J+le+10]=r.z,ie[J+le+11]=4===q.itemSize?r.w:1)}}g={count:m,texture:pe,size:new ne(B,k)},s.set(h,g),h.addEventListener("dispose",K)}let y=0;for(let T=0;T<p.length;T++)y+=p[T];const _=h.morphTargetsRelative?1:1-y;f.getUniforms().setValue(a,"morphTargetBaseInfluence",_),f.getUniforms().setValue(a,"morphTargetInfluences",p),f.getUniforms().setValue(a,"morphTargetsTexture",g.texture,t),f.getUniforms().setValue(a,"morphTargetsTextureSize",g.size)}else{const v=void 0===p?0:p.length;let m=n[h.id];if(void 0===m||m.length!==v){m=[];for(let b=0;b<v;b++)m[b]=[b,0];n[h.id]=m}for(let b=0;b<v;b++){const C=m[b];C[0]=b,C[1]=p[b]}m.sort(jp);for(let b=0;b<8;b++)b<v&&m[b][1]?(o[b][0]=m[b][0],o[b][1]=m[b][1]):(o[b][0]=Number.MAX_SAFE_INTEGER,o[b][1]=0);o.sort(Wp);const g=h.morphAttributes.position,y=h.morphAttributes.normal;let _=0;for(let b=0;b<8;b++){const C=o[b],L=C[0],F=C[1];L!==Number.MAX_SAFE_INTEGER&&F?(g&&h.getAttribute("morphTarget"+b)!==g[L]&&h.setAttribute("morphTarget"+b,g[L]),y&&h.getAttribute("morphNormal"+b)!==y[L]&&h.setAttribute("morphNormal"+b,y[L]),i[b]=F,_+=F):(g&&!0===h.hasAttribute("morphTarget"+b)&&h.deleteAttribute("morphTarget"+b),y&&!0===h.hasAttribute("morphNormal"+b)&&h.deleteAttribute("morphNormal"+b),i[b]=0)}const T=h.morphTargetsRelative?1:1-_;f.getUniforms().setValue(a,"morphTargetBaseInfluence",T),f.getUniforms().setValue(a,"morphTargetInfluences",i)}}}}function qp(a,e,t,n){let i=new WeakMap;function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),null!==c.instanceColor&&t.remove(c.instanceColor)}return{update:function s(l){const c=n.render.frame,d=e.get(l,l.geometry);return i.get(d)!==c&&(e.update(d),i.set(d,c)),l.isInstancedMesh&&(!1===l.hasEventListener("dispose",o)&&l.addEventListener("dispose",o),t.update(l.instanceMatrix,34962),null!==l.instanceColor&&t.update(l.instanceColor,34962)),d},dispose:function r(){i=new WeakMap}}}const Th=new Wn,Ah=new uo,Ch=new ra,Eh=new ya,Ph=[],Lh=[],Rh=new Float32Array(16),Ih=new Float32Array(9),Nh=new Float32Array(4);function br(a,e,t){const n=a[0];if(n<=0||n>0)return a;const i=e*t;let s=Ph[i];if(void 0===s&&(s=new Float32Array(i),Ph[i]=s),0!==e){n.toArray(s,0);for(let r=1,o=0;r!==e;++r)o+=t,a[r].toArray(s,o)}return s}function bn(a,e){if(a.length!==e.length)return!1;for(let t=0,n=a.length;t<n;t++)if(a[t]!==e[t])return!1;return!0}function Sn(a,e){for(let t=0,n=e.length;t<n;t++)a[t]=e[t]}function Sa(a,e){let t=Lh[e];void 0===t&&(t=new Int32Array(e),Lh[e]=t);for(let n=0;n!==e;++n)t[n]=a.allocateTextureUnit();return t}function Yp(a,e){const t=this.cache;t[0]!==e&&(a.uniform1f(this.addr,e),t[0]=e)}function Zp(a,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y)&&(a.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(bn(t,e))return;a.uniform2fv(this.addr,e),Sn(t,e)}}function $p(a,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(a.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(void 0!==e.r)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(a.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(bn(t,e))return;a.uniform3fv(this.addr,e),Sn(t,e)}}function Jp(a,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(a.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(bn(t,e))return;a.uniform4fv(this.addr,e),Sn(t,e)}}function Kp(a,e){const t=this.cache,n=e.elements;if(void 0===n){if(bn(t,e))return;a.uniformMatrix2fv(this.addr,!1,e),Sn(t,e)}else{if(bn(t,n))return;Nh.set(n),a.uniformMatrix2fv(this.addr,!1,Nh),Sn(t,n)}}function Qp(a,e){const t=this.cache,n=e.elements;if(void 0===n){if(bn(t,e))return;a.uniformMatrix3fv(this.addr,!1,e),Sn(t,e)}else{if(bn(t,n))return;Ih.set(n),a.uniformMatrix3fv(this.addr,!1,Ih),Sn(t,n)}}function em(a,e){const t=this.cache,n=e.elements;if(void 0===n){if(bn(t,e))return;a.uniformMatrix4fv(this.addr,!1,e),Sn(t,e)}else{if(bn(t,n))return;Rh.set(n),a.uniformMatrix4fv(this.addr,!1,Rh),Sn(t,n)}}function tm(a,e){const t=this.cache;t[0]!==e&&(a.uniform1i(this.addr,e),t[0]=e)}function nm(a,e){const t=this.cache;bn(t,e)||(a.uniform2iv(this.addr,e),Sn(t,e))}function im(a,e){const t=this.cache;bn(t,e)||(a.uniform3iv(this.addr,e),Sn(t,e))}function sm(a,e){const t=this.cache;bn(t,e)||(a.uniform4iv(this.addr,e),Sn(t,e))}function rm(a,e){const t=this.cache;t[0]!==e&&(a.uniform1ui(this.addr,e),t[0]=e)}function om(a,e){const t=this.cache;bn(t,e)||(a.uniform2uiv(this.addr,e),Sn(t,e))}function am(a,e){const t=this.cache;bn(t,e)||(a.uniform3uiv(this.addr,e),Sn(t,e))}function lm(a,e){const t=this.cache;bn(t,e)||(a.uniform4uiv(this.addr,e),Sn(t,e))}function cm(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Th,i)}function hm(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Ch,i)}function um(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Eh,i)}function dm(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Ah,i)}function pm(a,e){a.uniform1fv(this.addr,e)}function mm(a,e){const t=br(e,this.size,2);a.uniform2fv(this.addr,t)}function gm(a,e){const t=br(e,this.size,3);a.uniform3fv(this.addr,t)}function vm(a,e){const t=br(e,this.size,4);a.uniform4fv(this.addr,t)}function xm(a,e){const t=br(e,this.size,4);a.uniformMatrix2fv(this.addr,!1,t)}function ym(a,e){const t=br(e,this.size,9);a.uniformMatrix3fv(this.addr,!1,t)}function _m(a,e){const t=br(e,this.size,16);a.uniformMatrix4fv(this.addr,!1,t)}function Mm(a,e){a.uniform1iv(this.addr,e)}function bm(a,e){a.uniform2iv(this.addr,e)}function Sm(a,e){a.uniform3iv(this.addr,e)}function wm(a,e){a.uniform4iv(this.addr,e)}function Tm(a,e){a.uniform1uiv(this.addr,e)}function Am(a,e){a.uniform2uiv(this.addr,e)}function Cm(a,e){a.uniform3uiv(this.addr,e)}function Em(a,e){a.uniform4uiv(this.addr,e)}function Pm(a,e,t){const n=e.length,i=Sa(t,n);a.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||Th,i[s])}function Lm(a,e,t){const n=e.length,i=Sa(t,n);a.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Ch,i[s])}function Rm(a,e,t){const n=e.length,i=Sa(t,n);a.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Eh,i[s])}function Im(a,e,t){const n=e.length,i=Sa(t,n);a.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||Ah,i[s])}class Dm{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function fm(a){switch(a){case 5126:return Yp;case 35664:return Zp;case 35665:return $p;case 35666:return Jp;case 35674:return Kp;case 35675:return Qp;case 35676:return em;case 5124:case 35670:return tm;case 35667:case 35671:return nm;case 35668:case 35672:return im;case 35669:case 35673:return sm;case 5125:return rm;case 36294:return om;case 36295:return am;case 36296:return lm;case 35678:case 36198:case 36298:case 36306:case 35682:return cm;case 35679:case 36299:case 36307:return hm;case 35680:case 36300:case 36308:case 36293:return um;case 36289:case 36303:case 36311:case 36292:return dm}}(t.type)}}class Fm{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function Nm(a){switch(a){case 5126:return pm;case 35664:return mm;case 35665:return gm;case 35666:return vm;case 35674:return xm;case 35675:return ym;case 35676:return _m;case 5124:case 35670:return Mm;case 35667:case 35671:return bm;case 35668:case 35672:return Sm;case 35669:case 35673:return wm;case 5125:return Tm;case 36294:return Am;case 36295:return Cm;case 36296:return Em;case 35678:case 36198:case 36298:case 36306:case 35682:return Pm;case 35679:case 36299:case 36307:return Lm;case 35680:case 36300:case 36308:case 36293:return Rm;case 36289:case 36303:case 36311:case 36292:return Im}}(t.type)}}class Om{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,r=i.length;s!==r;++s){const o=i[s];o.setValue(e,t[o.id],n)}}}const Jl=/(\w+)(\])?(\[|\.)?/g;function Dh(a,e){a.seq.push(e),a.map[e.id]=e}function zm(a,e,t){const n=a.name,i=n.length;for(Jl.lastIndex=0;;){const s=Jl.exec(n),r=Jl.lastIndex;let o=s[1];const c=s[3];if("]"===s[2]&&(o|=0),void 0===c||"["===c&&r+2===i){Dh(t,void 0===c?new Dm(o,a,e):new Fm(o,a,e));break}{let d=t.map[o];void 0===d&&(d=new Om(o),Dh(t,d)),t=d}}}class wa{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i);zm(s,e.getUniformLocation(t,s.name),this)}}setValue(e,t,n,i){const s=this.map[t];void 0!==s&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,r=t.length;s!==r;++s){const o=t[s],l=n[o.id];!1!==l.needsUpdate&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const r=e[i];r.id in t&&n.push(r)}return n}}function Fh(a,e,t){const n=a.createShader(e);return a.shaderSource(n,t),a.compileShader(n),n}let Bm=0;function Oh(a,e,t){const n=a.getShaderParameter(e,35713),i=a.getShaderInfoLog(e).trim();if(n&&""===i)return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const r=parseInt(s[1]);return t.toUpperCase()+"\n\n"+i+"\n\n"+function km(a,e){const t=a.split("\n"),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let r=i;r<s;r++){const o=r+1;n.push(`${o===e?">":" "} ${o}: ${t[r]}`)}return n.join("\n")}(a.getShaderSource(e),r)}return i}function Vm(a,e){const t=function Um(a){switch(a){case ri:return["Linear","( value )"];case Mt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}(e);return"vec4 "+a+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Gm(a,e){let t;switch(e){case 1:t="Linear";break;case 2:t="Reinhard";break;case 3:t="OptimizedCineon";break;case jr:t="ACESFilmic";break;case 5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+a+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function _o(a){return""!==a}function zh(a,e){return a.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Bh(a,e){return a.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Xm=/^[ \t]*#include +<([\w\d./]+)>/gm;function Kl(a){return a.replace(Xm,qm)}function qm(a,e){const t=ut[e];if(void 0===t)throw new Error("Can not resolve #include <"+e+">");return Kl(t)}const Ym=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Zm=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function kh(a){return a.replace(Zm,Uh).replace(Ym,$m)}function $m(a,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Uh(0,e,t,n)}function Uh(a,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Vh(a){let e="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?e+="\n#define HIGH_PRECISION":"mediump"===a.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(e+="\n#define LOW_PRECISION"),e}function ng(a,e,t,n){const i=a.getContext(),s=t.defines;let r=t.vertexShader,o=t.fragmentShader;const l=function Jm(a){let e="SHADOWMAP_TYPE_BASIC";return 1===a.shadowMapType?e="SHADOWMAP_TYPE_PCF":a.shadowMapType===tn?e="SHADOWMAP_TYPE_PCF_SOFT":3===a.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(t),c=function Km(a){let e="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case ti:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:e="ENVMAP_TYPE_CUBE_UV"}return e}(t),h=function Qm(a){let e="ENVMAP_MODE_REFLECTION";return a.envMap&&302===a.envMapMode&&(e="ENVMAP_MODE_REFRACTION"),e}(t),d=function eg(a){let e="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(t),f=function tg(a){const e=a.envMapCubeUVHeight;if(null===e)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}(t),p=t.isWebGL2?"":function Hm(a){return[a.extensionDerivatives||a.envMapCubeUVHeight||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(_o).join("\n")}(t),v=function Wm(a){const e=[];for(const t in a){const n=a[t];!1!==n&&e.push("#define "+t+" "+n)}return e.join("\n")}(s),m=i.createProgram();let g,y,_=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(g=[v].filter(_o).join("\n"),g.length>0&&(g+="\n"),y=[p,v].filter(_o).join("\n"),y.length>0&&(y+="\n")):(g=[Vh(t),"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(_o).join("\n"),y=[p,Vh(t),"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Vn?"#define TONE_MAPPING":"",t.toneMapping!==Vn?ut.tonemapping_pars_fragment:"",t.toneMapping!==Vn?Gm("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ut.encodings_pars_fragment,Vm("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(_o).join("\n")),r=Kl(r),r=zh(r,t),r=Bh(r,t),o=Kl(o),o=zh(o,t),o=Bh(o,t),r=kh(r),o=kh(o),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(_="#version 300 es\n",g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,y=["#define varying in","300 es"===t.glslVersion?"":"layout(location = 0) out highp vec4 pc_fragColor;","300 es"===t.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const b=_+y+o,C=Fh(i,35633,_+g+r),L=Fh(i,35632,b);if(i.attachShader(m,C),i.attachShader(m,L),void 0!==t.index0AttributeName?i.bindAttribLocation(m,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),a.debug.checkShaderErrors){const R=i.getProgramInfoLog(m).trim(),B=i.getShaderInfoLog(C).trim(),k=i.getShaderInfoLog(L).trim();let ie=!0,pe=!0;if(!1===i.getProgramParameter(m,35714)){ie=!1;const U=Oh(i,C,"vertex"),K=Oh(i,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,35715)+"\n\nProgram Info Log: "+R+"\n"+U+"\n"+K)}else""!==R?console.warn("THREE.WebGLProgram: Program Info Log:",R):(""===B||""===k)&&(pe=!1);pe&&(this.diagnostics={runnable:ie,programLog:R,vertexShader:{log:B,prefix:g},fragmentShader:{log:k,prefix:y}})}let F,S;return i.deleteShader(C),i.deleteShader(L),this.getUniforms=function(){return void 0===F&&(F=new wa(i,m)),F},this.getAttributes=function(){return void 0===S&&(S=function jm(a,e){const t={},n=a.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=a.getActiveAttrib(e,i),r=s.name;let o=1;35674===s.type&&(o=2),35675===s.type&&(o=3),35676===s.type&&(o=4),t[r]={type:s.type,location:a.getAttribLocation(e,r),locationSize:o}}return t}(i,m)),S},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=t.shaderName,this.id=Bm++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=C,this.fragmentShader=L,this}let ig=0;class sg{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.fragmentShader,i=this._getShaderStage(e.vertexShader),s=this._getShaderStage(n),r=this._getShaderCacheForMaterial(e);return!1===r.has(i)&&(r.add(i),i.usedTimes++),!1===r.has(s)&&(r.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(!1===t.has(e)){const n=new rg(e);t.set(e,n)}return t.get(e)}}class rg{constructor(e){this.id=ig++,this.code=e,this.usedTimes=0}}function og(a,e,t,n,i,s,r){const o=new N,l=new sg,c=[],h=i.isWebGL2,d=i.logarithmicDepthBuffer,f=i.vertexTextures;let p=i.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function m(S,R,B,k,ie){const pe=k.fog,U=ie.geometry,j=(S.isMeshStandardMaterial?t:e).get(S.envMap||(S.isMeshStandardMaterial?k.environment:null)),se=j&&306===j.mapping?j.image.height:null,oe=v[S.type];null!==S.precision&&(p=i.getMaxPrecision(S.precision),p!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",p,"instead."));const q=U.morphAttributes.position||U.morphAttributes.normal||U.morphAttributes.color,J=void 0!==q?q.length:0;let le,ye,ze,ke,he=0;if(void 0!==U.morphAttributes.position&&(he=1),void 0!==U.morphAttributes.normal&&(he=2),void 0!==U.morphAttributes.color&&(he=3),oe){const dt=li[oe];le=dt.vertexShader,ye=dt.fragmentShader}else le=S.vertexShader,ye=S.fragmentShader,l.update(S),ze=l.getVertexShaderID(S),ke=l.getFragmentShaderID(S);const Q=a.getRenderTarget(),it=S.clearcoat>0,tt=S.iridescence>0;return{isWebGL2:h,shaderID:oe,shaderName:S.type,vertexShader:le,fragmentShader:ye,defines:S.defines,customVertexShaderID:ze,customFragmentShaderID:ke,isRawShaderMaterial:!0===S.isRawShaderMaterial,glslVersion:S.glslVersion,precision:p,instancing:!0===ie.isInstancedMesh,instancingColor:!0===ie.isInstancedMesh&&null!==ie.instanceColor,supportsVertexTextures:f,outputEncoding:null===Q?a.outputEncoding:!0===Q.isXRRenderTarget?Q.texture.encoding:ri,map:!!S.map,matcap:!!S.matcap,envMap:!!j,envMapMode:j&&j.mapping,envMapCubeUVHeight:se,lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:1===S.normalMapType,tangentSpaceNormalMap:S.normalMapType===cn,decodeVideoTexture:!!S.map&&!0===S.map.isVideoTexture&&S.map.encoding===Mt,clearcoat:it,clearcoatMap:it&&!!S.clearcoatMap,clearcoatRoughnessMap:it&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:it&&!!S.clearcoatNormalMap,iridescence:tt,iridescenceMap:tt&&!!S.iridescenceMap,iridescenceThicknessMap:tt&&!!S.iridescenceThicknessMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,opaque:!1===S.transparent&&1===S.blending,alphaMap:!!S.alphaMap,alphaTest:S.alphaTest>0,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!U.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:!0===S.vertexColors&&!!U.attributes.color&&4===U.attributes.color.itemSize,vertexUvs:!!(S.map||S.bumpMap||S.normalMap||S.specularMap||S.alphaMap||S.emissiveMap||S.roughnessMap||S.metalnessMap||S.clearcoatMap||S.clearcoatRoughnessMap||S.clearcoatNormalMap||S.iridescenceMap||S.iridescenceThicknessMap||S.displacementMap||S.transmissionMap||S.thicknessMap||S.specularIntensityMap||S.specularColorMap||S.sheenColorMap||S.sheenRoughnessMap),uvsVertexOnly:!(S.map||S.bumpMap||S.normalMap||S.specularMap||S.alphaMap||S.emissiveMap||S.roughnessMap||S.metalnessMap||S.clearcoatNormalMap||S.iridescenceMap||S.iridescenceThicknessMap||S.transmission>0||S.transmissionMap||S.thicknessMap||S.specularIntensityMap||S.specularColorMap||S.sheen>0||S.sheenColorMap||S.sheenRoughnessMap||!S.displacementMap),fog:!!pe,useFog:!0===S.fog,fogExp2:pe&&pe.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===ie.isSkinnedMesh,morphTargets:void 0!==U.morphAttributes.position,morphNormals:void 0!==U.morphAttributes.normal,morphColors:void 0!==U.morphAttributes.color,morphTargetsCount:J,morphTextureStride:he,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:S.dithering,shadowMapEnabled:a.shadowMap.enabled&&B.length>0,shadowMapType:a.shadowMap.type,toneMapping:S.toneMapped?a.toneMapping:Vn,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===vt,flipSided:S.side===at,useDepthPacking:!!S.depthPacking,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}},getProgramCacheKey:function g(S){const R=[];if(S.shaderID?R.push(S.shaderID):(R.push(S.customVertexShaderID),R.push(S.customFragmentShaderID)),void 0!==S.defines)for(const B in S.defines)R.push(B),R.push(S.defines[B]);return!1===S.isRawShaderMaterial&&(function y(S,R){S.push(R.precision),S.push(R.outputEncoding),S.push(R.envMapMode),S.push(R.envMapCubeUVHeight),S.push(R.combine),S.push(R.vertexUvs),S.push(R.fogExp2),S.push(R.sizeAttenuation),S.push(R.morphTargetsCount),S.push(R.morphAttributeCount),S.push(R.numDirLights),S.push(R.numPointLights),S.push(R.numSpotLights),S.push(R.numHemiLights),S.push(R.numRectAreaLights),S.push(R.numDirLightShadows),S.push(R.numPointLightShadows),S.push(R.numSpotLightShadows),S.push(R.shadowMapType),S.push(R.toneMapping),S.push(R.numClippingPlanes),S.push(R.numClipIntersection),S.push(R.depthPacking)}(R,S),function _(S,R){o.disableAll(),R.isWebGL2&&o.enable(0),R.supportsVertexTextures&&o.enable(1),R.instancing&&o.enable(2),R.instancingColor&&o.enable(3),R.map&&o.enable(4),R.matcap&&o.enable(5),R.envMap&&o.enable(6),R.lightMap&&o.enable(7),R.aoMap&&o.enable(8),R.emissiveMap&&o.enable(9),R.bumpMap&&o.enable(10),R.normalMap&&o.enable(11),R.objectSpaceNormalMap&&o.enable(12),R.tangentSpaceNormalMap&&o.enable(13),R.clearcoat&&o.enable(14),R.clearcoatMap&&o.enable(15),R.clearcoatRoughnessMap&&o.enable(16),R.clearcoatNormalMap&&o.enable(17),R.iridescence&&o.enable(18),R.iridescenceMap&&o.enable(19),R.iridescenceThicknessMap&&o.enable(20),R.displacementMap&&o.enable(21),R.specularMap&&o.enable(22),R.roughnessMap&&o.enable(23),R.metalnessMap&&o.enable(24),R.gradientMap&&o.enable(25),R.alphaMap&&o.enable(26),R.alphaTest&&o.enable(27),R.vertexColors&&o.enable(28),R.vertexAlphas&&o.enable(29),R.vertexUvs&&o.enable(30),R.vertexTangents&&o.enable(31),R.uvsVertexOnly&&o.enable(32),R.fog&&o.enable(33),S.push(o.mask),o.disableAll(),R.useFog&&o.enable(0),R.flatShading&&o.enable(1),R.logarithmicDepthBuffer&&o.enable(2),R.skinning&&o.enable(3),R.morphTargets&&o.enable(4),R.morphNormals&&o.enable(5),R.morphColors&&o.enable(6),R.premultipliedAlpha&&o.enable(7),R.shadowMapEnabled&&o.enable(8),R.physicallyCorrectLights&&o.enable(9),R.doubleSided&&o.enable(10),R.flipSided&&o.enable(11),R.useDepthPacking&&o.enable(12),R.dithering&&o.enable(13),R.specularIntensityMap&&o.enable(14),R.specularColorMap&&o.enable(15),R.transmission&&o.enable(16),R.transmissionMap&&o.enable(17),R.thicknessMap&&o.enable(18),R.sheen&&o.enable(19),R.sheenColorMap&&o.enable(20),R.sheenRoughnessMap&&o.enable(21),R.decodeVideoTexture&&o.enable(22),R.opaque&&o.enable(23),S.push(o.mask)}(R,S),R.push(a.outputEncoding)),R.push(S.customProgramCacheKey),R.join()},getUniforms:function T(S){const R=v[S.type];let B;return B=R?ph.clone(li[R].uniforms):S.uniforms,B},acquireProgram:function b(S,R){let B;for(let k=0,ie=c.length;k<ie;k++){const pe=c[k];if(pe.cacheKey===R){B=pe,++B.usedTimes;break}}return void 0===B&&(B=new ng(a,R,S,s),c.push(B)),B},releaseProgram:function C(S){if(0==--S.usedTimes){const R=c.indexOf(S);c[R]=c[c.length-1],c.pop(),S.destroy()}},releaseShaderCache:function L(S){l.remove(S)},programs:c,dispose:function F(){l.dispose()}}}function ag(){let a=new WeakMap;return{get:function e(s){let r=a.get(s);return void 0===r&&(r={},a.set(s,r)),r},remove:function t(s){a.delete(s)},update:function n(s,r,o){a.get(s)[r]=o},dispose:function i(){a=new WeakMap}}}function lg(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.material.id!==e.material.id?a.material.id-e.material.id:a.z!==e.z?a.z-e.z:a.id-e.id}function Gh(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.z!==e.z?e.z-a.z:a.id-e.id}function Hh(){const a=[];let e=0;const t=[],n=[],i=[];function r(d,f,p,v,m,g){let y=a[e];return void 0===y?(y={id:d.id,object:d,geometry:f,material:p,groupOrder:v,renderOrder:d.renderOrder,z:m,group:g},a[e]=y):(y.id=d.id,y.object=d,y.geometry=f,y.material=p,y.groupOrder=v,y.renderOrder=d.renderOrder,y.z=m,y.group=g),e++,y}return{opaque:t,transmissive:n,transparent:i,init:function s(){e=0,t.length=0,n.length=0,i.length=0},push:function o(d,f,p,v,m,g){const y=r(d,f,p,v,m,g);p.transmission>0?n.push(y):!0===p.transparent?i.push(y):t.push(y)},unshift:function l(d,f,p,v,m,g){const y=r(d,f,p,v,m,g);p.transmission>0?n.unshift(y):!0===p.transparent?i.unshift(y):t.unshift(y)},finish:function h(){for(let d=e,f=a.length;d<f;d++){const p=a[d];if(null===p.id)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}},sort:function c(d,f){t.length>1&&t.sort(d||lg),n.length>1&&n.sort(f||Gh),i.length>1&&i.sort(f||Gh)}}}function cg(){let a=new WeakMap;return{get:function e(n,i){let s;return!1===a.has(n)?(s=new Hh,a.set(n,[s])):i>=a.get(n).length?(s=new Hh,a.get(n).push(s)):s=a.get(n)[i],s},dispose:function t(){a=new WeakMap}}}function hg(){const a={};return{get:function(e){if(void 0!==a[e.id])return a[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new E,color:new Pe};break;case"SpotLight":t={position:new E,direction:new E,color:new Pe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new E,color:new Pe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new E,skyColor:new Pe,groundColor:new Pe};break;case"RectAreaLight":t={color:new Pe,position:new E,halfWidth:new E,halfHeight:new E}}return a[e.id]=t,t}}}let dg=0;function fg(a,e){return(e.castShadow?1:0)-(a.castShadow?1:0)}function pg(a,e){const t=new hg,n=function ug(){const a={};return{get:function(e){if(void 0!==a[e.id])return a[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne,shadowCameraNear:1,shadowCameraFar:1e3}}return a[e.id]=t,t}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;h<9;h++)i.probe.push(new E);const s=new E,r=new Qe,o=new Qe;return{setup:function l(h,d){let f=0,p=0,v=0;for(let R=0;R<9;R++)i.probe[R].set(0,0,0);let m=0,g=0,y=0,_=0,T=0,b=0,C=0,L=0;h.sort(fg);const F=!0!==d?Math.PI:1;for(let R=0,B=h.length;R<B;R++){const k=h[R],ie=k.color,pe=k.intensity,U=k.distance,K=k.shadow&&k.shadow.map?k.shadow.map.texture:null;if(k.isAmbientLight)f+=ie.r*pe*F,p+=ie.g*pe*F,v+=ie.b*pe*F;else if(k.isLightProbe)for(let j=0;j<9;j++)i.probe[j].addScaledVector(k.sh.coefficients[j],pe);else if(k.isDirectionalLight){const j=t.get(k);if(j.color.copy(k.color).multiplyScalar(k.intensity*F),k.castShadow){const se=k.shadow,oe=n.get(k);oe.shadowBias=se.bias,oe.shadowNormalBias=se.normalBias,oe.shadowRadius=se.radius,oe.shadowMapSize=se.mapSize,i.directionalShadow[m]=oe,i.directionalShadowMap[m]=K,i.directionalShadowMatrix[m]=k.shadow.matrix,b++}i.directional[m]=j,m++}else if(k.isSpotLight){const j=t.get(k);if(j.position.setFromMatrixPosition(k.matrixWorld),j.color.copy(ie).multiplyScalar(pe*F),j.distance=U,j.coneCos=Math.cos(k.angle),j.penumbraCos=Math.cos(k.angle*(1-k.penumbra)),j.decay=k.decay,k.castShadow){const se=k.shadow,oe=n.get(k);oe.shadowBias=se.bias,oe.shadowNormalBias=se.normalBias,oe.shadowRadius=se.radius,oe.shadowMapSize=se.mapSize,i.spotShadow[y]=oe,i.spotShadowMap[y]=K,i.spotShadowMatrix[y]=k.shadow.matrix,L++}i.spot[y]=j,y++}else if(k.isRectAreaLight){const j=t.get(k);j.color.copy(ie).multiplyScalar(pe),j.halfWidth.set(.5*k.width,0,0),j.halfHeight.set(0,.5*k.height,0),i.rectArea[_]=j,_++}else if(k.isPointLight){const j=t.get(k);if(j.color.copy(k.color).multiplyScalar(k.intensity*F),j.distance=k.distance,j.decay=k.decay,k.castShadow){const se=k.shadow,oe=n.get(k);oe.shadowBias=se.bias,oe.shadowNormalBias=se.normalBias,oe.shadowRadius=se.radius,oe.shadowMapSize=se.mapSize,oe.shadowCameraNear=se.camera.near,oe.shadowCameraFar=se.camera.far,i.pointShadow[g]=oe,i.pointShadowMap[g]=K,i.pointShadowMatrix[g]=k.shadow.matrix,C++}i.point[g]=j,g++}else if(k.isHemisphereLight){const j=t.get(k);j.skyColor.copy(k.color).multiplyScalar(pe*F),j.groundColor.copy(k.groundColor).multiplyScalar(pe*F),i.hemi[T]=j,T++}}_>0&&(e.isWebGL2||!0===a.has("OES_texture_float_linear")?(i.rectAreaLTC1=Me.LTC_FLOAT_1,i.rectAreaLTC2=Me.LTC_FLOAT_2):!0===a.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=Me.LTC_HALF_1,i.rectAreaLTC2=Me.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=p,i.ambient[2]=v;const S=i.hash;(S.directionalLength!==m||S.pointLength!==g||S.spotLength!==y||S.rectAreaLength!==_||S.hemiLength!==T||S.numDirectionalShadows!==b||S.numPointShadows!==C||S.numSpotShadows!==L)&&(i.directional.length=m,i.spot.length=y,i.rectArea.length=_,i.point.length=g,i.hemi.length=T,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=C,i.pointShadowMap.length=C,i.spotShadow.length=L,i.spotShadowMap.length=L,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=C,i.spotShadowMatrix.length=L,S.directionalLength=m,S.pointLength=g,S.spotLength=y,S.rectAreaLength=_,S.hemiLength=T,S.numDirectionalShadows=b,S.numPointShadows=C,S.numSpotShadows=L,i.version=dg++)},setupView:function c(h,d){let f=0,p=0,v=0,m=0,g=0;const y=d.matrixWorldInverse;for(let _=0,T=h.length;_<T;_++){const b=h[_];if(b.isDirectionalLight){const C=i.directional[f];C.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(y),f++}else if(b.isSpotLight){const C=i.spot[v];C.position.setFromMatrixPosition(b.matrixWorld),C.position.applyMatrix4(y),C.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(y),v++}else if(b.isRectAreaLight){const C=i.rectArea[m];C.position.setFromMatrixPosition(b.matrixWorld),C.position.applyMatrix4(y),o.identity(),r.copy(b.matrixWorld),r.premultiply(y),o.extractRotation(r),C.halfWidth.set(.5*b.width,0,0),C.halfHeight.set(0,.5*b.height,0),C.halfWidth.applyMatrix4(o),C.halfHeight.applyMatrix4(o),m++}else if(b.isPointLight){const C=i.point[p];C.position.setFromMatrixPosition(b.matrixWorld),C.position.applyMatrix4(y),p++}else if(b.isHemisphereLight){const C=i.hemi[g];C.direction.setFromMatrixPosition(b.matrixWorld),C.direction.transformDirection(y),g++}}},state:i}}function Wh(a,e){const t=new pg(a,e),n=[],i=[];return{init:function s(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:function l(d){t.setup(n,d)},setupLightsView:function c(d){t.setupView(n,d)},pushLight:function r(d){n.push(d)},pushShadow:function o(d){i.push(d)}}}function mg(a,e){let t=new WeakMap;return{get:function n(s,r=0){let o;return!1===t.has(s)?(o=new Wh(a,e),t.set(s,[o])):r>=t.get(s).length?(o=new Wh(a,e),t.get(s).push(o)):o=t.get(s)[r],o},dispose:function i(){t=new WeakMap}}}class Ql extends Bn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=$n,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ec extends Bn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new E,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function xg(a,e,t){let n=new Xl;const i=new ne,s=new ne,r=new Tt,o=new Ql({depthPacking:vs}),l=new ec,c={},h=t.maxTextureSize,d={0:at,1:Zn,2:vt},f=new Li({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ne},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=f.clone();p.defines.HORIZONTAL_PASS=1;const v=new ct;v.setAttribute("position",new an(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new xn(v,f),g=this;function y(b,C){const L=e.update(m);f.defines.VSM_SAMPLES!==b.blurSamples&&(f.defines.VSM_SAMPLES=b.blurSamples,p.defines.VSM_SAMPLES=b.blurSamples,f.needsUpdate=!0,p.needsUpdate=!0),null===b.mapPass&&(b.mapPass=new Kn(i.x,i.y)),f.uniforms.shadow_pass.value=b.map.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,a.setRenderTarget(b.mapPass),a.clear(),a.renderBufferDirect(C,null,L,f,m,null),p.uniforms.shadow_pass.value=b.mapPass.texture,p.uniforms.resolution.value=b.mapSize,p.uniforms.radius.value=b.radius,a.setRenderTarget(b.map),a.clear(),a.renderBufferDirect(C,null,L,p,m,null)}function _(b,C,L,F,S,R){let B=null;const k=!0===L.isPointLight?b.customDistanceMaterial:b.customDepthMaterial;if(B=void 0!==k?k:!0===L.isPointLight?l:o,a.localClippingEnabled&&!0===C.clipShadows&&Array.isArray(C.clippingPlanes)&&0!==C.clippingPlanes.length||C.displacementMap&&0!==C.displacementScale||C.alphaMap&&C.alphaTest>0){const ie=B.uuid,pe=C.uuid;let U=c[ie];void 0===U&&(U={},c[ie]=U);let K=U[pe];void 0===K&&(K=B.clone(),U[pe]=K),B=K}return B.visible=C.visible,B.wireframe=C.wireframe,B.side=3===R?null!==C.shadowSide?C.shadowSide:C.side:null!==C.shadowSide?C.shadowSide:d[C.side],B.alphaMap=C.alphaMap,B.alphaTest=C.alphaTest,B.clipShadows=C.clipShadows,B.clippingPlanes=C.clippingPlanes,B.clipIntersection=C.clipIntersection,B.displacementMap=C.displacementMap,B.displacementScale=C.displacementScale,B.displacementBias=C.displacementBias,B.wireframeLinewidth=C.wireframeLinewidth,B.linewidth=C.linewidth,!0===L.isPointLight&&!0===B.isMeshDistanceMaterial&&(B.referencePosition.setFromMatrixPosition(L.matrixWorld),B.nearDistance=F,B.farDistance=S),B}function T(b,C,L,F,S){if(!1===b.visible)return;if(b.layers.test(C.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&3===S)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,b.matrixWorld);const k=e.update(b),ie=b.material;if(Array.isArray(ie)){const pe=k.groups;for(let U=0,K=pe.length;U<K;U++){const j=pe[U],se=ie[j.materialIndex];if(se&&se.visible){const oe=_(b,se,F,L.near,L.far,S);a.renderBufferDirect(L,null,k,oe,b,j)}}}else if(ie.visible){const pe=_(b,ie,F,L.near,L.far,S);a.renderBufferDirect(L,null,k,pe,b,null)}}const B=b.children;for(let k=0,ie=B.length;k<ie;k++)T(B[k],C,L,F,S)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(b,C,L){if(!1===g.enabled||!1===g.autoUpdate&&!1===g.needsUpdate||0===b.length)return;const F=a.getRenderTarget(),S=a.getActiveCubeFace(),R=a.getActiveMipmapLevel(),B=a.state;B.setBlending(Cn),B.buffers.color.setClear(1,1,1,1),B.buffers.depth.setTest(!0),B.setScissorTest(!1);for(let k=0,ie=b.length;k<ie;k++){const pe=b[k],U=pe.shadow;if(void 0===U){console.warn("THREE.WebGLShadowMap:",pe,"has no shadow.");continue}if(!1===U.autoUpdate&&!1===U.needsUpdate)continue;i.copy(U.mapSize);const K=U.getFrameExtents();i.multiply(K),s.copy(U.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(s.x=Math.floor(h/K.x),i.x=s.x*K.x,U.mapSize.x=s.x),i.y>h&&(s.y=Math.floor(h/K.y),i.y=s.y*K.y,U.mapSize.y=s.y)),null===U.map&&(U.map=new Kn(i.x,i.y,3!==this.type?{minFilter:Zt,magFilter:Zt}:{}),U.map.texture.name=pe.name+".shadowMap",U.camera.updateProjectionMatrix()),a.setRenderTarget(U.map),a.clear();const j=U.getViewportCount();for(let se=0;se<j;se++){const oe=U.getViewport(se);r.set(s.x*oe.x,s.y*oe.y,s.x*oe.z,s.y*oe.w),B.viewport(r),U.updateMatrices(pe,se),n=U.getFrustum(),T(C,L,U.camera,pe,this.type)}!0!==U.isPointLightShadow&&3===this.type&&y(U,L),U.needsUpdate=!1}g.needsUpdate=!1,a.setRenderTarget(F,S,R)}}function yg(a,e,t){const n=t.isWebGL2,o=new function i(){let O=!1;const Se=new Tt;let xe=null;const Ye=new Tt(0,0,0,0);return{setMask:function(De){xe!==De&&!O&&(a.colorMask(De,De,De,De),xe=De)},setLocked:function(De){O=De},setClear:function(De,Je,me,Ke,Rt){!0===Rt&&(De*=Ke,Je*=Ke,me*=Ke),Se.set(De,Je,me,Ke),!1===Ye.equals(Se)&&(a.clearColor(De,Je,me,Ke),Ye.copy(Se))},reset:function(){O=!1,xe=null,Ye.set(-1,0,0,0)}}},l=new function s(){let O=!1,Se=null,xe=null,Ye=null;return{setTest:function(De){De?ke(2929):Q(2929)},setMask:function(De){Se!==De&&!O&&(a.depthMask(De),Se=De)},setFunc:function(De){if(xe!==De){if(De)switch(De){case 0:a.depthFunc(512);break;case 1:a.depthFunc(519);break;case 2:a.depthFunc(513);break;case 3:default:a.depthFunc(515);break;case 4:a.depthFunc(514);break;case 5:a.depthFunc(518);break;case 6:a.depthFunc(516);break;case 7:a.depthFunc(517)}else a.depthFunc(515);xe=De}},setLocked:function(De){O=De},setClear:function(De){Ye!==De&&(a.clearDepth(De),Ye=De)},reset:function(){O=!1,Se=null,xe=null,Ye=null}}},c=new function r(){let O=!1,Se=null,xe=null,Ye=null,De=null,Je=null,me=null,Ke=null,Rt=null;return{setTest:function(It){O||(It?ke(2960):Q(2960))},setMask:function(It){Se!==It&&!O&&(a.stencilMask(It),Se=It)},setFunc:function(It,Tn,ui){(xe!==It||Ye!==Tn||De!==ui)&&(a.stencilFunc(It,Tn,ui),xe=It,Ye=Tn,De=ui)},setOp:function(It,Tn,ui){(Je!==It||me!==Tn||Ke!==ui)&&(a.stencilOp(It,Tn,ui),Je=It,me=Tn,Ke=ui)},setLocked:function(It){O=It},setClear:function(It){Rt!==It&&(a.clearStencil(It),Rt=It)},reset:function(){O=!1,Se=null,xe=null,Ye=null,De=null,Je=null,me=null,Ke=null,Rt=null}}};let h={},d={},f=new WeakMap,p=[],v=null,m=!1,g=null,y=null,_=null,T=null,b=null,C=null,L=null,F=!1,S=null,R=null,B=null,k=null,ie=null;const pe=a.getParameter(35661);let U=!1,K=0;const j=a.getParameter(7938);-1!==j.indexOf("WebGL")?(K=parseFloat(/^WebGL (\d)/.exec(j)[1]),U=K>=1):-1!==j.indexOf("OpenGL ES")&&(K=parseFloat(/^OpenGL ES (\d)/.exec(j)[1]),U=K>=2);let se=null,oe={};const q=a.getParameter(3088),J=a.getParameter(2978),he=(new Tt).fromArray(q),le=(new Tt).fromArray(J);function ye(O,Se,xe){const Ye=new Uint8Array(4),De=a.createTexture();a.bindTexture(O,De),a.texParameteri(O,10241,9728),a.texParameteri(O,10240,9728);for(let Je=0;Je<xe;Je++)a.texImage2D(Se+Je,0,6408,1,1,0,6408,5121,Ye);return De}const ze={};function ke(O){!0!==h[O]&&(a.enable(O),h[O]=!0)}function Q(O){!1!==h[O]&&(a.disable(O),h[O]=!1)}ze[3553]=ye(3553,3553,1),ze[34067]=ye(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ke(2929),l.setFunc(3),ve(!1),Be(1),ke(2884),re(Cn);const be={100:32774,101:32778,102:32779};if(n)be[103]=32775,be[104]=32776;else{const O=e.get("EXT_blend_minmax");null!==O&&(be[103]=O.MIN_EXT,be[104]=O.MAX_EXT)}const dt={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function re(O,Se,xe,Ye,De,Je,me,Ke){if(O!==Cn){if(!1===m&&(ke(3042),m=!0),5===O)De=De||Se,Je=Je||xe,me=me||Ye,(Se!==y||De!==b)&&(a.blendEquationSeparate(be[Se],be[De]),y=Se,b=De),(xe!==_||Ye!==T||Je!==C||me!==L)&&(a.blendFuncSeparate(dt[xe],dt[Ye],dt[Je],dt[me]),_=xe,T=Ye,C=Je,L=me),g=O,F=null;else if(O!==g||Ke!==F){if((100!==y||100!==b)&&(a.blendEquation(32774),y=100,b=100),Ke)switch(O){case 1:a.blendFuncSeparate(1,771,1,771);break;case 2:a.blendFunc(1,1);break;case 3:a.blendFuncSeparate(0,769,0,1);break;case 4:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",O)}else switch(O){case 1:a.blendFuncSeparate(770,771,1,771);break;case 2:a.blendFunc(770,1);break;case 3:a.blendFuncSeparate(0,769,0,1);break;case 4:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",O)}_=null,T=null,C=null,L=null,g=O,F=Ke}}else!0===m&&(Q(3042),m=!1)}function ve(O){S!==O&&(a.frontFace(O?2304:2305),S=O)}function Be(O){0!==O?(ke(2884),O!==R&&a.cullFace(1===O?1029:2===O?1028:1032)):Q(2884),R=O}function st(O,Se,xe){O?(ke(32823),(k!==Se||ie!==xe)&&(a.polygonOffset(Se,xe),k=Se,ie=xe)):Q(32823)}function We(O){void 0===O&&(O=33984+pe-1),se!==O&&(a.activeTexture(O),se=O)}return{buffers:{color:o,depth:l,stencil:c},enable:ke,disable:Q,bindFramebuffer:function Dt(O,Se){return d[O]!==Se&&(a.bindFramebuffer(O,Se),d[O]=Se,n&&(36009===O&&(d[36160]=Se),36160===O&&(d[36009]=Se)),!0)},drawBuffers:function it(O,Se){let xe=p,Ye=!1;if(O)if(xe=f.get(Se),void 0===xe&&(xe=[],f.set(Se,xe)),O.isWebGLMultipleRenderTargets){const De=O.texture;if(xe.length!==De.length||36064!==xe[0]){for(let Je=0,me=De.length;Je<me;Je++)xe[Je]=36064+Je;xe.length=De.length,Ye=!0}}else 36064!==xe[0]&&(xe[0]=36064,Ye=!0);else 1029!==xe[0]&&(xe[0]=1029,Ye=!0);Ye&&(t.isWebGL2?a.drawBuffers(xe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(xe))},useProgram:function tt(O){return v!==O&&(a.useProgram(O),v=O,!0)},setBlending:re,setMaterial:function ee(O,Se){O.side===vt?Q(2884):ke(2884);let xe=O.side===at;Se&&(xe=!xe),ve(xe),1===O.blending&&!1===O.transparent?re(Cn):re(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha),l.setFunc(O.depthFunc),l.setTest(O.depthTest),l.setMask(O.depthWrite),o.setMask(O.colorWrite);const Ye=O.stencilWrite;c.setTest(Ye),Ye&&(c.setMask(O.stencilWriteMask),c.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),c.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),st(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),!0===O.alphaToCoverage?ke(32926):Q(32926)},setFlipSided:ve,setCullFace:Be,setLineWidth:function Ae(O){O!==B&&(U&&a.lineWidth(O),B=O)},setPolygonOffset:st,setScissorTest:function qe(O){O?ke(3089):Q(3089)},activeTexture:We,bindTexture:function Gt(O,Se){null===se&&We();let xe=oe[se];void 0===xe&&(xe={type:void 0,texture:void 0},oe[se]=xe),(xe.type!==O||xe.texture!==Se)&&(a.bindTexture(O,Se||ze[O]),xe.type=O,xe.texture=Se)},unbindTexture:function Bt(){const O=oe[se];void 0!==O&&void 0!==O.type&&(a.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)},compressedTexImage2D:function I(){try{a.compressedTexImage2D.apply(a,arguments)}catch(O){console.error("THREE.WebGLState:",O)}},texImage2D:function $e(){try{a.texImage2D.apply(a,arguments)}catch(O){console.error("THREE.WebGLState:",O)}},texImage3D:function Z(){try{a.texImage3D.apply(a,arguments)}catch(O){console.error("THREE.WebGLState:",O)}},texStorage2D:function ge(){try{a.texStorage2D.apply(a,arguments)}catch(O){console.error("THREE.WebGLState:",O)}},texStorage3D:function Ce(){try{a.texStorage3D.apply(a,arguments)}catch(O){console.error("THREE.WebGLState:",O)}},texSubImage2D:function A(){try{a.texSubImage2D.apply(a,arguments)}catch(O){console.error("THREE.WebGLState:",O)}},texSubImage3D:function Y(){try{a.texSubImage3D.apply(a,arguments)}catch(O){console.error("THREE.WebGLState:",O)}},compressedTexSubImage2D:function ue(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(O){console.error("THREE.WebGLState:",O)}},scissor:function Ue(O){!1===he.equals(O)&&(a.scissor(O.x,O.y,O.z,O.w),he.copy(O))},viewport:function Ne(O){!1===le.equals(O)&&(a.viewport(O.x,O.y,O.z,O.w),le.copy(O))},reset:function Ie(){a.disable(3042),a.disable(2884),a.disable(2929),a.disable(32823),a.disable(3089),a.disable(2960),a.disable(32926),a.blendEquation(32774),a.blendFunc(1,0),a.blendFuncSeparate(1,0,1,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(513),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(519,0,4294967295),a.stencilOp(7680,7680,7680),a.clearStencil(0),a.cullFace(1029),a.frontFace(2305),a.polygonOffset(0,0),a.activeTexture(33984),a.bindFramebuffer(36160,null),!0===n&&(a.bindFramebuffer(36009,null),a.bindFramebuffer(36008,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),h={},se=null,oe={},d={},f=new WeakMap,p=[],v=null,m=!1,g=null,y=null,_=null,T=null,b=null,C=null,L=null,F=!1,S=null,R=null,B=null,k=null,ie=null,he.set(0,0,a.canvas.width,a.canvas.height),le.set(0,0,a.canvas.width,a.canvas.height),o.reset(),l.reset(),c.reset()}}}function _g(a,e,t,n,i,s,r){const o=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,h=i.maxTextureSize,d=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let m;const g=new WeakMap;let y=!1;try{y=typeof OffscreenCanvas<"u"&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch{}function _(I,A){return y?new OffscreenCanvas(I,A):Ms("canvas")}function T(I,A,Y,ue){let ge=1;if((I.width>ue||I.height>ue)&&(ge=ue/Math.max(I.width,I.height)),ge<1||!0===A){if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap){const Ce=A?ao:Math.floor,$e=Ce(ge*I.width),Z=Ce(ge*I.height);void 0===m&&(m=_($e,Z));const Ue=Y?_($e,Z):m;return Ue.width=$e,Ue.height=Z,Ue.getContext("2d").drawImage(I,0,0,$e,Z),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+I.width+"x"+I.height+") to ("+$e+"x"+Z+")."),Ue}return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+I.width+"x"+I.height+")."),I}return I}function b(I){return oo(I.width)&&oo(I.height)}function L(I,A){return I.generateMipmaps&&A&&I.minFilter!==Zt&&I.minFilter!==Ft}function F(I){a.generateMipmap(I)}function S(I,A,Y,ue,ge=!1){if(!1===o)return A;if(null!==I){if(void 0!==a[I])return a[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let Ce=A;return 6403===A&&(5126===Y&&(Ce=33326),5131===Y&&(Ce=33325),5121===Y&&(Ce=33321)),33319===A&&(5126===Y&&(Ce=33328),5131===Y&&(Ce=33327),5121===Y&&(Ce=33323)),6408===A&&(5126===Y&&(Ce=34836),5131===Y&&(Ce=34842),5121===Y&&(Ce=ue===Mt&&!1===ge?35907:32856),32819===Y&&(Ce=32854),32820===Y&&(Ce=32855)),(33325===Ce||33326===Ce||33327===Ce||33328===Ce||34842===Ce||34836===Ce)&&e.get("EXT_color_buffer_float"),Ce}function R(I,A,Y){return!0===L(I,Y)||I.isFramebufferTexture&&I.minFilter!==Zt&&I.minFilter!==Ft?Math.log2(Math.max(A.width,A.height))+1:void 0!==I.mipmaps&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?A.mipmaps.length:1}function B(I){return I===Zt||I===Xs||I===Re?9728:9729}function k(I){const A=I.target;A.removeEventListener("dispose",k),function pe(I){const A=n.get(I);if(void 0===A.__webglInit)return;const Y=I.source,ue=g.get(Y);if(ue){const ge=ue[A.__cacheKey];ge.usedTimes--,0===ge.usedTimes&&U(I),0===Object.keys(ue).length&&g.delete(Y)}n.remove(I)}(A),A.isVideoTexture&&v.delete(A)}function ie(I){const A=I.target;A.removeEventListener("dispose",ie),function K(I){const A=I.texture,Y=n.get(I),ue=n.get(A);if(void 0!==ue.__webglTexture&&(a.deleteTexture(ue.__webglTexture),r.memory.textures--),I.depthTexture&&I.depthTexture.dispose(),I.isWebGLCubeRenderTarget)for(let ge=0;ge<6;ge++)a.deleteFramebuffer(Y.__webglFramebuffer[ge]),Y.__webglDepthbuffer&&a.deleteRenderbuffer(Y.__webglDepthbuffer[ge]);else{if(a.deleteFramebuffer(Y.__webglFramebuffer),Y.__webglDepthbuffer&&a.deleteRenderbuffer(Y.__webglDepthbuffer),Y.__webglMultisampledFramebuffer&&a.deleteFramebuffer(Y.__webglMultisampledFramebuffer),Y.__webglColorRenderbuffer)for(let ge=0;ge<Y.__webglColorRenderbuffer.length;ge++)Y.__webglColorRenderbuffer[ge]&&a.deleteRenderbuffer(Y.__webglColorRenderbuffer[ge]);Y.__webglDepthRenderbuffer&&a.deleteRenderbuffer(Y.__webglDepthRenderbuffer)}if(I.isWebGLMultipleRenderTargets)for(let ge=0,Ce=A.length;ge<Ce;ge++){const $e=n.get(A[ge]);$e.__webglTexture&&(a.deleteTexture($e.__webglTexture),r.memory.textures--),n.remove(A[ge])}n.remove(A),n.remove(I)}(A)}function U(I){const A=n.get(I);a.deleteTexture(A.__webglTexture),delete g.get(I.source)[A.__cacheKey],r.memory.textures--}let j=0;function J(I,A){const Y=n.get(I);if(I.isVideoTexture&&function Gt(I){const A=r.render.frame;v.get(I)!==A&&(v.set(I,A),I.update())}(I),!1===I.isRenderTargetTexture&&I.version>0&&Y.__version!==I.version){const ue=I.image;if(null===ue)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==ue.complete)return void it(Y,I,A);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.activeTexture(33984+A),t.bindTexture(3553,Y.__webglTexture)}const ze={[fs]:10497,[dn]:33071,[Fi]:33648},ke={[Zt]:9728,[Xs]:9984,[Re]:9986,[Ft]:9729,[Ot]:9985,[mn]:9987};function Q(I,A,Y){if(Y?(a.texParameteri(I,10242,ze[A.wrapS]),a.texParameteri(I,10243,ze[A.wrapT]),(32879===I||35866===I)&&a.texParameteri(I,32882,ze[A.wrapR]),a.texParameteri(I,10240,ke[A.magFilter]),a.texParameteri(I,10241,ke[A.minFilter])):(a.texParameteri(I,10242,33071),a.texParameteri(I,10243,33071),(32879===I||35866===I)&&a.texParameteri(I,32882,33071),(A.wrapS!==dn||A.wrapT!==dn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(I,10240,B(A.magFilter)),a.texParameteri(I,10241,B(A.minFilter)),A.minFilter!==Zt&&A.minFilter!==Ft&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const ue=e.get("EXT_texture_filter_anisotropic");if(A.type===Pn&&!1===e.has("OES_texture_float_linear")||!1===o&&A.type===zi&&!1===e.has("OES_texture_half_float_linear"))return;(A.anisotropy>1||n.get(A).__currentAnisotropy)&&(a.texParameterf(I,ue.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,i.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy)}}function Dt(I,A){let Y=!1;void 0===I.__webglInit&&(I.__webglInit=!0,A.addEventListener("dispose",k));const ue=A.source;let ge=g.get(ue);void 0===ge&&(ge={},g.set(ue,ge));const Ce=function q(I){const A=[];return A.push(I.wrapS),A.push(I.wrapT),A.push(I.magFilter),A.push(I.minFilter),A.push(I.anisotropy),A.push(I.internalFormat),A.push(I.format),A.push(I.type),A.push(I.generateMipmaps),A.push(I.premultiplyAlpha),A.push(I.flipY),A.push(I.unpackAlignment),A.push(I.encoding),A.join()}(A);if(Ce!==I.__cacheKey){void 0===ge[Ce]&&(ge[Ce]={texture:a.createTexture(),usedTimes:0},r.memory.textures++,Y=!0),ge[Ce].usedTimes++;const $e=ge[I.__cacheKey];void 0!==$e&&(ge[I.__cacheKey].usedTimes--,0===$e.usedTimes&&U(A)),I.__cacheKey=Ce,I.__webglTexture=ge[Ce].texture}return Y}function it(I,A,Y){let ue=3553;A.isDataArrayTexture&&(ue=35866),A.isData3DTexture&&(ue=32879);const ge=Dt(I,A),Ce=A.source;if(t.activeTexture(33984+Y),t.bindTexture(ue,I.__webglTexture),Ce.version!==Ce.__currentVersion||!0===ge){a.pixelStorei(37440,A.flipY),a.pixelStorei(37441,A.premultiplyAlpha),a.pixelStorei(3317,A.unpackAlignment),a.pixelStorei(37443,0);const $e=function C(I){return!o&&(I.wrapS!==dn||I.wrapT!==dn||I.minFilter!==Zt&&I.minFilter!==Ft)}(A)&&!1===b(A.image);let Z=T(A.image,$e,!1,h);Z=Bt(A,Z);const Ue=b(Z)||o,Ne=s.convert(A.format,A.encoding);let Se,Ie=s.convert(A.type),O=S(A.internalFormat,Ne,Ie,A.encoding,A.isVideoTexture);Q(ue,A,Ue);const xe=A.mipmaps,Ye=o&&!0!==A.isVideoTexture,De=void 0===Ce.__currentVersion||!0===ge,Je=R(A,Z,Ue);if(A.isDepthTexture)O=6402,o?O=A.type===Pn?36012:A.type===En?33190:A.type===vi?35056:33189:A.type===Pn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Bi&&6402===O&&1012!==A.type&&A.type!==En&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=En,Ie=s.convert(A.type)),A.format===ki&&6402===O&&(O=34041,A.type!==vi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=vi,Ie=s.convert(A.type))),De&&(Ye?t.texStorage2D(3553,1,O,Z.width,Z.height):t.texImage2D(3553,0,O,Z.width,Z.height,0,Ne,Ie,null));else if(A.isDataTexture)if(xe.length>0&&Ue){Ye&&De&&t.texStorage2D(3553,Je,O,xe[0].width,xe[0].height);for(let me=0,Ke=xe.length;me<Ke;me++)Se=xe[me],Ye?t.texSubImage2D(3553,me,0,0,Se.width,Se.height,Ne,Ie,Se.data):t.texImage2D(3553,me,O,Se.width,Se.height,0,Ne,Ie,Se.data);A.generateMipmaps=!1}else Ye?(De&&t.texStorage2D(3553,Je,O,Z.width,Z.height),t.texSubImage2D(3553,0,0,0,Z.width,Z.height,Ne,Ie,Z.data)):t.texImage2D(3553,0,O,Z.width,Z.height,0,Ne,Ie,Z.data);else if(A.isCompressedTexture){Ye&&De&&t.texStorage2D(3553,Je,O,xe[0].width,xe[0].height);for(let me=0,Ke=xe.length;me<Ke;me++)Se=xe[me],A.format!==Ln?null!==Ne?Ye?t.compressedTexSubImage2D(3553,me,0,0,Se.width,Se.height,Ne,Se.data):t.compressedTexImage2D(3553,me,O,Se.width,Se.height,0,Se.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ye?t.texSubImage2D(3553,me,0,0,Se.width,Se.height,Ne,Ie,Se.data):t.texImage2D(3553,me,O,Se.width,Se.height,0,Ne,Ie,Se.data)}else if(A.isDataArrayTexture)Ye?(De&&t.texStorage3D(35866,Je,O,Z.width,Z.height,Z.depth),t.texSubImage3D(35866,0,0,0,0,Z.width,Z.height,Z.depth,Ne,Ie,Z.data)):t.texImage3D(35866,0,O,Z.width,Z.height,Z.depth,0,Ne,Ie,Z.data);else if(A.isData3DTexture)Ye?(De&&t.texStorage3D(32879,Je,O,Z.width,Z.height,Z.depth),t.texSubImage3D(32879,0,0,0,0,Z.width,Z.height,Z.depth,Ne,Ie,Z.data)):t.texImage3D(32879,0,O,Z.width,Z.height,Z.depth,0,Ne,Ie,Z.data);else if(A.isFramebufferTexture){if(De)if(Ye)t.texStorage2D(3553,Je,O,Z.width,Z.height);else{let me=Z.width,Ke=Z.height;for(let Rt=0;Rt<Je;Rt++)t.texImage2D(3553,Rt,O,me,Ke,0,Ne,Ie,null),me>>=1,Ke>>=1}}else if(xe.length>0&&Ue){Ye&&De&&t.texStorage2D(3553,Je,O,xe[0].width,xe[0].height);for(let me=0,Ke=xe.length;me<Ke;me++)Se=xe[me],Ye?t.texSubImage2D(3553,me,0,0,Ne,Ie,Se):t.texImage2D(3553,me,O,Ne,Ie,Se);A.generateMipmaps=!1}else Ye?(De&&t.texStorage2D(3553,Je,O,Z.width,Z.height),t.texSubImage2D(3553,0,0,0,Ne,Ie,Z)):t.texImage2D(3553,0,O,Ne,Ie,Z);L(A,Ue)&&F(ue),Ce.__currentVersion=Ce.version,A.onUpdate&&A.onUpdate(A)}I.__version=A.version}function be(I,A,Y,ue,ge){const Ce=s.convert(Y.format,Y.encoding),$e=s.convert(Y.type),Z=S(Y.internalFormat,Ce,$e,Y.encoding);n.get(A).__hasExternalTextures||(32879===ge||35866===ge?t.texImage3D(ge,0,Z,A.width,A.height,A.depth,0,Ce,$e,null):t.texImage2D(ge,0,Z,A.width,A.height,0,Ce,$e,null)),t.bindFramebuffer(36160,I),We(A)?f.framebufferTexture2DMultisampleEXT(36160,ue,ge,n.get(Y).__webglTexture,0,qe(A)):a.framebufferTexture2D(36160,ue,ge,n.get(Y).__webglTexture,0),t.bindFramebuffer(36160,null)}function dt(I,A,Y){if(a.bindRenderbuffer(36161,I),A.depthBuffer&&!A.stencilBuffer){let ue=33189;if(Y||We(A)){const ge=A.depthTexture;ge&&ge.isDepthTexture&&(ge.type===Pn?ue=36012:ge.type===En&&(ue=33190));const Ce=qe(A);We(A)?f.renderbufferStorageMultisampleEXT(36161,Ce,ue,A.width,A.height):a.renderbufferStorageMultisample(36161,Ce,ue,A.width,A.height)}else a.renderbufferStorage(36161,ue,A.width,A.height);a.framebufferRenderbuffer(36160,36096,36161,I)}else if(A.depthBuffer&&A.stencilBuffer){const ue=qe(A);Y&&!1===We(A)?a.renderbufferStorageMultisample(36161,ue,35056,A.width,A.height):We(A)?f.renderbufferStorageMultisampleEXT(36161,ue,35056,A.width,A.height):a.renderbufferStorage(36161,34041,A.width,A.height),a.framebufferRenderbuffer(36160,33306,36161,I)}else{const ue=!0===A.isWebGLMultipleRenderTargets?A.texture:[A.texture];for(let ge=0;ge<ue.length;ge++){const Ce=ue[ge],$e=s.convert(Ce.format,Ce.encoding),Z=s.convert(Ce.type),Ue=S(Ce.internalFormat,$e,Z,Ce.encoding),Ne=qe(A);Y&&!1===We(A)?a.renderbufferStorageMultisample(36161,Ne,Ue,A.width,A.height):We(A)?f.renderbufferStorageMultisampleEXT(36161,Ne,Ue,A.width,A.height):a.renderbufferStorage(36161,Ue,A.width,A.height)}}a.bindRenderbuffer(36161,null)}function ee(I){const A=n.get(I),Y=!0===I.isWebGLCubeRenderTarget;if(I.depthTexture&&!A.__autoAllocateDepthBuffer){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");!function re(I,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,I),!A.depthTexture||!A.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),J(A.depthTexture,0);const ue=n.get(A.depthTexture).__webglTexture,ge=qe(A);if(A.depthTexture.format===Bi)We(A)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,ue,0,ge):a.framebufferTexture2D(36160,36096,3553,ue,0);else{if(A.depthTexture.format!==ki)throw new Error("Unknown depthTexture format");We(A)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,ue,0,ge):a.framebufferTexture2D(36160,33306,3553,ue,0)}}(A.__webglFramebuffer,I)}else if(Y){A.__webglDepthbuffer=[];for(let ue=0;ue<6;ue++)t.bindFramebuffer(36160,A.__webglFramebuffer[ue]),A.__webglDepthbuffer[ue]=a.createRenderbuffer(),dt(A.__webglDepthbuffer[ue],I,!1)}else t.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=a.createRenderbuffer(),dt(A.__webglDepthbuffer,I,!1);t.bindFramebuffer(36160,null)}function qe(I){return Math.min(d,I.samples)}function We(I){const A=n.get(I);return o&&I.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==A.__useRenderToTexture}function Bt(I,A){const Y=I.encoding,ue=I.format,ge=I.type;return!0===I.isCompressedTexture||!0===I.isVideoTexture||1035===I.format||Y!==ri&&(Y===Mt?!1===o?!0===e.has("EXT_sRGB")&&ue===Ln?(I.format=1035,I.minFilter=Ft,I.generateMipmaps=!1):A=zl.sRGBToLinear(A):(ue!==Ln||ge!==ni)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",Y)),A}this.allocateTextureUnit=function oe(){const I=j;return I>=l&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+l),j+=1,I},this.resetTextureUnits=function se(){j=0},this.setTexture2D=J,this.setTexture2DArray=function he(I,A){const Y=n.get(I);I.version>0&&Y.__version!==I.version?it(Y,I,A):(t.activeTexture(33984+A),t.bindTexture(35866,Y.__webglTexture))},this.setTexture3D=function le(I,A){const Y=n.get(I);I.version>0&&Y.__version!==I.version?it(Y,I,A):(t.activeTexture(33984+A),t.bindTexture(32879,Y.__webglTexture))},this.setTextureCube=function ye(I,A){const Y=n.get(I);I.version>0&&Y.__version!==I.version?function tt(I,A,Y){if(6!==A.image.length)return;const ue=Dt(I,A),ge=A.source;if(t.activeTexture(33984+Y),t.bindTexture(34067,I.__webglTexture),ge.version!==ge.__currentVersion||!0===ue){a.pixelStorei(37440,A.flipY),a.pixelStorei(37441,A.premultiplyAlpha),a.pixelStorei(3317,A.unpackAlignment),a.pixelStorei(37443,0);const Ce=A.isCompressedTexture||A.image[0].isCompressedTexture,$e=A.image[0]&&A.image[0].isDataTexture,Z=[];for(let me=0;me<6;me++)Z[me]=Ce||$e?$e?A.image[me].image:A.image[me]:T(A.image[me],!1,!0,c),Z[me]=Bt(A,Z[me]);const Ue=Z[0],Ne=b(Ue)||o,Ie=s.convert(A.format,A.encoding),O=s.convert(A.type),Se=S(A.internalFormat,Ie,O,A.encoding),xe=o&&!0!==A.isVideoTexture,Ye=void 0===ge.__currentVersion||!0===ue;let Je,De=R(A,Ue,Ne);if(Q(34067,A,Ne),Ce){xe&&Ye&&t.texStorage2D(34067,De,Se,Ue.width,Ue.height);for(let me=0;me<6;me++){Je=Z[me].mipmaps;for(let Ke=0;Ke<Je.length;Ke++){const Rt=Je[Ke];A.format!==Ln?null!==Ie?xe?t.compressedTexSubImage2D(34069+me,Ke,0,0,Rt.width,Rt.height,Ie,Rt.data):t.compressedTexImage2D(34069+me,Ke,Se,Rt.width,Rt.height,0,Rt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):xe?t.texSubImage2D(34069+me,Ke,0,0,Rt.width,Rt.height,Ie,O,Rt.data):t.texImage2D(34069+me,Ke,Se,Rt.width,Rt.height,0,Ie,O,Rt.data)}}}else{Je=A.mipmaps,xe&&Ye&&(Je.length>0&&De++,t.texStorage2D(34067,De,Se,Z[0].width,Z[0].height));for(let me=0;me<6;me++)if($e){xe?t.texSubImage2D(34069+me,0,0,0,Z[me].width,Z[me].height,Ie,O,Z[me].data):t.texImage2D(34069+me,0,Se,Z[me].width,Z[me].height,0,Ie,O,Z[me].data);for(let Ke=0;Ke<Je.length;Ke++){const It=Je[Ke].image[me].image;xe?t.texSubImage2D(34069+me,Ke+1,0,0,It.width,It.height,Ie,O,It.data):t.texImage2D(34069+me,Ke+1,Se,It.width,It.height,0,Ie,O,It.data)}}else{xe?t.texSubImage2D(34069+me,0,0,0,Ie,O,Z[me]):t.texImage2D(34069+me,0,Se,Ie,O,Z[me]);for(let Ke=0;Ke<Je.length;Ke++){const Rt=Je[Ke];xe?t.texSubImage2D(34069+me,Ke+1,0,0,Ie,O,Rt.image[me]):t.texImage2D(34069+me,Ke+1,Se,Ie,O,Rt.image[me])}}}L(A,Ne)&&F(34067),ge.__currentVersion=ge.version,A.onUpdate&&A.onUpdate(A)}I.__version=A.version}(Y,I,A):(t.activeTexture(33984+A),t.bindTexture(34067,Y.__webglTexture))},this.rebindTextures=function ve(I,A,Y){const ue=n.get(I);void 0!==A&&be(ue.__webglFramebuffer,I,I.texture,36064,3553),void 0!==Y&&ee(I)},this.setupRenderTarget=function Be(I){const A=I.texture,Y=n.get(I),ue=n.get(A);I.addEventListener("dispose",ie),!0!==I.isWebGLMultipleRenderTargets&&(void 0===ue.__webglTexture&&(ue.__webglTexture=a.createTexture()),ue.__version=A.version,r.memory.textures++);const ge=!0===I.isWebGLCubeRenderTarget,Ce=!0===I.isWebGLMultipleRenderTargets,$e=b(I)||o;if(ge){Y.__webglFramebuffer=[];for(let Z=0;Z<6;Z++)Y.__webglFramebuffer[Z]=a.createFramebuffer()}else{if(Y.__webglFramebuffer=a.createFramebuffer(),Ce)if(i.drawBuffers){const Z=I.texture;for(let Ue=0,Ne=Z.length;Ue<Ne;Ue++){const Ie=n.get(Z[Ue]);void 0===Ie.__webglTexture&&(Ie.__webglTexture=a.createTexture(),r.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&I.samples>0&&!1===We(I)){const Z=Ce?A:[A];Y.__webglMultisampledFramebuffer=a.createFramebuffer(),Y.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,Y.__webglMultisampledFramebuffer);for(let Ue=0;Ue<Z.length;Ue++){const Ne=Z[Ue];Y.__webglColorRenderbuffer[Ue]=a.createRenderbuffer(),a.bindRenderbuffer(36161,Y.__webglColorRenderbuffer[Ue]);const Ie=s.convert(Ne.format,Ne.encoding),O=s.convert(Ne.type),Se=S(Ne.internalFormat,Ie,O,Ne.encoding),xe=qe(I);a.renderbufferStorageMultisample(36161,xe,Se,I.width,I.height),a.framebufferRenderbuffer(36160,36064+Ue,36161,Y.__webglColorRenderbuffer[Ue])}a.bindRenderbuffer(36161,null),I.depthBuffer&&(Y.__webglDepthRenderbuffer=a.createRenderbuffer(),dt(Y.__webglDepthRenderbuffer,I,!0)),t.bindFramebuffer(36160,null)}}if(ge){t.bindTexture(34067,ue.__webglTexture),Q(34067,A,$e);for(let Z=0;Z<6;Z++)be(Y.__webglFramebuffer[Z],I,A,36064,34069+Z);L(A,$e)&&F(34067),t.unbindTexture()}else if(Ce){const Z=I.texture;for(let Ue=0,Ne=Z.length;Ue<Ne;Ue++){const Ie=Z[Ue],O=n.get(Ie);t.bindTexture(3553,O.__webglTexture),Q(3553,Ie,$e),be(Y.__webglFramebuffer,I,Ie,36064+Ue,3553),L(Ie,$e)&&F(3553)}t.unbindTexture()}else{let Z=3553;(I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(o?Z=I.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Z,ue.__webglTexture),Q(Z,A,$e),be(Y.__webglFramebuffer,I,A,36064,Z),L(A,$e)&&F(Z),t.unbindTexture()}I.depthBuffer&&ee(I)},this.updateRenderTargetMipmap=function Ae(I){const A=b(I)||o,Y=!0===I.isWebGLMultipleRenderTargets?I.texture:[I.texture];for(let ue=0,ge=Y.length;ue<ge;ue++){const Ce=Y[ue];if(L(Ce,A)){const $e=I.isWebGLCubeRenderTarget?34067:3553,Z=n.get(Ce).__webglTexture;t.bindTexture($e,Z),F($e),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function st(I){if(o&&I.samples>0&&!1===We(I)){const A=I.isWebGLMultipleRenderTargets?I.texture:[I.texture],Y=I.width,ue=I.height;let ge=16384;const Ce=[],$e=I.stencilBuffer?33306:36096,Z=n.get(I),Ue=!0===I.isWebGLMultipleRenderTargets;if(Ue)for(let Ne=0;Ne<A.length;Ne++)t.bindFramebuffer(36160,Z.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064+Ne,36161,null),t.bindFramebuffer(36160,Z.__webglFramebuffer),a.framebufferTexture2D(36009,36064+Ne,3553,null,0);t.bindFramebuffer(36008,Z.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Z.__webglFramebuffer);for(let Ne=0;Ne<A.length;Ne++){Ce.push(36064+Ne),I.depthBuffer&&Ce.push($e);const Ie=void 0!==Z.__ignoreDepthValues&&Z.__ignoreDepthValues;if(!1===Ie&&(I.depthBuffer&&(ge|=256),I.stencilBuffer&&(ge|=1024)),Ue&&a.framebufferRenderbuffer(36008,36064,36161,Z.__webglColorRenderbuffer[Ne]),!0===Ie&&(a.invalidateFramebuffer(36008,[$e]),a.invalidateFramebuffer(36009,[$e])),Ue){const O=n.get(A[Ne]).__webglTexture;a.framebufferTexture2D(36009,36064,3553,O,0)}a.blitFramebuffer(0,0,Y,ue,0,0,Y,ue,ge,9728),p&&a.invalidateFramebuffer(36008,Ce)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),Ue)for(let Ne=0;Ne<A.length;Ne++){t.bindFramebuffer(36160,Z.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064+Ne,36161,Z.__webglColorRenderbuffer[Ne]);const Ie=n.get(A[Ne]).__webglTexture;t.bindFramebuffer(36160,Z.__webglFramebuffer),a.framebufferTexture2D(36009,36064+Ne,3553,Ie,0)}t.bindFramebuffer(36009,Z.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=ee,this.setupFrameBufferTexture=be,this.useMultisampledRTT=We}function Mg(a,e,t){const n=t.isWebGL2;return{convert:function i(s,r=null){let o;if(s===ni)return 5121;if(1017===s)return 32819;if(1018===s)return 32820;if(1010===s)return 5120;if(1011===s)return 5122;if(1012===s)return 5123;if(1013===s)return 5124;if(s===En)return 5125;if(s===Pn)return 5126;if(s===zi)return n?5131:(o=e.get("OES_texture_half_float"),null!==o?o.HALF_FLOAT_OES:null);if(1021===s)return 6406;if(s===Ln)return 6408;if(s===qr)return 6409;if(1025===s)return 6410;if(s===Bi)return 6402;if(s===ki)return 34041;if(s===jo)return 6403;if(1022===s)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(1035===s)return o=e.get("EXT_sRGB"),null!==o?o.SRGB_ALPHA_EXT:null;if(1029===s)return 36244;if(s===Yr)return 33319;if(1031===s)return 33320;if(1033===s)return 36249;if(33776===s||33777===s||33778===s||33779===s)if(r===Mt){if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===o)return null;if(33776===s)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===s)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===s)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===s)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(o=e.get("WEBGL_compressed_texture_s3tc"),null===o)return null;if(33776===s)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===s)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===s)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===s)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===s||35841===s||35842===s||35843===s){if(o=e.get("WEBGL_compressed_texture_pvrtc"),null===o)return null;if(35840===s)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===s)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===s)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===s)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===s)return o=e.get("WEBGL_compressed_texture_etc1"),null!==o?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===s||37496===s){if(o=e.get("WEBGL_compressed_texture_etc"),null===o)return null;if(37492===s)return r===Mt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(37496===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}if(37808===s||37809===s||37810===s||37811===s||37812===s||37813===s||37814===s||37815===s||37816===s||37817===s||37818===s||37819===s||37820===s||37821===s){if(o=e.get("WEBGL_compressed_texture_astc"),null===o)return null;if(37808===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===s)return r===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===s){if(o=e.get("EXT_texture_compression_bptc"),null===o)return null;if(36492===s)return r===Mt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}return s===vi?n?34042:(o=e.get("WEBGL_depth_texture"),null!==o?o.UNSIGNED_INT_24_8_WEBGL:null):void 0!==a[s]?a[s]:null}}}class bg extends pn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Sr extends Fe{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Sg={type:"move"};class tc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Sr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Sr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new E,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new E),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Sr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new E,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new E),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,r=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(c&&e.hand){r=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,n);if(void 0===c.joints[m.jointName]){const _=new Sr;_.matrixAutoUpdate=!1,_.visible=!1,c.joints[m.jointName]=_,c.add(_)}const y=c.joints[m.jointName];null!==g&&(y.matrix.fromArray(g.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.jointRadius=g.radius),y.visible=null!==g}const f=c.joints["index-finger-tip"].position.distanceTo(c.joints["thumb-tip"].position),p=.02,v=.005;c.inputState.pinching&&f>p+v?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=p-v&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==l&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),null!==s&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));null!==o&&(i=t.getPose(e.targetRaySpace,n),null===i&&null!==s&&(i=s),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Sg)))}return null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==s),null!==c&&(c.visible=null!==r),this}}class jh extends Wn{constructor(e,t,n,i,s,r,o,l,c,h){if((h=void 0!==h?h:Bi)!==Bi&&h!==ki)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&h===Bi&&(n=En),void 0===n&&h===ki&&(n=vi),super(null,i,s,r,o,l,h,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==o?o:Zt,this.minFilter=void 0!==l?l:Zt,this.flipY=!1,this.generateMipmaps=!1}}class wg extends qi{constructor(e,t){super();const n=this;let i=null,s=1,r=null,o="local-floor",l=null,c=null,h=null,d=null,f=null,p=null;const v=t.getContextAttributes();let m=null,g=null;const y=[],_=[],T=new pn;T.layers.enable(1),T.viewport=new Tt;const b=new pn;b.layers.enable(2),b.viewport=new Tt;const C=[T,b],L=new bg;L.layers.enable(1),L.layers.enable(2);let F=null,S=null;function R(q){const J=_.indexOf(q.inputSource);if(-1===J)return;const he=y[J];void 0!==he&&he.dispatchEvent({type:q.type,data:q.inputSource})}function B(){i.removeEventListener("select",R),i.removeEventListener("selectstart",R),i.removeEventListener("selectend",R),i.removeEventListener("squeeze",R),i.removeEventListener("squeezestart",R),i.removeEventListener("squeezeend",R),i.removeEventListener("end",B),i.removeEventListener("inputsourceschange",k);for(let q=0;q<y.length;q++){const J=_[q];null!==J&&(_[q]=null,y[q].disconnect(J))}F=null,S=null,e.setRenderTarget(m),f=null,d=null,h=null,i=null,g=null,oe.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function k(q){for(let J=0;J<q.removed.length;J++){const he=q.removed[J],le=_.indexOf(he);le>=0&&(_[le]=null,y[le].dispatchEvent({type:"disconnected",data:he}))}for(let J=0;J<q.added.length;J++){const he=q.added[J];let le=_.indexOf(he);if(-1===le){for(let ze=0;ze<y.length;ze++){if(ze>=_.length){_.push(he),le=ze;break}if(null===_[ze]){_[ze]=he,le=ze;break}}if(-1===le)break}const ye=y[le];ye&&ye.dispatchEvent({type:"connected",data:he})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(q){let J=y[q];return void 0===J&&(J=new tc,y[q]=J),J.getTargetRaySpace()},this.getControllerGrip=function(q){let J=y[q];return void 0===J&&(J=new tc,y[q]=J),J.getGripSpace()},this.getHand=function(q){let J=y[q];return void 0===J&&(J=new tc,y[q]=J),J.getHandSpace()},this.setFramebufferScaleFactor=function(q){s=q,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(q){o=q,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||r},this.setReferenceSpace=function(q){l=q},this.getBaseLayer=function(){return null!==d?d:f},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=function(){var q=(0,Le.Z)(function*(J){if(i=J,null!==i){if(m=e.getRenderTarget(),i.addEventListener("select",R),i.addEventListener("selectstart",R),i.addEventListener("selectend",R),i.addEventListener("squeeze",R),i.addEventListener("squeezestart",R),i.addEventListener("squeezeend",R),i.addEventListener("end",B),i.addEventListener("inputsourceschange",k),!0!==v.xrCompatible&&(yield t.makeXRCompatible()),void 0===i.renderState.layers||!1===e.capabilities.isWebGL2)f=new XRWebGLLayer(i,t,{antialias:void 0!==i.renderState.layers||v.antialias,alpha:v.alpha,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s}),i.updateRenderState({baseLayer:f}),g=new Kn(f.framebufferWidth,f.framebufferHeight,{format:Ln,type:ni,encoding:e.outputEncoding});else{let he=null,le=null,ye=null;v.depth&&(ye=v.stencil?35056:33190,he=v.stencil?ki:Bi,le=v.stencil?vi:En);const ze={colorFormat:32856,depthFormat:ye,scaleFactor:s};h=new XRWebGLBinding(i,t),d=h.createProjectionLayer(ze),i.updateRenderState({layers:[d]}),g=new Kn(d.textureWidth,d.textureHeight,{format:Ln,type:ni,depthTexture:new jh(d.textureWidth,d.textureHeight,le,void 0,void 0,void 0,void 0,void 0,void 0,he),stencilBuffer:v.stencil,encoding:e.outputEncoding,samples:v.antialias?4:0}),e.properties.get(g).__ignoreDepthValues=d.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),l=null,r=yield i.requestReferenceSpace(o),oe.setContext(i),oe.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}});return function(J){return q.apply(this,arguments)}}();const ie=new E,pe=new E;function K(q,J){null===J?q.matrixWorld.copy(q.matrix):q.matrixWorld.multiplyMatrices(J.matrixWorld,q.matrix),q.matrixWorldInverse.copy(q.matrixWorld).invert()}this.updateCamera=function(q){if(null===i)return;L.near=b.near=T.near=q.near,L.far=b.far=T.far=q.far,(F!==L.near||S!==L.far)&&(i.updateRenderState({depthNear:L.near,depthFar:L.far}),F=L.near,S=L.far);const J=q.parent,he=L.cameras;K(L,J);for(let ye=0;ye<he.length;ye++)K(he[ye],J);L.matrixWorld.decompose(L.position,L.quaternion,L.scale),q.position.copy(L.position),q.quaternion.copy(L.quaternion),q.scale.copy(L.scale),q.matrix.copy(L.matrix),q.matrixWorld.copy(L.matrixWorld);const le=q.children;for(let ye=0,ze=le.length;ye<ze;ye++)le[ye].updateMatrixWorld(!0);2===he.length?function U(q,J,he){ie.setFromMatrixPosition(J.matrixWorld),pe.setFromMatrixPosition(he.matrixWorld);const le=ie.distanceTo(pe),ye=J.projectionMatrix.elements,ze=he.projectionMatrix.elements,ke=ye[14]/(ye[10]-1),Q=ye[14]/(ye[10]+1),Dt=(ye[9]+1)/ye[5],it=(ye[9]-1)/ye[5],tt=(ye[8]-1)/ye[0],be=(ze[8]+1)/ze[0],dt=ke*tt,re=ke*be,ee=le/(-tt+be),ve=ee*-tt;J.matrixWorld.decompose(q.position,q.quaternion,q.scale),q.translateX(ve),q.translateZ(ee),q.matrixWorld.compose(q.position,q.quaternion,q.scale),q.matrixWorldInverse.copy(q.matrixWorld).invert();const Be=ke+ee,Ae=Q+ee;q.projectionMatrix.makePerspective(dt-ve,re+(le-ve),Dt*Q/Ae*Be,it*Q/Ae*Be,Be,Ae)}(L,T,b):L.projectionMatrix.copy(T.projectionMatrix)},this.getCamera=function(){return L},this.getFoveation=function(){return null!==d?d.fixedFoveation:null!==f?f.fixedFoveation:void 0},this.setFoveation=function(q){null!==d&&(d.fixedFoveation=q),null!==f&&void 0!==f.fixedFoveation&&(f.fixedFoveation=q)};let j=null;const oe=new vh;oe.setAnimationLoop(function se(q,J){if(c=J.getViewerPose(l||r),p=J,null!==c){const he=c.views;null!==f&&(e.setRenderTargetFramebuffer(g,f.framebuffer),e.setRenderTarget(g));let le=!1;he.length!==L.cameras.length&&(L.cameras.length=0,le=!0);for(let ye=0;ye<he.length;ye++){const ze=he[ye];let ke=null;if(null!==f)ke=f.getViewport(ze);else{const Dt=h.getViewSubImage(d,ze);ke=Dt.viewport,0===ye&&(e.setRenderTargetTextures(g,Dt.colorTexture,d.ignoreDepthValues?void 0:Dt.depthStencilTexture),e.setRenderTarget(g))}let Q=C[ye];void 0===Q&&(Q=new pn,Q.layers.enable(ye),Q.viewport=new Tt,C[ye]=Q),Q.matrix.fromArray(ze.transform.matrix),Q.projectionMatrix.fromArray(ze.projectionMatrix),Q.viewport.set(ke.x,ke.y,ke.width,ke.height),0===ye&&L.matrix.copy(Q.matrix),!0===le&&L.cameras.push(Q)}}for(let he=0;he<y.length;he++){const le=_[he],ye=y[he];null!==le&&void 0!==ye&&ye.update(le,J,l||r)}j&&j(q,J),p=null}),this.setAnimationLoop=function(q){j=q},this.dispose=function(){}}}function Tg(a,e){function i(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===at&&(m.bumpScale.value*=-1)),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===at&&m.normalScale.value.negate()),g.specularMap&&(m.specularMap.value=g.specularMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const y=e.get(g).envMap;if(y&&(m.envMap.value=y,m.flipEnvMap.value=y.isCubeTexture&&!1===y.isRenderTargetTexture?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap){m.lightMap.value=g.lightMap;const b=!0!==a.physicallyCorrectLights?Math.PI:1;m.lightMapIntensity.value=g.lightMapIntensity*b}let _,T;g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity),g.map?_=g.map:g.specularMap?_=g.specularMap:g.displacementMap?_=g.displacementMap:g.normalMap?_=g.normalMap:g.bumpMap?_=g.bumpMap:g.roughnessMap?_=g.roughnessMap:g.metalnessMap?_=g.metalnessMap:g.alphaMap?_=g.alphaMap:g.emissiveMap?_=g.emissiveMap:g.clearcoatMap?_=g.clearcoatMap:g.clearcoatNormalMap?_=g.clearcoatNormalMap:g.clearcoatRoughnessMap?_=g.clearcoatRoughnessMap:g.iridescenceMap?_=g.iridescenceMap:g.iridescenceThicknessMap?_=g.iridescenceThicknessMap:g.specularIntensityMap?_=g.specularIntensityMap:g.specularColorMap?_=g.specularColorMap:g.transmissionMap?_=g.transmissionMap:g.thicknessMap?_=g.thicknessMap:g.sheenColorMap?_=g.sheenColorMap:g.sheenRoughnessMap&&(_=g.sheenRoughnessMap),void 0!==_&&(_.isWebGLRenderTarget&&(_=_.texture),!0===_.matrixAutoUpdate&&_.updateMatrix(),m.uvTransform.value.copy(_.matrix)),g.aoMap?T=g.aoMap:g.lightMap&&(T=g.lightMap),void 0!==T&&(T.isWebGLRenderTarget&&(T=T.texture),!0===T.matrixAutoUpdate&&T.updateMatrix(),m.uv2Transform.value.copy(T.matrix))}return{refreshFogUniforms:function t(m,g){m.fogColor.value.copy(g.color),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)},refreshMaterialUniforms:function n(m,g,y,_,T){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(m,g):g.isMeshToonMaterial?(i(m,g),function h(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}(m,g)):g.isMeshPhongMaterial?(i(m,g),function c(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}(m,g)):g.isMeshStandardMaterial?(i(m,g),function d(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}(m,g),g.isMeshPhysicalMaterial&&function f(m,g,y){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===at&&m.clearcoatNormalScale.value.negate())),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap)),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=y.texture,m.transmissionSamplerSize.value.set(y.width,y.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap)}(m,g,T)):g.isMeshMatcapMaterial?(i(m,g),function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}(m,g)):g.isMeshDepthMaterial?i(m,g):g.isMeshDistanceMaterial?(i(m,g),function v(m,g){m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}(m,g)):g.isMeshNormalMaterial?i(m,g):g.isLineBasicMaterial?(function s(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}(m,g),g.isLineDashedMaterial&&function r(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}(m,g)):g.isPointsMaterial?function o(m,g,y,_){let T;m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*y,m.scale.value=.5*_,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest),g.map?T=g.map:g.alphaMap&&(T=g.alphaMap),void 0!==T&&(!0===T.matrixAutoUpdate&&T.updateMatrix(),m.uvTransform.value.copy(T.matrix))}(m,g,y,_):g.isSpriteMaterial?function l(m,g){let y;m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest),g.map?y=g.map:g.alphaMap&&(y=g.alphaMap),void 0!==y&&(!0===y.matrixAutoUpdate&&y.updateMatrix(),m.uvTransform.value.copy(y.matrix))}(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}}}function Xh(a={}){this.isWebGLRenderer=!0;const e=void 0!==a.canvas?a.canvas:function Ag(){const a=Ms("canvas");return a.style.display="block",a}(),t=void 0!==a.context?a.context:null,n=void 0===a.depth||a.depth,i=void 0===a.stencil||a.stencil,s=void 0!==a.antialias&&a.antialias,r=void 0===a.premultipliedAlpha||a.premultipliedAlpha,o=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,l=void 0!==a.powerPreference?a.powerPreference:"default",c=void 0!==a.failIfMajorPerformanceCaveat&&a.failIfMajorPerformanceCaveat;let h;h=null!==t?t.getContextAttributes().alpha:void 0!==a.alpha&&a.alpha;let d=null,f=null;const p=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ri,this.physicallyCorrectLights=!1,this.toneMapping=Vn,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const m=this;let g=!1,y=0,_=0,T=null,b=-1,C=null;const L=new Tt,F=new Tt;let S=null,R=e.width,B=e.height,k=1,ie=null,pe=null;const U=new Tt(0,0,R,B),K=new Tt(0,0,R,B);let j=!1;const se=new Xl;let oe=!1,q=!1,J=null;const he=new Qe,le=new ne,ye=new E,ze={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ke(){return null===T?k:1}let it,tt,be,dt,re,ee,ve,Be,Ae,st,qe,We,Gt,Bt,I,A,Y,ue,ge,Ce,$e,Z,Ue,Q=t;function Dt(P,G){for(let $=0;$<P.length;$++){const te=e.getContext(P[$],G);if(null!==te)return te}return null}try{const P={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:r,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${D}`),e.addEventListener("webglcontextlost",O,!1),e.addEventListener("webglcontextrestored",Se,!1),e.addEventListener("webglcontextcreationerror",xe,!1),null===Q){const G=["webgl2","webgl","experimental-webgl"];if(!0===m.isWebGL1Renderer&&G.shift(),Q=Dt(G,P),null===Q)throw Dt(G)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Q.getShaderPrecisionFormat&&(Q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}function Ne(){it=new Up(Q),tt=new Dp(Q,it,a),it.init(tt),Z=new Mg(Q,it,tt),be=new yg(Q,it,tt),dt=new Hp,re=new ag,ee=new _g(Q,it,be,re,tt,Z,dt),ve=new Op(m),Be=new kp(m),Ae=new Id(Q,tt),Ue=new Ip(Q,it,Ae,tt),st=new Vp(Q,Ae,dt,Ue),qe=new qp(Q,st,Ae,dt),ge=new Xp(Q,tt,ee),A=new Fp(re),We=new og(m,ve,Be,it,tt,Ue,A),Gt=new Tg(m,re),Bt=new cg,I=new mg(it,tt),ue=new Rp(m,ve,be,qe,h,r),Y=new xg(m,qe,tt),Ce=new Np(Q,it,dt,tt),$e=new Gp(Q,it,dt,tt),dt.programs=We.programs,m.capabilities=tt,m.extensions=it,m.properties=re,m.renderLists=Bt,m.shadowMap=Y,m.state=be,m.info=dt}Ne();const Ie=new wg(m,Q);function O(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const P=dt.autoReset,G=Y.enabled,$=Y.autoUpdate,H=Y.needsUpdate,te=Y.type;Ne(),dt.autoReset=P,Y.enabled=G,Y.autoUpdate=$,Y.needsUpdate=H,Y.type=te}function xe(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function Ye(P){const G=P.target;G.removeEventListener("dispose",Ye),function De(P){(function Je(P){const G=re.get(P).programs;void 0!==G&&(G.forEach(function($){We.releaseProgram($)}),P.isShaderMaterial&&We.releaseShaderCache(P))})(P),re.remove(P)}(G)}this.xr=Ie,this.getContext=function(){return Q},this.getContextAttributes=function(){return Q.getContextAttributes()},this.forceContextLoss=function(){const P=it.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=it.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(P){void 0!==P&&(k=P,this.setSize(R,B,!1))},this.getSize=function(P){return P.set(R,B)},this.setSize=function(P,G,$){Ie.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(R=P,B=G,e.width=Math.floor(P*k),e.height=Math.floor(G*k),!1!==$&&(e.style.width=P+"px",e.style.height=G+"px"),this.setViewport(0,0,P,G))},this.getDrawingBufferSize=function(P){return P.set(R*k,B*k).floor()},this.setDrawingBufferSize=function(P,G,$){R=P,B=G,k=$,e.width=Math.floor(P*$),e.height=Math.floor(G*$),this.setViewport(0,0,P,G)},this.getCurrentViewport=function(P){return P.copy(L)},this.getViewport=function(P){return P.copy(U)},this.setViewport=function(P,G,$,H){P.isVector4?U.set(P.x,P.y,P.z,P.w):U.set(P,G,$,H),be.viewport(L.copy(U).multiplyScalar(k).floor())},this.getScissor=function(P){return P.copy(K)},this.setScissor=function(P,G,$,H){P.isVector4?K.set(P.x,P.y,P.z,P.w):K.set(P,G,$,H),be.scissor(F.copy(K).multiplyScalar(k).floor())},this.getScissorTest=function(){return j},this.setScissorTest=function(P){be.setScissorTest(j=P)},this.setOpaqueSort=function(P){ie=P},this.setTransparentSort=function(P){pe=P},this.getClearColor=function(P){return P.copy(ue.getClearColor())},this.setClearColor=function(){ue.setClearColor.apply(ue,arguments)},this.getClearAlpha=function(){return ue.getClearAlpha()},this.setClearAlpha=function(){ue.setClearAlpha.apply(ue,arguments)},this.clear=function(P=!0,G=!0,$=!0){let H=0;P&&(H|=16384),G&&(H|=256),$&&(H|=1024),Q.clear(H)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",O,!1),e.removeEventListener("webglcontextrestored",Se,!1),e.removeEventListener("webglcontextcreationerror",xe,!1),Bt.dispose(),I.dispose(),re.dispose(),ve.dispose(),Be.dispose(),qe.dispose(),Ue.dispose(),We.dispose(),Ie.dispose(),Ie.removeEventListener("sessionstart",Rt),Ie.removeEventListener("sessionend",It),J&&(J.dispose(),J=null),Tn.stop()},this.renderBufferDirect=function(P,G,$,H,te,Ze){null===G&&(G=ze);const rt=te.isMesh&&te.matrixWorld.determinant()<0,ft=function uv(P,G,$,H,te){!0!==G.isScene&&(G=ze),ee.resetTextureUnits();const Ze=G.fog,ft=null===T?m.outputEncoding:!0===T.isXRRenderTarget?T.texture.encoding:ri,ht=(H.isMeshStandardMaterial?Be:ve).get(H.envMap||(H.isMeshStandardMaterial?G.environment:null)),Nt=!0===H.vertexColors&&!!$.attributes.color&&4===$.attributes.color.itemSize,bt=!!H.normalMap&&!!$.attributes.tangent,St=!!$.morphAttributes.position,en=!!$.morphAttributes.normal,ks=!!$.morphAttributes.color,Br=H.toneMapped?m.toneMapping:Vn,kr=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,di=void 0!==kr?kr.length:0,Et=re.get(H),Ur=f.state.lights;!0!==oe||!0!==q&&P===C||A.setState(H,P,P===C&&H.id===b);let ln=!1;H.version===Et.__version?(Et.needsLights&&Et.lightsStateVersion!==Ur.state.version||Et.outputEncoding!==ft||te.isInstancedMesh&&!1===Et.instancing||!te.isInstancedMesh&&!0===Et.instancing||te.isSkinnedMesh&&!1===Et.skinning||!te.isSkinnedMesh&&!0===Et.skinning||Et.envMap!==ht||!0===H.fog&&Et.fog!==Ze||void 0!==Et.numClippingPlanes&&(Et.numClippingPlanes!==A.numPlanes||Et.numIntersection!==A.numIntersection)||Et.vertexAlphas!==Nt||Et.vertexTangents!==bt||Et.morphTargets!==St||Et.morphNormals!==en||Et.morphColors!==ks||Et.toneMapping!==Br||!0===tt.isWebGL2&&Et.morphTargetsCount!==di)&&(ln=!0):(ln=!0,Et.__version=H.version);let fi=Et.currentProgram;!0===ln&&(fi=Rc(H,G,te));let ls=!1,ko=!1,Ic=!1;const An=fi.getUniforms(),Uo=Et.uniforms;if(be.useProgram(fi.program)&&(ls=!0,ko=!0,Ic=!0),H.id!==b&&(b=H.id,ko=!0),ls||C!==P){if(An.setValue(Q,"projectionMatrix",P.projectionMatrix),tt.logarithmicDepthBuffer&&An.setValue(Q,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),C!==P&&(C=P,ko=!0,Ic=!0),H.isShaderMaterial||H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshStandardMaterial||H.envMap){const pi=An.map.cameraPosition;void 0!==pi&&pi.setValue(Q,ye.setFromMatrixPosition(P.matrixWorld))}(H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshLambertMaterial||H.isMeshBasicMaterial||H.isMeshStandardMaterial||H.isShaderMaterial)&&An.setValue(Q,"isOrthographic",!0===P.isOrthographicCamera),(H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshLambertMaterial||H.isMeshBasicMaterial||H.isMeshStandardMaterial||H.isShaderMaterial||H.isShadowMaterial||te.isSkinnedMesh)&&An.setValue(Q,"viewMatrix",P.matrixWorldInverse)}if(te.isSkinnedMesh){An.setOptional(Q,te,"bindMatrix"),An.setOptional(Q,te,"bindMatrixInverse");const pi=te.skeleton;pi&&(tt.floatVertexTextures?(null===pi.boneTexture&&pi.computeBoneTexture(),An.setValue(Q,"boneTexture",pi.boneTexture,ee),An.setValue(Q,"boneTextureSize",pi.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Nc=$.morphAttributes;return(void 0!==Nc.position||void 0!==Nc.normal||void 0!==Nc.color&&!0===tt.isWebGL2)&&ge.update(te,$,H,fi),(ko||Et.receiveShadow!==te.receiveShadow)&&(Et.receiveShadow=te.receiveShadow,An.setValue(Q,"receiveShadow",te.receiveShadow)),ko&&(An.setValue(Q,"toneMappingExposure",m.toneMappingExposure),Et.needsLights&&function dv(P,G){P.ambientLightColor.needsUpdate=G,P.lightProbe.needsUpdate=G,P.directionalLights.needsUpdate=G,P.directionalLightShadows.needsUpdate=G,P.pointLights.needsUpdate=G,P.pointLightShadows.needsUpdate=G,P.spotLights.needsUpdate=G,P.spotLightShadows.needsUpdate=G,P.rectAreaLights.needsUpdate=G,P.hemisphereLights.needsUpdate=G}(Uo,Ic),Ze&&!0===H.fog&&Gt.refreshFogUniforms(Uo,Ze),Gt.refreshMaterialUniforms(Uo,H,k,B,J),wa.upload(Q,Et.uniformsList,Uo,ee)),H.isShaderMaterial&&!0===H.uniformsNeedUpdate&&(wa.upload(Q,Et.uniformsList,Uo,ee),H.uniformsNeedUpdate=!1),H.isSpriteMaterial&&An.setValue(Q,"center",te.center),An.setValue(Q,"modelViewMatrix",te.modelViewMatrix),An.setValue(Q,"normalMatrix",te.normalMatrix),An.setValue(Q,"modelMatrix",te.matrixWorld),fi}(P,G,$,H,te);be.setMaterial(H,rt);let ht=$.index;const Nt=$.attributes.position;if(null===ht){if(void 0===Nt||0===Nt.count)return}else if(0===ht.count)return;let bt=1;!0===H.wireframe&&(ht=st.getWireframeAttribute($),bt=2),Ue.setup(te,H,ft,$,ht);let St,en=Ce;null!==ht&&(St=Ae.get(ht),en=$e,en.setIndex(St));const ks=null!==ht?ht.count:Nt.count,Br=$.drawRange.start*bt,kr=$.drawRange.count*bt,di=null!==Ze?Ze.start*bt:0,Et=null!==Ze?Ze.count*bt:1/0,Ur=Math.max(Br,di),ln=Math.min(ks,Br+kr,di+Et)-1,fi=Math.max(0,ln-Ur+1);if(0!==fi){if(te.isMesh)!0===H.wireframe?(be.setLineWidth(H.wireframeLinewidth*ke()),en.setMode(1)):en.setMode(4);else if(te.isLine){let ls=H.linewidth;void 0===ls&&(ls=1),be.setLineWidth(ls*ke()),en.setMode(te.isLineSegments?1:te.isLineLoop?2:3)}else te.isPoints?en.setMode(0):te.isSprite&&en.setMode(4);if(te.isInstancedMesh)en.renderInstances(Ur,fi,te.count);else if($.isInstancedBufferGeometry){const ls=Math.min($.instanceCount,$._maxInstanceCount);en.renderInstances(Ur,fi,ls)}else en.render(Ur,fi)}},this.compile=function(P,G){f=I.get(P),f.init(),v.push(f),P.traverseVisible(function($){$.isLight&&$.layers.test(G.layers)&&(f.pushLight($),$.castShadow&&f.pushShadow($))}),f.setupLights(m.physicallyCorrectLights),P.traverse(function($){const H=$.material;if(H)if(Array.isArray(H))for(let te=0;te<H.length;te++)Rc(H[te],P,$);else Rc(H,P,$)}),v.pop(),f=null};let me=null;function Rt(){Tn.stop()}function It(){Tn.start()}const Tn=new vh;function ui(P,G,$,H){if(!1===P.visible)return;if(P.layers.test(G.layers))if(P.isGroup)$=P.renderOrder;else if(P.isLOD)!0===P.autoUpdate&&P.update(G);else if(P.isLight)f.pushLight(P),P.castShadow&&f.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||se.intersectsSprite(P)){H&&ye.setFromMatrixPosition(P.matrixWorld).applyMatrix4(he);const rt=qe.update(P),ft=P.material;ft.visible&&d.push(P,rt,ft,$,ye.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(P.isSkinnedMesh&&P.skeleton.frame!==dt.render.frame&&(P.skeleton.update(),P.skeleton.frame=dt.render.frame),!P.frustumCulled||se.intersectsObject(P))){H&&ye.setFromMatrixPosition(P.matrixWorld).applyMatrix4(he);const rt=qe.update(P),ft=P.material;if(Array.isArray(ft)){const ht=rt.groups;for(let Nt=0,bt=ht.length;Nt<bt;Nt++){const St=ht[Nt],en=ft[St.materialIndex];en&&en.visible&&d.push(P,rt,en,$,ye.z,St)}}else ft.visible&&d.push(P,rt,ft,$,ye.z,null)}const Ze=P.children;for(let rt=0,ft=Ze.length;rt<ft;rt++)ui(Ze[rt],G,$,H)}function vd(P,G,$,H){const te=P.opaque,Ze=P.transmissive,rt=P.transparent;f.setupLightsView($),Ze.length>0&&function cv(P,G,$){const H=tt.isWebGL2;null===J&&(J=new Kn(1,1,{generateMipmaps:!0,type:it.has("EXT_color_buffer_half_float")?zi:ni,minFilter:mn,samples:H&&!0===s?4:0})),m.getDrawingBufferSize(le),H?J.setSize(le.x,le.y):J.setSize(ao(le.x),ao(le.y));const te=m.getRenderTarget();m.setRenderTarget(J),m.clear();const Ze=m.toneMapping;m.toneMapping=Vn,ll(P,G,$),m.toneMapping=Ze,ee.updateMultisampleRenderTarget(J),ee.updateRenderTargetMipmap(J),m.setRenderTarget(te)}(te,G,$),H&&be.viewport(L.copy(H)),te.length>0&&ll(te,G,$),Ze.length>0&&ll(Ze,G,$),rt.length>0&&ll(rt,G,$),be.buffers.depth.setTest(!0),be.buffers.depth.setMask(!0),be.buffers.color.setMask(!0),be.setPolygonOffset(!1)}function ll(P,G,$){const H=!0===G.isScene?G.overrideMaterial:null;for(let te=0,Ze=P.length;te<Ze;te++){const rt=P[te],ft=rt.object,ht=rt.geometry,Nt=null===H?rt.material:H,bt=rt.group;ft.layers.test($.layers)&&hv(ft,G,$,ht,Nt,bt)}}function hv(P,G,$,H,te,Ze){P.onBeforeRender(m,G,$,H,te,Ze),P.modelViewMatrix.multiplyMatrices($.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),te.onBeforeRender(m,G,$,H,P,Ze),!0===te.transparent&&te.side===vt?(te.side=at,te.needsUpdate=!0,m.renderBufferDirect($,G,H,te,P,Ze),te.side=Zn,te.needsUpdate=!0,m.renderBufferDirect($,G,H,te,P,Ze),te.side=vt):m.renderBufferDirect($,G,H,te,P,Ze),P.onAfterRender(m,G,$,H,te,Ze)}function Rc(P,G,$){!0!==G.isScene&&(G=ze);const H=re.get(P),te=f.state.lights,rt=te.state.version,ft=We.getParameters(P,te.state,f.state.shadowsArray,G,$),ht=We.getProgramCacheKey(ft);let Nt=H.programs;H.environment=P.isMeshStandardMaterial?G.environment:null,H.fog=G.fog,H.envMap=(P.isMeshStandardMaterial?Be:ve).get(P.envMap||H.environment),void 0===Nt&&(P.addEventListener("dispose",Ye),Nt=new Map,H.programs=Nt);let bt=Nt.get(ht);if(void 0!==bt){if(H.currentProgram===bt&&H.lightsStateVersion===rt)return xd(P,ft),bt}else ft.uniforms=We.getUniforms(P),P.onBuild($,ft,m),P.onBeforeCompile(ft,m),bt=We.acquireProgram(ft,ht),Nt.set(ht,bt),H.uniforms=ft.uniforms;const St=H.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||!0===P.clipping)&&(St.clippingPlanes=A.uniform),xd(P,ft),H.needsLights=function fv(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&!0===P.lights}(P),H.lightsStateVersion=rt,H.needsLights&&(St.ambientLightColor.value=te.state.ambient,St.lightProbe.value=te.state.probe,St.directionalLights.value=te.state.directional,St.directionalLightShadows.value=te.state.directionalShadow,St.spotLights.value=te.state.spot,St.spotLightShadows.value=te.state.spotShadow,St.rectAreaLights.value=te.state.rectArea,St.ltc_1.value=te.state.rectAreaLTC1,St.ltc_2.value=te.state.rectAreaLTC2,St.pointLights.value=te.state.point,St.pointLightShadows.value=te.state.pointShadow,St.hemisphereLights.value=te.state.hemi,St.directionalShadowMap.value=te.state.directionalShadowMap,St.directionalShadowMatrix.value=te.state.directionalShadowMatrix,St.spotShadowMap.value=te.state.spotShadowMap,St.spotShadowMatrix.value=te.state.spotShadowMatrix,St.pointShadowMap.value=te.state.pointShadowMap,St.pointShadowMatrix.value=te.state.pointShadowMatrix);const en=bt.getUniforms(),ks=wa.seqWithValue(en.seq,St);return H.currentProgram=bt,H.uniformsList=ks,bt}function xd(P,G){const $=re.get(P);$.outputEncoding=G.outputEncoding,$.instancing=G.instancing,$.skinning=G.skinning,$.morphTargets=G.morphTargets,$.morphNormals=G.morphNormals,$.morphColors=G.morphColors,$.morphTargetsCount=G.morphTargetsCount,$.numClippingPlanes=G.numClippingPlanes,$.numIntersection=G.numClipIntersection,$.vertexAlphas=G.vertexAlphas,$.vertexTangents=G.vertexTangents,$.toneMapping=G.toneMapping}Tn.setAnimationLoop(function Ke(P){me&&me(P)}),typeof self<"u"&&Tn.setContext(self),this.setAnimationLoop=function(P){me=P,Ie.setAnimationLoop(P),null===P?Tn.stop():Tn.start()},Ie.addEventListener("sessionstart",Rt),Ie.addEventListener("sessionend",It),this.render=function(P,G){if(void 0===G||!0===G.isCamera){if(!0!==g){if(!0===P.autoUpdate&&P.updateMatrixWorld(),null===G.parent&&G.updateMatrixWorld(),!0===Ie.enabled&&!0===Ie.isPresenting&&(!0===Ie.cameraAutoUpdate&&Ie.updateCamera(G),G=Ie.getCamera()),!0===P.isScene&&P.onBeforeRender(m,P,G,T),f=I.get(P,v.length),f.init(),v.push(f),he.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse),se.setFromProjectionMatrix(he),q=this.localClippingEnabled,oe=A.init(this.clippingPlanes,q,G),d=Bt.get(P,p.length),d.init(),p.push(d),ui(P,G,0,m.sortObjects),d.finish(),!0===m.sortObjects&&d.sort(ie,pe),!0===oe&&A.beginShadows(),Y.render(f.state.shadowsArray,P,G),!0===oe&&A.endShadows(),!0===this.info.autoReset&&this.info.reset(),ue.render(d,P),f.setupLights(m.physicallyCorrectLights),G.isArrayCamera){const H=G.cameras;for(let te=0,Ze=H.length;te<Ze;te++){const rt=H[te];vd(d,P,rt,rt.viewport)}}else vd(d,P,G);null!==T&&(ee.updateMultisampleRenderTarget(T),ee.updateRenderTargetMipmap(T)),!0===P.isScene&&P.onAfterRender(m,P,G),Ue.resetDefaultState(),b=-1,C=null,v.pop(),f=v.length>0?v[v.length-1]:null,p.pop(),d=p.length>0?p[p.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(P,G,$){re.get(P.texture).__webglTexture=G,re.get(P.depthTexture).__webglTexture=$;const H=re.get(P);H.__hasExternalTextures=!0,H.__hasExternalTextures&&(H.__autoAllocateDepthBuffer=void 0===$,H.__autoAllocateDepthBuffer||!0===it.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),H.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(P,G){const $=re.get(P);$.__webglFramebuffer=G,$.__useDefaultFramebuffer=void 0===G},this.setRenderTarget=function(P,G=0,$=0){T=P,y=G,_=$;let H=!0;if(P){const ht=re.get(P);void 0!==ht.__useDefaultFramebuffer?(be.bindFramebuffer(36160,null),H=!1):void 0===ht.__webglFramebuffer?ee.setupRenderTarget(P):ht.__hasExternalTextures&&ee.rebindTextures(P,re.get(P.texture).__webglTexture,re.get(P.depthTexture).__webglTexture)}let te=null,Ze=!1,rt=!1;if(P){const ht=P.texture;(ht.isData3DTexture||ht.isDataArrayTexture)&&(rt=!0);const Nt=re.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(te=Nt[G],Ze=!0):te=tt.isWebGL2&&P.samples>0&&!1===ee.useMultisampledRTT(P)?re.get(P).__webglMultisampledFramebuffer:Nt,L.copy(P.viewport),F.copy(P.scissor),S=P.scissorTest}else L.copy(U).multiplyScalar(k).floor(),F.copy(K).multiplyScalar(k).floor(),S=j;if(be.bindFramebuffer(36160,te)&&tt.drawBuffers&&H&&be.drawBuffers(P,te),be.viewport(L),be.scissor(F),be.setScissorTest(S),Ze){const ht=re.get(P.texture);Q.framebufferTexture2D(36160,36064,34069+G,ht.__webglTexture,$)}else if(rt){const ht=re.get(P.texture);Q.framebufferTextureLayer(36160,36064,ht.__webglTexture,$||0,G||0)}b=-1},this.readRenderTargetPixels=function(P,G,$,H,te,Ze,rt){if(!P||!P.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ft=re.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&void 0!==rt&&(ft=ft[rt]),ft){be.bindFramebuffer(36160,ft);try{const ht=P.texture,Nt=ht.format,bt=ht.type;if(Nt!==Ln&&Z.convert(Nt)!==Q.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const St=bt===zi&&(it.has("EXT_color_buffer_half_float")||tt.isWebGL2&&it.has("EXT_color_buffer_float"));if(!(bt===ni||Z.convert(bt)===Q.getParameter(35738)||bt===Pn&&(tt.isWebGL2||it.has("OES_texture_float")||it.has("WEBGL_color_buffer_float"))||St))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");G>=0&&G<=P.width-H&&$>=0&&$<=P.height-te&&Q.readPixels(G,$,H,te,Z.convert(Nt),Z.convert(bt),Ze)}finally{const ht=null!==T?re.get(T).__webglFramebuffer:null;be.bindFramebuffer(36160,ht)}}},this.copyFramebufferToTexture=function(P,G,$=0){const H=Math.pow(2,-$),te=Math.floor(G.image.width*H),Ze=Math.floor(G.image.height*H);ee.setTexture2D(G,0),Q.copyTexSubImage2D(3553,$,0,0,P.x,P.y,te,Ze),be.unbindTexture()},this.copyTextureToTexture=function(P,G,$,H=0){const te=G.image.width,Ze=G.image.height,rt=Z.convert($.format),ft=Z.convert($.type);ee.setTexture2D($,0),Q.pixelStorei(37440,$.flipY),Q.pixelStorei(37441,$.premultiplyAlpha),Q.pixelStorei(3317,$.unpackAlignment),G.isDataTexture?Q.texSubImage2D(3553,H,P.x,P.y,te,Ze,rt,ft,G.image.data):G.isCompressedTexture?Q.compressedTexSubImage2D(3553,H,P.x,P.y,G.mipmaps[0].width,G.mipmaps[0].height,rt,G.mipmaps[0].data):Q.texSubImage2D(3553,H,P.x,P.y,rt,ft,G.image),0===H&&$.generateMipmaps&&Q.generateMipmap(3553),be.unbindTexture()},this.copyTextureToTexture3D=function(P,G,$,H,te=0){if(m.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const Ze=P.max.x-P.min.x+1,rt=P.max.y-P.min.y+1,ft=P.max.z-P.min.z+1,ht=Z.convert(H.format),Nt=Z.convert(H.type);let bt;if(H.isData3DTexture)ee.setTexture3D(H,0),bt=32879;else{if(!H.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ee.setTexture2DArray(H,0),bt=35866}Q.pixelStorei(37440,H.flipY),Q.pixelStorei(37441,H.premultiplyAlpha),Q.pixelStorei(3317,H.unpackAlignment);const St=Q.getParameter(3314),en=Q.getParameter(32878),ks=Q.getParameter(3316),Br=Q.getParameter(3315),kr=Q.getParameter(32877),di=$.isCompressedTexture?$.mipmaps[0]:$.image;Q.pixelStorei(3314,di.width),Q.pixelStorei(32878,di.height),Q.pixelStorei(3316,P.min.x),Q.pixelStorei(3315,P.min.y),Q.pixelStorei(32877,P.min.z),$.isDataTexture||$.isData3DTexture?Q.texSubImage3D(bt,te,G.x,G.y,G.z,Ze,rt,ft,ht,Nt,di.data):$.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Q.compressedTexSubImage3D(bt,te,G.x,G.y,G.z,Ze,rt,ft,ht,di.data)):Q.texSubImage3D(bt,te,G.x,G.y,G.z,Ze,rt,ft,ht,Nt,di),Q.pixelStorei(3314,St),Q.pixelStorei(32878,en),Q.pixelStorei(3316,ks),Q.pixelStorei(3315,Br),Q.pixelStorei(32877,kr),0===te&&H.generateMipmaps&&Q.generateMipmap(bt),be.unbindTexture()},this.initTexture=function(P){P.isCubeTexture?ee.setTextureCube(P,0):P.isData3DTexture?ee.setTexture3D(P,0):P.isDataArrayTexture?ee.setTexture2DArray(P,0):ee.setTexture2D(P,0),be.unbindTexture()},this.resetState=function(){y=0,_=0,T=null,be.reset(),Ue.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class Cg extends Xh{}).prototype.isWebGL1Renderer=!0;class Ta{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Pe(e),this.near=t,this.far=n}clone(){return new Ta(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class qh extends Fe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}class ic{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Rn()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Rn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Rn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const wn=new E;class Ls{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix4(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyNormalMatrix(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.transformDirection(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new an(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ls(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const Pa=new E,Kh=new E;class Qh extends Fe{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Pa.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Pa);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Pa.setFromMatrixPosition(e.matrixWorld),Kh.setFromMatrixPosition(this.matrixWorld);const n=Pa.distanceTo(Kh)/e.zoom;let i,s;for(t[0].object.visible=!0,i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const r=n[i];t.object.levels.push({object:r.object.uuid,distance:r.distance})}return t}}const eu=new E,tu=new Tt,nu=new Tt,Pg=new E,iu=new Qe;class su extends xn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Qe,this.bindMatrixInverse=new Qe}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Tt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;tu.fromBufferAttribute(i.attributes.skinIndex,e),nu.fromBufferAttribute(i.attributes.skinWeight,e),eu.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const r=nu.getComponent(s);if(0!==r){const o=tu.getComponent(s);iu.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(Pg.copy(eu).applyMatrix4(iu),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}class rc extends Fe{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Er extends Wn{constructor(e=null,t=1,n=1,i,s,r,o,l,c=Zt,h=Zt,d,f){super(null,r,o,l,c,h,i,s,d,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const ru=new Qe,Lg=new Qe;class La{constructor(e=[],t=[]){this.uuid=Rn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Qe)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Qe;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,r=e.length;s<r;s++)ru.multiplyMatrices(e[s]?e[s].matrixWorld:Lg,t[s]),ru.toArray(n,16*s);null!==i&&(i.needsUpdate=!0)}clone(){return new La(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Dl(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Er(t,e,e,Ln,Pn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let r=t[s];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),r=new rc),this.bones.push(r),this.boneInverses.push((new Qe).fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++)e.bones.push(t[i].uuid),e.boneInverses.push(n[i].toArray());return e}}class Pr extends an{constructor(e,t,n,i=1){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ou=new Qe,au=new Qe,Ra=[],wo=new xn;class lu extends xn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Pr(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(wo.geometry=this.geometry,wo.material=this.material,void 0!==wo.material)for(let s=0;s<i;s++){this.getMatrixAt(s,ou),au.multiplyMatrices(n,ou),wo.matrixWorld=au,wo.raycast(e,Ra);for(let r=0,o=Ra.length;r<o;r++){const l=Ra[r];l.instanceId=s,l.object=this,t.push(l)}Ra.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Pr(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class In extends Bn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Pe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const cu=new E,hu=new E,uu=new Qe,oc=new fr,Ia=new Ci;class Rs extends Fe{constructor(e=new ct,t=new In){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)cu.fromBufferAttribute(t,i-1),hu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=cu.distanceTo(hu);e.setAttribute("lineDistance",new Oe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ia.copy(n.boundingSphere),Ia.applyMatrix4(i),Ia.radius+=s,!1===e.ray.intersectsSphere(Ia))return;uu.copy(i).invert(),oc.copy(e.ray).applyMatrix4(uu);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new E,h=new E,d=new E,f=new E,p=this.isLineSegments?2:1,v=n.index,g=n.attributes.position;if(null!==v)for(let T=Math.max(0,r.start),b=Math.min(v.count,r.start+r.count)-1;T<b;T+=p){const C=v.getX(T),L=v.getX(T+1);if(c.fromBufferAttribute(g,C),h.fromBufferAttribute(g,L),oc.distanceSqToSegment(c,h,f,d)>l)continue;f.applyMatrix4(this.matrixWorld);const S=e.ray.origin.distanceTo(f);S<e.near||S>e.far||t.push({distance:S,point:d.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}else for(let T=Math.max(0,r.start),b=Math.min(g.count,r.start+r.count)-1;T<b;T+=p){if(c.fromBufferAttribute(g,T),h.fromBufferAttribute(g,T+1),oc.distanceSqToSegment(c,h,f,d)>l)continue;f.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(f);L<e.near||L>e.far||t.push({distance:L,point:d.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}const du=new E,fu=new E;class Na extends Rs{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)du.fromBufferAttribute(t,i),fu.fromBufferAttribute(t,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+du.distanceTo(fu);e.setAttribute("lineDistance",new Oe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class pu extends Rs{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class ac extends Bn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Pe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const mu=new Qe,lc=new fr,Da=new Ci,Fa=new E;class gu extends Fe{constructor(e=new ct,t=new ac){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Da.copy(n.boundingSphere),Da.applyMatrix4(i),Da.radius+=s,!1===e.ray.intersectsSphere(Da))return;mu.copy(i).invert(),lc.copy(e.ray).applyMatrix4(mu);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=n.index,d=n.attributes.position;if(null!==c)for(let v=Math.max(0,r.start),m=Math.min(c.count,r.start+r.count);v<m;v++){const g=c.getX(v);Fa.fromBufferAttribute(d,g),vu(Fa,g,l,i,e,t,this)}else for(let v=Math.max(0,r.start),m=Math.min(d.count,r.start+r.count);v<m;v++)Fa.fromBufferAttribute(d,v),vu(Fa,v,l,i,e,t,this)}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function vu(a,e,t,n,i,s,r){const o=lc.distanceSqToPoint(a);if(o<t){const l=new E;lc.closestPointToPoint(a,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:r})}}class Ig extends Wn{constructor(e,t,n,i,s,r,o,l,c){super(e,t,n,i,s,r,o,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Is extends ct{constructor(e=1,t=1,n=1,i=8,s=1,r=!1,o=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:r,thetaStart:o,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const h=[],d=[],f=[],p=[];let v=0;const m=[],g=n/2;let y=0;function T(b){const C=v,L=new ne,F=new E;let S=0;const R=!0===b?e:t,B=!0===b?1:-1;for(let ie=1;ie<=i;ie++)d.push(0,g*B,0),f.push(0,B,0),p.push(.5,.5),v++;const k=v;for(let ie=0;ie<=i;ie++){const U=ie/i*l+o,K=Math.cos(U),j=Math.sin(U);F.x=R*j,F.y=g*B,F.z=R*K,d.push(F.x,F.y,F.z),f.push(0,B,0),L.x=.5*K+.5,L.y=.5*j*B+.5,p.push(L.x,L.y),v++}for(let ie=0;ie<i;ie++){const pe=C+ie,U=k+ie;!0===b?h.push(U,U+1,pe):h.push(U+1,U,pe),S+=3}c.addGroup(y,S,!0===b?1:2),y+=S}(function _(){const b=new E,C=new E;let L=0;const F=(t-e)/n;for(let S=0;S<=s;S++){const R=[],B=S/s,k=B*(t-e)+e;for(let ie=0;ie<=i;ie++){const pe=ie/i,U=pe*l+o,K=Math.sin(U),j=Math.cos(U);C.x=k*K,C.y=-B*n+g,C.z=k*j,d.push(C.x,C.y,C.z),b.set(K,F,j).normalize(),f.push(b.x,b.y,b.z),p.push(pe,1-B),R.push(v++)}m.push(R)}for(let S=0;S<i;S++)for(let R=0;R<s;R++){const k=m[R+1][S],ie=m[R+1][S+1],pe=m[R][S+1];h.push(m[R][S],k,pe),h.push(k,ie,pe),L+=6}c.addGroup(y,L,0),y+=L})(),!1===r&&(e>0&&T(!0),t>0&&T(!1)),this.setIndex(h),this.setAttribute("position",new Oe(d,3)),this.setAttribute("normal",new Oe(f,3)),this.setAttribute("uv",new Oe(p,2))}static fromJSON(e){return new Is(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Eo extends Is{constructor(e=1,t=1,n=8,i=1,s=!1,r=0,o=2*Math.PI){super(0,e,t,n,i,s,r,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:r,thetaLength:o}}static fromJSON(e){return new Eo(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class rs extends ct{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],r=[];function l(_,T,b,C){const L=C+1,F=[];for(let S=0;S<=L;S++){F[S]=[];const R=_.clone().lerp(b,S/L),B=T.clone().lerp(b,S/L),k=L-S;for(let ie=0;ie<=k;ie++)F[S][ie]=0===ie&&S===L?R:R.clone().lerp(B,ie/k)}for(let S=0;S<L;S++)for(let R=0;R<2*(L-S)-1;R++){const B=Math.floor(R/2);R%2==0?(f(F[S][B+1]),f(F[S+1][B]),f(F[S][B])):(f(F[S][B+1]),f(F[S+1][B+1]),f(F[S+1][B]))}}function f(_){s.push(_.x,_.y,_.z)}function p(_,T){const b=3*_;T.x=e[b+0],T.y=e[b+1],T.z=e[b+2]}function m(_,T,b,C){C<0&&1===_.x&&(r[T]=_.x-1),0===b.x&&0===b.z&&(r[T]=C/2/Math.PI+.5)}function g(_){return Math.atan2(_.z,-_.x)}function y(_){return Math.atan2(-_.y,Math.sqrt(_.x*_.x+_.z*_.z))}(function o(_){const T=new E,b=new E,C=new E;for(let L=0;L<t.length;L+=3)p(t[L+0],T),p(t[L+1],b),p(t[L+2],C),l(T,b,C,_)})(i),function c(_){const T=new E;for(let b=0;b<s.length;b+=3)T.x=s[b+0],T.y=s[b+1],T.z=s[b+2],T.normalize().multiplyScalar(_),s[b+0]=T.x,s[b+1]=T.y,s[b+2]=T.z}(n),function h(){const _=new E;for(let T=0;T<s.length;T+=3){_.x=s[T+0],_.y=s[T+1],_.z=s[T+2];const b=g(_)/2/Math.PI+.5,C=y(_)/Math.PI+.5;r.push(b,1-C)}(function v(){const _=new E,T=new E,b=new E,C=new E,L=new ne,F=new ne,S=new ne;for(let R=0,B=0;R<s.length;R+=9,B+=6){_.set(s[R+0],s[R+1],s[R+2]),T.set(s[R+3],s[R+4],s[R+5]),b.set(s[R+6],s[R+7],s[R+8]),L.set(r[B+0],r[B+1]),F.set(r[B+2],r[B+3]),S.set(r[B+4],r[B+5]),C.copy(_).add(T).add(b).divideScalar(3);const k=g(C);m(L,B+0,_,k),m(F,B+2,T,k),m(S,B+4,b,k)}})(),function d(){for(let _=0;_<r.length;_+=6){const T=r[_+0],b=r[_+2],C=r[_+4],L=Math.max(T,b,C),F=Math.min(T,b,C);L>.9&&F<.1&&(T<.2&&(r[_+0]+=1),b<.2&&(r[_+2]+=1),C<.2&&(r[_+4]+=1))}}()}(),this.setAttribute("position",new Oe(s,3)),this.setAttribute("normal",new Oe(s.slice(),3)),this.setAttribute("uv",new Oe(r,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new rs(e.vertices,e.indices,e.radius,e.details)}}class Io extends rs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Io(e.radius,e.detail)}}class Ir extends ct{constructor(e=1,t=32,n=16,i=0,s=2*Math.PI,r=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(r+o,Math.PI);let c=0;const h=[],d=new E,f=new E,p=[],v=[],m=[],g=[];for(let y=0;y<=n;y++){const _=[],T=y/n;let b=0;0==y&&0==r?b=.5/t:y==n&&l==Math.PI&&(b=-.5/t);for(let C=0;C<=t;C++){const L=C/t;d.x=-e*Math.cos(i+L*s)*Math.sin(r+T*o),d.y=e*Math.cos(r+T*o),d.z=e*Math.sin(i+L*s)*Math.sin(r+T*o),v.push(d.x,d.y,d.z),f.copy(d).normalize(),m.push(f.x,f.y,f.z),g.push(L+b,1-T),_.push(c++)}h.push(_)}for(let y=0;y<n;y++)for(let _=0;_<t;_++){const T=h[y][_+1],b=h[y][_],C=h[y+1][_],L=h[y+1][_+1];(0!==y||r>0)&&p.push(T,b,L),(y!==n-1||l<Math.PI)&&p.push(b,C,L)}this.setIndex(p),this.setAttribute("position",new Oe(v,3)),this.setAttribute("normal",new Oe(m,3)),this.setAttribute("uv",new Oe(g,2))}static fromJSON(e){return new Ir(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ru extends Bn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Pe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class yc extends Bn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Pe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=cn,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Iu extends yc{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ne(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return $t(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Pe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Pe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Pe(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Nu extends Bn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Pe(16777215),this.specular=new Pe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=cn,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Du extends Bn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=cn,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Fu extends Bn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ht={arraySlice:function(a,e,t){return Ht.isTypedArray(a)?new a.constructor(a.subarray(e,void 0!==t?t:a.length)):a.slice(e,t)},convertArray:function(a,e,t){return!a||!t&&a.constructor===e?a:"number"==typeof e.BYTES_PER_ELEMENT?new e(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){const t=a.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(function e(i,s){return a[i]-a[s]}),n},sortedArray:function(a,e,t){const n=a.length,i=new a.constructor(n);for(let s=0,r=0;r!==n;++s){const o=t[s]*e;for(let l=0;l!==e;++l)i[r++]=a[o+l]}return i},flattenJSON:function(a,e,t,n){let i=1,s=a[0];for(;void 0!==s&&void 0===s[n];)s=a[i++];if(void 0===s)return;let r=s[n];if(void 0!==r)if(Array.isArray(r))do{r=s[n],void 0!==r&&(e.push(s.time),t.push.apply(t,r)),s=a[i++]}while(void 0!==s);else if(void 0!==r.toArray)do{r=s[n],void 0!==r&&(e.push(s.time),r.toArray(t,t.length)),s=a[i++]}while(void 0!==s);else do{r=s[n],void 0!==r&&(e.push(s.time),t.push(r)),s=a[i++]}while(void 0!==s)},subclip:function(a,e,t,n,i=30){const s=a.clone();s.name=e;const r=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),d=[],f=[];for(let p=0;p<c.times.length;++p){const v=c.times[p]*i;if(!(v<t||v>=n)){d.push(c.times[p]);for(let m=0;m<h;++m)f.push(c.values[p*h+m])}}0!==d.length&&(c.times=Ht.convertArray(d,c.times.constructor),c.values=Ht.convertArray(f,c.values.constructor),r.push(c))}s.tracks=r;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(a,e=0,t=a,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let r=0;r<i;++r){const o=t.tracks[r],l=o.ValueTypeName;if("bool"===l||"string"===l)continue;const c=a.tracks.find(function(y){return y.name===o.name&&y.ValueTypeName===l});if(void 0===c)continue;let h=0;const d=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=d/3);let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);const v=o.times.length-1;let m;if(s<=o.times[0])m=Ht.arraySlice(o.values,h,d-h);else if(s>=o.times[v]){const y=v*d+h;m=Ht.arraySlice(o.values,y,y+d-h)}else{const y=o.createInterpolant(),_=h,T=d-h;y.evaluate(s),m=Ht.arraySlice(y.resultBuffer,_,T)}"quaternion"===l&&(new Mn).fromArray(m).normalize().conjugate().toArray(m);const g=c.times.length;for(let y=0;y<g;++y){const _=y*p+f;if("quaternion"===l)Mn.multiplyQuaternionsFlat(c.values,_,m,0,c.values,_);else{const T=p-2*f;for(let b=0;b<T;++b)c.values[_+b]-=m[b]}}}return a.blendMode=2501,a}};class Do{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let r;n:{i:if(!(e<i)){for(let o=n+2;;){if(void 0===i){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(s=i,i=t[++n],e<i)break t}r=t.length;break n}if(e>=s)break e;{const o=t[1];e<o&&(n=2,s=o);for(let l=n-2;;){if(void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}r=n,n=0}}for(;n<r;){const o=n+r>>>1;e<t[o]?r=o:n=o+1}if(i=t[n],s=t[n-1],void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let r=0;r!==i;++r)t[r]=n[s+r];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class x0 extends Do{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,r=e+1,o=i[s],l=i[r];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:s=e,o=2*t-n;break;case 2402:s=i.length-2,o=t+i[s]-i[s+1];break;default:s=e,o=n}if(void 0===l)switch(this.getSettings_().endingEnd){case 2401:r=e,l=2*n-t;break;case 2402:r=1,l=n+i[1]-i[0];break;default:r=e-1,l=t}const c=.5*(n-t),h=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(l-n),this._offsetPrev=s*h,this._offsetNext=r*h}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=this._offsetPrev,d=this._offsetNext,f=this._weightPrev,p=this._weightNext,v=(n-t)/(i-t),m=v*v,g=m*v,y=-f*g+2*f*m-f*v,_=(1+f)*g+(-1.5-2*f)*m+(-.5+f)*v+1,T=(-1-p)*g+(1.5+p)*m+.5*v,b=p*g-p*m;for(let C=0;C!==o;++C)s[C]=y*r[h+C]+_*r[c+C]+T*r[l+C]+b*r[d+C];return s}}class Ou extends Do{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=(n-t)/(i-t),d=1-h;for(let f=0;f!==o;++f)s[f]=r[c+f]*d+r[l+f]*h;return s}}class y0 extends Do{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class hi{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ht.convertArray(t,this.TimeBufferType),this.values=Ht.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ht.convertArray(e.times,Array),values:Ht.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new y0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ou(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new x0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Wi:t=this.InterpolantFactoryMethodDiscrete;break;case ji:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Wi;case this.InterpolantFactoryMethodLinear:return ji;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,r=i-1;for(;s!==i&&n[s]<e;)++s;for(;-1!==r&&n[r]>t;)--r;if(++r,0!==s||r!==i){s>=r&&(r=Math.max(r,1),s=r-1);const o=this.getValueSize();this.times=Ht.arraySlice(n,s,r),this.values=Ht.arraySlice(this.values,s*o,r*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let o=0;o!==s;o++){const l=n[o];if("number"==typeof l&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(null!==r&&r>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,r),e=!1;break}r=l}if(void 0!==i&&Ht.isTypedArray(i))for(let o=0,l=i.length;o!==l;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=Ht.arraySlice(this.times),t=Ht.arraySlice(this.values),n=this.getValueSize(),i=2302===this.getInterpolation(),s=e.length-1;let r=1;for(let o=1;o<s;++o){let l=!1;const c=e[o];if(c!==e[o+1]&&(1!==o||c!==e[0]))if(i)l=!0;else{const d=o*n,f=d-n,p=d+n;for(let v=0;v!==n;++v){const m=t[d+v];if(m!==t[f+v]||m!==t[p+v]){l=!0;break}}}if(l){if(o!==r){e[r]=e[o];const d=o*n,f=r*n;for(let p=0;p!==n;++p)t[f+p]=t[d+p]}++r}}if(s>0){e[r]=e[s];for(let o=s*n,l=r*n,c=0;c!==n;++c)t[l+c]=t[o+c];++r}return r!==e.length?(this.times=Ht.arraySlice(e,0,r),this.values=Ht.arraySlice(t,0,r*n)):(this.times=e,this.values=t),this}clone(){const e=Ht.arraySlice(this.times,0),t=Ht.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}hi.prototype.TimeBufferType=Float32Array,hi.prototype.ValueBufferType=Float32Array,hi.prototype.DefaultInterpolation=ji;class Nr extends hi{}Nr.prototype.ValueTypeName="bool",Nr.prototype.ValueBufferType=Array,Nr.prototype.DefaultInterpolation=Wi,Nr.prototype.InterpolantFactoryMethodLinear=void 0,Nr.prototype.InterpolantFactoryMethodSmooth=void 0;class zu extends hi{}zu.prototype.ValueTypeName="color";class Fo extends hi{}Fo.prototype.ValueTypeName="number";class _0 extends Do{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,o=this.valueSize,l=(n-t)/(i-t);let c=e*o;for(let h=c+o;c!==h;c+=4)Mn.slerpFlat(s,0,r,c-o,r,c,l);return s}}class Dr extends hi{InterpolantFactoryMethodLinear(e){return new _0(this.times,this.values,this.getValueSize(),e)}}Dr.prototype.ValueTypeName="quaternion",Dr.prototype.DefaultInterpolation=ji,Dr.prototype.InterpolantFactoryMethodSmooth=void 0;class Fr extends hi{}Fr.prototype.ValueTypeName="string",Fr.prototype.ValueBufferType=Array,Fr.prototype.DefaultInterpolation=Wi,Fr.prototype.InterpolantFactoryMethodLinear=void 0,Fr.prototype.InterpolantFactoryMethodSmooth=void 0;class Oo extends hi{}Oo.prototype.ValueTypeName="vector";class zo{constructor(e,t=-1,n,i=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Rn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let r=0,o=n.length;r!==o;++r)t.push(b0(n[r]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,r=n.length;s!==r;++s)t.push(hi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,r=[];for(let o=0;o<s;o++){let l=[],c=[];l.push((o+s-1)%s,o,(o+1)%s),c.push(0,1,0);const h=Ht.getKeyframeOrder(l);l=Ht.sortedArray(l,1,h),c=Ht.sortedArray(c,1,h),!i&&0===l[0]&&(l.push(s),c.push(c[0])),r.push(new Fo(".morphTargetInfluences["+t[o].name+"]",l,c).scale(1/n))}return new this(e,-1,r)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],h=c.name.match(s);if(h&&h.length>1){const d=h[1];let f=i[d];f||(i[d]=f=[]),f.push(c)}}const r=[];for(const o in i)r.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return r}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(d,f,p,v,m){if(0!==p.length){const g=[],y=[];Ht.flattenJSON(p,g,y,v),0!==g.length&&m.push(new d(f,g,y))}},i=[],s=e.name||"default",r=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let d=0;d<c.length;d++){const f=c[d].keys;if(f&&0!==f.length)if(f[0].morphTargets){const p={};let v;for(v=0;v<f.length;v++)if(f[v].morphTargets)for(let m=0;m<f[v].morphTargets.length;m++)p[f[v].morphTargets[m]]=-1;for(const m in p){const g=[],y=[];for(let _=0;_!==f[v].morphTargets.length;++_){const T=f[v];g.push(T.time),y.push(T.morphTarget===m?1:0)}i.push(new Fo(".morphTargetInfluence["+m+"]",g,y))}l=p.length*r}else{const p=".bones["+t[d].name+"]";n(Oo,p+".position",f,"pos",i),n(Dr,p+".quaternion",f,"rot",i),n(Oo,p+".scale",f,"scl",i)}}return 0===i.length?null:new this(s,l,i,o)}resetDuration(){let t=0;for(let n=0,i=this.tracks.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function b0(a){if(void 0===a.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function M0(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Fo;case"vector":case"vector2":case"vector3":case"vector4":return Oo;case"color":return zu;case"quaternion":return Dr;case"bool":case"boolean":return Nr;case"string":return Fr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(a.type);if(void 0===a.times){const t=[],n=[];Ht.flattenJSON(a.keys,t,n,"value"),a.times=t,a.values=n}return void 0!==e.parse?e.parse(a):new e(a.name,a.times,a.values,a.interpolation)}const Or={enabled:!1,files:{},add:function(a,e){!1!==this.enabled&&(this.files[a]=e)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};class _c{constructor(e,t,n){const i=this;let l,s=!1,r=0,o=0;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){o++,!1===s&&void 0!==i.onStart&&i.onStart(h,r,o),s=!0},this.itemEnd=function(h){r++,void 0!==i.onProgress&&i.onProgress(h,r,o),r===o&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(h){void 0!==i.onError&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,d){return c.push(h,d),this},this.removeHandler=function(h){const d=c.indexOf(h);return-1!==d&&c.splice(d,2),this},this.getHandler=function(h){for(let d=0,f=c.length;d<f;d+=2){const p=c[d],v=c[d+1];if(p.global&&(p.lastIndex=0),p.test(h))return v}return null}}}const Bu=new _c;class Ns{constructor(e){this.manager=void 0!==e?e:Bu,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Ii={};class Ni extends Ns{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Or.get(e);if(void 0!==s)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(void 0!==Ii[e])return void Ii[e].push({onLoad:t,onProgress:n,onError:i});Ii[e]=[],Ii[e].push({onLoad:t,onProgress:n,onError:i});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(r).then(c=>{if(200===c.status||0===c.status){if(0===c.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||void 0===c.body||void 0===c.body.getReader)return c;const h=Ii[e],d=c.body.getReader(),f=c.headers.get("Content-Length"),p=f?parseInt(f):0,v=0!==p;let m=0;const g=new ReadableStream({start(y){!function _(){d.read().then(({done:T,value:b})=>{if(T)y.close();else{m+=b.byteLength;const C=new ProgressEvent("progress",{lengthComputable:v,loaded:m,total:p});for(let L=0,F=h.length;L<F;L++){const S=h[L];S.onProgress&&S.onProgress(C)}y.enqueue(b),_()}})}()}});return new Response(g)}throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>(new DOMParser).parseFromString(h,o));case"json":return c.json();default:if(void 0===o)return c.text();{const d=/charset="?([^;"\s]*)"?/i.exec(o),f=d&&d[1]?d[1].toLowerCase():void 0,p=new TextDecoder(f);return c.arrayBuffer().then(v=>p.decode(v))}}}).then(c=>{Or.add(e,c);const h=Ii[e];delete Ii[e];for(let d=0,f=h.length;d<f;d++){const p=h[d];p.onLoad&&p.onLoad(c)}}).catch(c=>{const h=Ii[e];if(void 0===h)throw this.manager.itemError(e),c;delete Ii[e];for(let d=0,f=h.length;d<f;d++){const p=h[d];p.onError&&p.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class el extends Ns{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Or.get(e);if(void 0!==r)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const o=Ms("img");function l(){h(),Or.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(d){h(),i&&i(d),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class S0 extends Ns{constructor(e){super(e)}load(e,t,n,i){const s=new ya,r=new el(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let o=0;function l(c){r.load(e[c],function(h){s.images[c]=h,o++,6===o&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return s}}class w0 extends Ns{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new Er,o=new Ni(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(s.withCredentials),o.load(e,function(l){const c=s.parse(l);!c||(void 0!==c.image?r.image=c.image:void 0!==c.data&&(r.image.width=c.width,r.image.height=c.height,r.image.data=c.data),r.wrapS=void 0!==c.wrapS?c.wrapS:dn,r.wrapT=void 0!==c.wrapT?c.wrapT:dn,r.magFilter=void 0!==c.magFilter?c.magFilter:Ft,r.minFilter=void 0!==c.minFilter?c.minFilter:Ft,r.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.encoding&&(r.encoding=c.encoding),void 0!==c.flipY&&(r.flipY=c.flipY),void 0!==c.format&&(r.format=c.format),void 0!==c.type&&(r.type=c.type),void 0!==c.mipmaps&&(r.mipmaps=c.mipmaps,r.minFilter=mn),1===c.mipmapCount&&(r.minFilter=Ft),void 0!==c.generateMipmaps&&(r.generateMipmaps=c.generateMipmaps),r.needsUpdate=!0,t&&t(r,c))},n,i),r}}class T0 extends Ns{constructor(e){super(e)}load(e,t,n,i){const s=new Wn,r=new el(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(o){s.image=o,s.needsUpdate=!0,void 0!==t&&t(s)},n,i),s}}class zr extends Fe{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Pe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}class ku extends zr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Fe.DefaultUp),this.updateMatrix(),this.groundColor=new Pe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Uu=new Qe,Vu=new E,Gu=new E;class Mc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ne(512,512),this.map=null,this.mapPass=null,this.matrix=new Qe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Xl,this._frameExtents=new ne(1,1),this._viewportCount=1,this._viewports=[new Tt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Vu.setFromMatrixPosition(e.matrixWorld),t.position.copy(Vu),Gu.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Gu),t.updateMatrixWorld(),Uu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Uu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class A0 extends Mc{constructor(){super(new pn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=2*rr*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Hu extends zr{constructor(e,t,n=0,i=Math.PI/3,s=0,r=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Fe.DefaultUp),this.updateMatrix(),this.target=new Fe,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.shadow=new A0}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Wu=new Qe,Bo=new E,bc=new E;class C0 extends Mc{constructor(){super(new pn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ne(4,2),this._viewportCount=6,this._viewports=[new Tt(2,1,1,1),new Tt(0,1,1,1),new Tt(3,1,1,1),new Tt(1,1,1,1),new Tt(3,0,1,1),new Tt(1,0,1,1)],this._cubeDirections=[new E(1,0,0),new E(-1,0,0),new E(0,0,1),new E(0,0,-1),new E(0,1,0),new E(0,-1,0)],this._cubeUps=[new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,0,1),new E(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Bo.setFromMatrixPosition(e.matrixWorld),n.position.copy(Bo),bc.copy(n.position),bc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(bc),n.updateMatrixWorld(),i.makeTranslation(-Bo.x,-Bo.y,-Bo.z),Wu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Wu)}}class ju extends zr{constructor(e,t,n=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new C0}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class E0 extends Mc{constructor(){super(new Ma(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Xu extends zr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Fe.DefaultUp),this.updateMatrix(),this.target=new Fe,this.shadow=new E0}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class qu extends zr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Yu extends zr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class wc{static decodeText(e){if(typeof TextDecoder<"u")return(new TextDecoder).decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Zu extends ct{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class N0 extends Ns{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Or.get(e);if(void 0!==r)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){Or.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}class td{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=nd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=nd();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function nd(){return(typeof performance>"u"?Date:performance).now()}const Tc="\\[\\]\\.:\\/",z0=new RegExp("["+Tc+"]","g"),Ac="[^"+Tc+"]",B0="[^"+Tc.replace("\\.","")+"]",H0=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Ac)+/(WCOD+)?/.source.replace("WCOD",B0)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ac)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ac)+"$"),W0=["material","materials","bones"];class j0{constructor(e,t,n){const i=n||Ut.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const i=this._bindings[this._targetGroup.nCachedObjects_];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}let Ut=(()=>{class a{constructor(t,n,i){this.path=n,this.parsedPath=i||a.parseTrackName(n),this.node=a.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,n,i){return t&&t.isAnimationObjectGroup?new a.Composite(t,n,i):new a(t,n,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(z0,"")}static parseTrackName(t){const n=H0.exec(t);if(null===n)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},s=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==s&&-1!==s){const r=i.nodeName.substring(s+1);-1!==W0.indexOf(r)&&(i.nodeName=i.nodeName.substring(0,s),i.objectName=r)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,n){if(void 0===n||""===n||"."===n||-1===n||n===t.name||n===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(n);if(void 0!==i)return i}if(t.children){const i=function(r){for(let o=0;o<r.length;o++){const l=r[o];if(l.name===n||l.uuid===n)return l;const c=i(l.children);if(c)return c}return null},s=i(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,n){t[n]=this.targetObject[this.propertyName]}_getValue_array(t,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)t[n++]=i[s]}_getValue_arrayElement(t,n){t[n]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,n){this.resolvedProperty.toArray(t,n)}_setValue_direct(t,n){this.targetObject[this.propertyName]=t[n]}_setValue_direct_setNeedsUpdate(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=t[n++]}_setValue_array_setNeedsUpdate(t,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=t[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,n){this.resolvedProperty[this.propertyIndex]=t[n]}_setValue_arrayElement_setNeedsUpdate(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,n){this.resolvedProperty.fromArray(t,n)}_setValue_fromArray_setNeedsUpdate(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,n){this.bind(),this.getValue(t,n)}_setValue_unbound(t,n){this.bind(),this.setValue(t,n)}bind(){let t=this.node;const n=this.parsedPath,i=n.objectName,s=n.propertyName;let r=n.propertyIndex;if(t||(t=a.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let h=n.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let d=0;d<t.length;d++)if(t[d].name===h){h=d;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==h){if(void 0===t[h])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[h]}}const o=t[s];if(void 0===o)return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n.nodeName+"."+s+" but it wasn't found.",t);let l=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?l=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(l=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===s){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=s;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}return a.Composite=j0,a})();Ut.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ut.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ut.prototype.GetterByBindingType=[Ut.prototype._getValue_direct,Ut.prototype._getValue_array,Ut.prototype._getValue_arrayElement,Ut.prototype._getValue_toArray],Ut.prototype.SetterByBindingTypeAndVersioning=[[Ut.prototype._setValue_direct,Ut.prototype._setValue_direct_setNeedsUpdate,Ut.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ut.prototype._setValue_array,Ut.prototype._setValue_array_setNeedsUpdate,Ut.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ut.prototype._setValue_arrayElement,Ut.prototype._setValue_arrayElement_setNeedsUpdate,Ut.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ut.prototype._setValue_fromArray,Ut.prototype._setValue_fromArray_setNeedsUpdate,Ut.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Cc{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Cc(void 0===this.value.clone?this.value:this.value.clone())}}class Y0{constructor(e,t,n=0,i=1/0){this.ray=new fr(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new N,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Ec(e,this,n,t),n.sort(rd),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Ec(e[i],this,n,t);return n.sort(rd),n}}function rd(a,e){return a.distance-e.distance}function Ec(a,e,t,n){if(a.layers.test(e.layers)&&a.raycast(e,t),!0===n){const i=a.children;for(let s=0,r=i.length;s<r;s++)Ec(i[s],e,t,!0)}}class Z0{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos($t(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class J0 extends Na{constructor(e=10,t=10,n=4473924,i=8947848){n=new Pe(n),i=new Pe(i);const s=t/2,r=e/t,o=e/2,l=[],c=[];for(let f=0,p=0,v=-o;f<=t;f++,v+=r){l.push(-o,0,v,o,0,v),l.push(v,0,-o,v,0,o);const m=f===s?n:i;m.toArray(c,p),p+=3,m.toArray(c,p),p+=3,m.toArray(c,p),p+=3,m.toArray(c,p),p+=3}const h=new ct;h.setAttribute("position",new Oe(l,3)),h.setAttribute("color",new Oe(c,3)),super(h,new In({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}const{floatView:md,uint32View:gd,baseTable:K0,shiftTable:Q0,mantissaTable:ev,exponentTable:tv,offsetTable:nv}=iv();function iv(){const a=new ArrayBuffer(4),e=new Float32Array(a),t=new Uint32Array(a),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[256|l]=32768,i[l]=24,i[256|l]=24):c<-14?(n[l]=1024>>-c-14,n[256|l]=1024>>-c-14|32768,i[l]=-c-1,i[256|l]=-c-1):c<=15?(n[l]=c+15<<10,n[256|l]=c+15<<10|32768,i[l]=13,i[256|l]=13):c<128?(n[l]=31744,n[256|l]=64512,i[l]=24,i[256|l]=24):(n[l]=31744,n[256|l]=64512,i[l]=13,i[256|l]=13)}const s=new Uint32Array(2048),r=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;0==(8388608&c);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)r[l]=l<<23;r[31]=1199570944,r[32]=2147483648;for(let l=33;l<63;++l)r[l]=2147483648+(l-32<<23);r[63]=3347054592;for(let l=1;l<64;++l)32!==l&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:r,offsetTable:o}}var ov=Object.freeze({__proto__:null,toHalfFloat:function sv(a){Math.abs(a)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),a=$t(a,-65504,65504),md[0]=a;const e=gd[0],t=e>>23&511;return K0[t]+((8388607&e)>>Q0[t])},fromHalfFloat:function rv(a){const e=a>>10;return gd[0]=ev[nv[e]+(1023&a)]+tv[e],md[0]}});class av extends Kn{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class lv extends ra{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:D}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=D)},1519:(Yn,Wt,fe)=>{function Le(mt,wt,yt,ot,Ve,je,gt){try{var qt=mt[je](gt),tn=qt.value}catch(Nn){return void yt(Nn)}qt.done?wt(tn):Promise.resolve(tn).then(ot,Ve)}function D(mt){return function(){var wt=this,yt=arguments;return new Promise(function(ot,Ve){var je=mt.apply(wt,yt);function gt(tn){Le(je,ot,Ve,gt,qt,"next",tn)}function qt(tn){Le(je,ot,Ve,gt,qt,"throw",tn)}gt(void 0)})}}fe.d(Wt,{Z:()=>D})}}]);