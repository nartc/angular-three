// GENERATED - AngularThree v<%= ngtVersion %>
import * as THREE from 'three';
import { Component } from '@angular/core';
import { injectArgs, NgtInstance, provideInstanceRef, proxify<% for (const ngtType of ngtTypes) { %>, <%= ngtType %><% } %><% if (hasInput) { %>, NgtObservableInput<% } %> } from 'angular-three';
import { NGT_INSTANCE_INPUTS<% if (hasObject3D) { %>, NGT_INSTANCE_OUTPUTS, NGT_OBJECT3D_INPUTS<% } %> } from '../common';

@Component({
    selector: 'ngt-<%= fileName %>',
    standalone: true,
    template: '<ng-content></ng-content>',
    hostDirectives: [{ directive: NgtInstance, inputs: NGT_INSTANCE_INPUTS<% if (hasObject3D) { %>, outputs: NGT_INSTANCE_OUTPUTS<% } %> }],
    providers: [provideInstanceRef(Ngt<%= name %>)],<% if (hasInput) { %>
    inputs: [...getInputs()<% if (hasObject3D) { %>, ...NGT_OBJECT3D_INPUTS <% } %>]<% } %>
})
export class Ngt<%= name %> extends THREE.<%= name %> {
    constructor() {
        super(...(injectArgs<typeof THREE.<%= name %>>(<% if (!isArgsRequired) { %>{ optional: true }<% } %>) <% if (!isArgsRequired) { %>|| []<% } %>));
        return proxify(this);
    }
    <% for (const input of staticInputs) { %>
    static ngAcceptInputType_<%= input.name %>: NgtObservableInput<<%- input.type %>><% if (input.isOptional) { %>| undefined<% } %>;<% } %>
}
<% if (hasInput) { %>
function getInputs() {
  return [<% for (const input of inputs) { %>
      '<%= input.name %>',<% } %>
  ];
}<% } %>
