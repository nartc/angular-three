// GENERATED - AngularThree v<%= ngtVersion %>
import {
    NGT_INSTANCE_INPUTS, NGT_INSTANCE_OUTPUTS, NgtInstance,
    provideInstanceRef,
    proxify<% for (const ngtType of ngtTypes) { %>
    , <%= ngtType %><% } %><% if (hasInput) { %>
    , NgtObservableInput<% } %><% if (args) { %>
    , injectArgs<% } %>
} from 'angular-three';
import { Component } from '@angular/core';
import * as THREE from 'three';

@Component({
    selector: 'ngt-<%= fileName %>',
    standalone: true,
    template: '<ng-content></ng-content>',
    hostDirectives: [{ directive: NgtInstance, inputs: NGT_INSTANCE_INPUTS, outputs: NGT_INSTANCE_OUTPUTS }],
    providers: [provideInstanceRef(Ngt<%= name %>)],<% if (hasInput) { %>
    inputs: [...getInputs()],<% } %>
})
export class Ngt<%= name %> extends THREE.<%= name %> {
    constructor() {<% if (!args) { %>
        super();<% } else { %>
        super(...(injectArgs<typeof THREE.<%= name %>>(<% if (args.optionalArgs) { %>{ optional: true }<% } %>))<% if (args.optionalArgs) { %>|| <%- args.optionalArgs %><% } %>);<% } %>
        return proxify(this<% if (!proxyOptions) { %>);<% } else { %>, {
            <% if (proxyOptions.created) { %>created: <%- proxyOptions.created %>,<% } %>
            <% if (proxyOptions.attach) { %>attach: <%- proxyOptions.attach %>,<% } %>
        });<% } %>
    }
    <% for (const input of inputs) { %>
    static ngAcceptInputType_<%= input.name %>: NgtObservableInput<<%- input.type %>><% if (input.isOptional) { %>| undefined<% } %>;<% } %>
}
<% if (hasInput) { %>
function getInputs() {
   return [<% for (const input of inputs) { %>
       '<%= input.name %>',<% } %>
   ];
}
<% } %>
