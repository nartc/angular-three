"use strict";(self.webpackChunklibs_documentations=self.webpackChunklibs_documentations||[]).push([[473],{9613:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7412:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(2081),o=n(4604),a=(n(9496),n(9613)),i=["components"],s={id:"services",title:"Services",sidebar_label:"Services"},l=void 0,c={unversionedId:"core/services",id:"core/services",title:"Services",description:"| name      | scope            |",source:"@site/docs/core/services.mdx",sourceDirName:"core",slug:"/core/services",permalink:"/docs/core/services",draft:!1,editUrl:"https://github.com/nartc/angular-three/tree/main/libs/documentations/docs/docs/core/services.mdx",tags:[],version:"current",frontMatter:{id:"services",title:"Services",sidebar_label:"Services"},sidebar:"docs",previous:{title:"Store",permalink:"/docs/core/store"},next:{title:"Directives",permalink:"/docs/core/directives"}},p={},u=[{value:"NgtResize",id:"ngtresize",level:2},{value:"NgtLoader",id:"ngtloader",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"name"),(0,a.kt)("th",{parentName:"tr",align:null},"scope"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NgtResize"),(0,a.kt)("td",{parentName:"tr",align:null},"Any component")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NgtLoader"),(0,a.kt)("td",{parentName:"tr",align:null},"Root (singleton)")))),(0,a.kt)("h2",{id:"ngtresize"},"NgtResize"),(0,a.kt)("p",null,"This service is a utility service that can be used on any component that wants to watch for resize events."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n  /* ... */\n  providers: [NgtResize],\n})\nexport class SomeComponent {\n  constructor(\n    @Inject(NgtResize)\n    private resizeResult$: Observable<NgtResizeResult>\n  ) {\n    this.resizeResult$.subscribe(); // emits everytime the window/host is resized\n  }\n}\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"NgtResizeResult")," has the following interface:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface NgtResizeResult {\n  readonly entries: ReadonlyArray<ResizeObserverEntry>;\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  readonly top: number;\n  readonly right: number;\n  readonly bottom: number;\n  readonly left: number;\n  readonly dpr: number;\n}\n")),(0,a.kt)("p",null,"The default options are:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  box: 'content-box',\n  scroll: false,\n  offsetSize: false,\n  debounce: 200,\n}\n")),(0,a.kt)("p",null,"We can provide our own options via ",(0,a.kt)("inlineCode",{parentName:"p"},"provideResizeOptions")," on the component that uses ",(0,a.kt)("inlineCode",{parentName:"p"},"NgtResize")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n  /* ... */\n  providers: [NgtResize, provideResizeOptions({ debounce: 500 })],\n})\nexport class SomeComponent {\n  constructor(\n    @Inject(NgtResize)\n    private resizeResult$: Observable<NgtResizeResult>\n  ) {\n    this.resizeResult$.subscribe(); // emits everytime the window/host is resized\n  }\n}\n")),(0,a.kt)("h2",{id:"ngtloader"},"NgtLoader"),(0,a.kt)("p",null,"This service is used to load external resources. This is recommended as it is type-safe as well as it has an internal caching mechanism."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"NgtLoader")," is a singleton and can be injected into any component regardless of ",(0,a.kt)("inlineCode",{parentName:"p"},"ngt-canvas")," or not."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export class SomeComponent {\n  model$ = this.loader.use(GTLFLoader, 'path/to/model.gltf'); // Observable<GLTF>\n\n  constructor(private loader: NgtLoader) {}\n}\n")))}m.isMDXComponent=!0}}]);