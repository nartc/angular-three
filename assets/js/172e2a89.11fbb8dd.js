"use strict";(self.webpackChunklibs_documentations=self.webpackChunklibs_documentations||[]).push([[488],{9613:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(n),f=a,m=u["".concat(c,".").concat(f)]||u[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9762:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var r=n(2081),a=n(4604),o=(n(9496),n(9613)),i=["components"],l={id:"additional-exports",title:"Additional Exports",sidebar_label:"Additional Exports"},c=void 0,d={unversionedId:"core/additional-exports",id:"core/additional-exports",title:"Additional Exports",description:"make",source:"@site/docs/core/additional-exports.mdx",sourceDirName:"core",slug:"/core/additional-exports",permalink:"/docs/core/additional-exports",draft:!1,editUrl:"https://github.com/nartc/angular-three/tree/main/libs/documentations/docs/docs/core/additional-exports.mdx",tags:[],version:"current",frontMatter:{id:"additional-exports",title:"Additional Exports",sidebar_label:"Additional Exports"},sidebar:"docs",previous:{title:"Pipes",permalink:"/docs/core/pipes"},next:{title:"Overview",permalink:"/docs/cannon/overview"}},s={},p=[{value:"<code>make</code>",id:"make",level:2},{value:"<code>is</code>",id:"is",level:2},{value:"<code>addCallback</code>",id:"addcallback",level:2},{value:"<code>addAfterCallback</code>",id:"addaftercallback",level:2},{value:"<code>addTailCallback</code>",id:"addtailcallback",level:2}],u={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"make"},(0,o.kt)("inlineCode",{parentName:"h2"},"make")),(0,o.kt)("p",null,"A collection of utility functions used to construct THREE objects like ",(0,o.kt)("inlineCode",{parentName:"p"},"THREE.Vector*"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"THREE.Color")," etc... from different arguments"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"make(THREE.Vector2, 10); // new THREE.Vector2(10, 10);\nmake(THREE.Vector2, [10, 20]); // new THREE.Vector2(10, 20);\nmake(THREE.Quaternion, [10, 10, 10, 10]); // new THREE.Quaternion(10, 10, 10, 10);\nmake(THREE.Color, 'black'); // new THREE.Color('black');\n")),(0,o.kt)("h2",{id:"is"},(0,o.kt)("inlineCode",{parentName:"h2"},"is")),(0,o.kt)("p",null,"A collection of utility functions used to assert object type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"is.ref(a); // checks if an object is a Ref\nis.object3d(a); // checks if an object is a THREE.Object3D\n\nis.camera(a); // checks if an object is a THREE.Camera\nis.perspective(a); // checks if an object is a THREE.PerspectiveCamera\nis.orthographic(a); // checks if an object is a THREE.OrthographicCamera\n\n// and more\n")),(0,o.kt)("h2",{id:"addcallback"},(0,o.kt)("inlineCode",{parentName:"h2"},"addCallback")),(0,o.kt)("p",null,"Add a ",(0,o.kt)("inlineCode",{parentName:"p"},"GlobalRenderCallback")," to be called ",(0,o.kt)("strong",{parentName:"p"},"before")," a render"),(0,o.kt)("h2",{id:"addaftercallback"},(0,o.kt)("inlineCode",{parentName:"h2"},"addAfterCallback")),(0,o.kt)("p",null,"Add a ",(0,o.kt)("inlineCode",{parentName:"p"},"GlobalRenderCallback")," to be called ",(0,o.kt)("strong",{parentName:"p"},"after")," a render"),(0,o.kt)("h2",{id:"addtailcallback"},(0,o.kt)("inlineCode",{parentName:"h2"},"addTailCallback")),(0,o.kt)("p",null,"Add a ",(0,o.kt)("inlineCode",{parentName:"p"},"GlobalRenderCallback")," to be called ",(0,o.kt)("strong",{parentName:"p"},"after")," rendering stops"))}f.isMDXComponent=!0}}]);