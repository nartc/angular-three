"use strict";(self.webpackChunklibs_documentations=self.webpackChunklibs_documentations||[]).push([[650],{9613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return y}});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),y=a,h=d["".concat(l,".").concat(y)]||d[y]||p[y]||c;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<c;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3069:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var r=n(2081),a=n(4604),c=(n(9496),n(9613)),i=["components"],o={id:"raycast-vehicle",title:"Raycast Vehicle",sidebar_label:"Raycast Vehicle"},l=void 0,s={unversionedId:"cannon/raycast-vehicle",id:"cannon/raycast-vehicle",title:"Raycast Vehicle",description:"To interact with Cannon RaycastVehicle API, we use NgtPhysicRaycastVehicle from @angular-three/cannon",source:"@site/docs/cannon/raycast-vehicle.mdx",sourceDirName:"cannon",slug:"/cannon/raycast-vehicle",permalink:"/docs/cannon/raycast-vehicle",draft:!1,editUrl:"https://github.com/nartc/angular-three/tree/main/libs/documentations/docs/docs/cannon/raycast-vehicle.mdx",tags:[],version:"current",frontMatter:{id:"raycast-vehicle",title:"Raycast Vehicle",sidebar_label:"Raycast Vehicle"},sidebar:"docs",previous:{title:"Ray",permalink:"/docs/cannon/ray"},next:{title:"Best practices",permalink:"/docs/advanced/practices/"}},u={},p=[{value:"RaycastVehicle Creator",id:"raycastvehicle-creator",level:2}],d={toc:p};function y(e){var t=e.components,n=(0,a.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"To interact with ",(0,c.kt)("a",{parentName:"p",href:"https://pmndrs.github.io/cannon-es/docs/classes/RaycastVehicle.html"},"Cannon RaycastVehicle API"),", we use ",(0,c.kt)("inlineCode",{parentName:"p"},"NgtPhysicRaycastVehicle")," from ",(0,c.kt)("inlineCode",{parentName:"p"},"@angular-three/cannon")),(0,c.kt)("h2",{id:"raycastvehicle-creator"},"RaycastVehicle Creator"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null},"name"),(0,c.kt)("th",{parentName:"tr",align:null},"description"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"useRaycastVehicle"),(0,c.kt)("td",{parentName:"tr",align:null},"Create a ",(0,c.kt)("inlineCode",{parentName:"td"},"RaycastVehicle")," which is a vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.")))),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"useRaycastVehicle")," returns a ",(0,c.kt)("inlineCode",{parentName:"p"},"NgtPhysicRaycastVehicleReturn")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"export interface NgtPhysicRaycastVehicleReturn {\n  ref: Ref<THREE.Object3D>;\n  api: NgtPhysicRaycastVehiclePublicApi;\n}\n\nexport interface NgtPhysicRaycastVehiclePublicApi {\n  applyEngineForce: (value: number, wheelIndex: number) => void;\n  setBrake: (brake: number, wheelIndex: number) => void;\n  setSteeringValue: (value: number, wheelIndex: number) => void;\n  sliding: {\n    subscribe: (callback: (sliding: boolean) => void) => void;\n  };\n}\n")))}y.isMDXComponent=!0}}]);