"use strict";(self.webpackChunklibs_documentations=self.webpackChunklibs_documentations||[]).push([[859],{9613:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7755:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return u}});var r=n(2081),i=n(4604),a=(n(9496),n(9613)),o=["components"],p={id:"pipes",title:"Pipes",sidebar_label:"Pipes"},l=void 0,s={unversionedId:"core/pipes",id:"core/pipes",title:"Pipes",description:"NgtPiPipe",source:"@site/docs/core/pipes.mdx",sourceDirName:"core",slug:"/core/pipes",permalink:"/docs/core/pipes",draft:!1,editUrl:"https://github.com/nartc/angular-three/tree/main/libs/documentations/docs/docs/core/pipes.mdx",tags:[],version:"current",frontMatter:{id:"pipes",title:"Pipes",sidebar_label:"Pipes"},sidebar:"docs",previous:{title:"Directives",permalink:"/docs/core/directives"},next:{title:"Additional Exports",permalink:"/docs/core/additional-exports"}},c={},u=[{value:"NgtPiPipe",id:"ngtpipipe",level:2},{value:"NgtRadianPipe",id:"ngtradianpipe",level:2},{value:"NgtSidePipe",id:"ngtsidepipe",level:2},{value:"NgtMathPipe",id:"ngtmathpipe",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"ngtpipipe"},"NgtPiPipe"),(0,a.kt)("p",null,"This pipe multiples a value with ",(0,a.kt)("inlineCode",{parentName:"p"},"Math.PI")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-mesh [rotation]="[-0.5 | pi, 0, 0]">\n  <ngt-plane-geometry></ngt-plane-geometry>\n</ngt-mesh>\n')),(0,a.kt)("h2",{id:"ngtradianpipe"},"NgtRadianPipe"),(0,a.kt)("p",null,"This pipe converts a value degree to radian"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-mesh [rotation]="[-90 | radian, 0, 0]">\n  <ngt-plane-geometry></ngt-plane-geometry>\n</ngt-mesh>\n')),(0,a.kt)("h2",{id:"ngtsidepipe"},"NgtSidePipe"),(0,a.kt)("p",null,"This pipe applies ",(0,a.kt)("inlineCode",{parentName:"p"},"THREE.DoubleSide"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"THREE.FrontSide"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"THREE.BackSide")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<ngt-mesh>\n  <ngt-plane-geometry></ngt-plane-geometry>\n  <ngt-mesh-basic-material [side]=\"'double' | side \"></ngt-mesh-basic-material>\n</ngt-mesh>\n")),(0,a.kt)("h2",{id:"ngtmathpipe"},"NgtMathPipe"),(0,a.kt)("p",null,"This pipe acts as a helper to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Math")," object in the template. When working with 3D scene, more often than not you will need to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Math")," object to calculate angles and such for objects."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<ngt-mesh [rotation]=\"[1 | math:'sin', 0, 0]\">\n  <ngt-plane-geometry></ngt-plane-geometry>\n</ngt-mesh>\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The value passed in the pipe will be used as arguments to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Math")," function. Eg: ",(0,a.kt)("inlineCode",{parentName:"p"},"1 | math:'sin'")," will return ",(0,a.kt)("inlineCode",{parentName:"p"},"Math.sin(1)"))))}d.isMDXComponent=!0}}]);