"use strict";(self.webpackChunklibs_documentations=self.webpackChunklibs_documentations||[]).push([[897],{9613:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(9496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(g,c(c({ref:n},l),{},{components:t})):r.createElement(g,c({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},500:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var r=t(2081),a=t(4604),o=(t(9496),t(9613)),c=["components"],i={id:"best-practices",title:"Best practices",sidebar_label:"Best practices"},s=void 0,p={unversionedId:"advanced/practices/best-practices",id:"advanced/practices/best-practices",title:"Best practices",description:"Use NgZone as needed",source:"@site/docs/advanced/practices/index.mdx",sourceDirName:"advanced/practices",slug:"/advanced/practices/",permalink:"/docs/advanced/practices/",draft:!1,editUrl:"https://github.com/nartc/angular-three/tree/main/libs/documentations/docs/docs/advanced/practices/index.mdx",tags:[],version:"current",frontMatter:{id:"best-practices",title:"Best practices",sidebar_label:"Best practices"},sidebar:"docs",previous:{title:"Raycast Vehicle",permalink:"/docs/cannon/raycast-vehicle"},next:{title:"Wrap existing component",permalink:"/docs/advanced/practices/wrap-existing-component"}},l={},u=[{value:"Use NgZone as needed",id:"use-ngzone-as-needed",level:2},{value:"Use a <code>SceneComponent</code>",id:"use-a-scenecomponent",level:2},{value:"Use <code>NgtComponentStore</code>",id:"use-ngtcomponentstore",level:2}],d={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"use-ngzone-as-needed"},"Use NgZone as needed"),(0,o.kt)("p",null,"Commonly, Angular reactivity is achieved by utilizing ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/angular/angular/tree/main/packages/zone.js"},"Zone.js")," and Angular Core has a wrapper service around Zone.js called ",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/api/core/NgZone"},"NgZone"),"."),(0,o.kt)("p",null,"In Angular Three, or any THREE.js applications, most of the actions happen inside of the root ",(0,o.kt)("inlineCode",{parentName:"p"},"<canvas>"),". Hence, Angular's automatic change detection via Zone.js is ",(0,o.kt)("em",{parentName:"p"},"mostly")," unnecessary. To opt-out of Zone.js in our custom components, we can inject ",(0,o.kt)("inlineCode",{parentName:"p"},"NgZone")," and run our logic in ",(0,o.kt)("inlineCode",{parentName:"p"},"runOutsideAngular()")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n  /*...*/\n})\nexport class SceneComponent {\n  constructor(private zone: NgZone) {}\n\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      /* do logic like setting up Physics */\n    });\n  }\n}\n")),(0,o.kt)("p",null,"Most common use-cases are setting up Physics or updating Object3D's options."),(0,o.kt)("h2",{id:"use-a-scenecomponent"},"Use a ",(0,o.kt)("inlineCode",{parentName:"h2"},"SceneComponent")),(0,o.kt)("p",null,"Everything in NGT needs to be rendered inside of a ",(0,o.kt)("inlineCode",{parentName:"p"},"<ngt-canvas>"),". It is recommended that we should have a ",(0,o.kt)("inlineCode",{parentName:"p"},"SceneComponent")," instead of laying out the Scene Graph directly under ",(0,o.kt)("inlineCode",{parentName:"p"},"<ngt-canvas>")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- instead of --\x3e\n<ngt-canvas>\n  <ngt-ambient-light></ngt-ambient-light>\n  <ngt-mesh></ngt-mesh>\n  <ngt-soba-orbit-controls></ngt-soba-orbit-controls>\n</ngt-canvas>\n\n\x3c!-- do this --\x3e\n\x3c!-- scene.component.html --\x3e\n<ngt-ambient-light></ngt-ambient-light>\n<ngt-mesh></ngt-mesh>\n<ngt-soba-orbit-controls></ngt-soba-orbit-controls>\n\n\x3c!-- app.component.html --\x3e\n<ngt-canvas>\n  <app-scene></app-scene>\n</ngt-canvas>\n")),(0,o.kt)("p",null,"The main reason is that there are some APIs (services) that are provided in ",(0,o.kt)("strong",{parentName:"p"},"root")," but there are some other APIs that are provided on the ",(0,o.kt)("inlineCode",{parentName:"p"},"<ngt-canvas>")," component. By placing the Scene Graph in a single ",(0,o.kt)("inlineCode",{parentName:"p"},"SceneComponent")," under ",(0,o.kt)("inlineCode",{parentName:"p"},"<ngt-canvas>"),", we can make sure that all APIs can be injected in that ",(0,o.kt)("strong",{parentName:"p"},"single SceneComponent")," regardless of where the APIs are provided."),(0,o.kt)("h2",{id:"use-ngtcomponentstore"},"Use ",(0,o.kt)("inlineCode",{parentName:"h2"},"NgtComponentStore")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"NgtComponentStore")," is a great way to make our component reactive and free of subscriptions. Check out ",(0,o.kt)("a",{parentName:"p",href:"../../core/component-store"},"NgtComponentStore documentation")))}m.isMDXComponent=!0}}]);